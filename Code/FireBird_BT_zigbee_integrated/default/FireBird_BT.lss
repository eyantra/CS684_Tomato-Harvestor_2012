
FireBird_BT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001de  00800200  00003b7e  00003c12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003b7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000016c  008003de  008003de  00003df0  2**0
                  ALLOC
  3 .debug_aranges 000000c0  00000000  00000000  00003df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000722  00000000  00000000  00003eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001389  00000000  00000000  000045d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005d9  00000000  00000000  0000595b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001c35  00000000  00000000  00005f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003f0  00000000  00000000  00007b6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005eb  00000000  00000000  00007f5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 be 12 	jmp	0x257c	; 0x257c <__vector_5>
      18:	0c 94 a1 12 	jmp	0x2542	; 0x2542 <__vector_6>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 42 01 	jmp	0x284	; 0x284 <__vector_25>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 7d 05 	jmp	0xafa	; 0xafa <__vector_51>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__vector_53>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	13 e0       	ldi	r17, 0x03	; 3
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee e7       	ldi	r30, 0x7E	; 126
      fc:	fb e3       	ldi	r31, 0x3B	; 59
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 3d       	cpi	r26, 0xDE	; 222
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	15 e0       	ldi	r17, 0x05	; 5
     110:	ae ed       	ldi	r26, 0xDE	; 222
     112:	b3 e0       	ldi	r27, 0x03	; 3
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	aa 34       	cpi	r26, 0x4A	; 74
     11a:	b1 07       	cpc	r27, r17
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	0e 94 06 02 	call	0x40c	; 0x40c <main>
     122:	0c 94 bd 1d 	jmp	0x3b7a	; 0x3b7a <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <Init_Devices>:
#include "GlobalVar.h"
#include "LCD.h"

/*Function to Initialize the Peripheral Devices*/
void Init_Devices(void)
{
     12a:	df 93       	push	r29
     12c:	cf 93       	push	r28
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
	Init_USART2();
     132:	0e 94 61 05 	call	0xac2	; 0xac2 <Init_USART2>
	Init_Motor_Peri();
     136:	0e 94 1a 10 	call	0x2034	; 0x2034 <Init_Motor_Peri>
	LCD_Init();
     13a:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <LCD_Init>
	adc_init();
     13e:	0e 94 50 11 	call	0x22a0	; 0x22a0 <adc_init>
	adc_pin_config();
     142:	0e 94 3d 11 	call	0x227a	; 0x227a <adc_pin_config>
	interrupt_right_init();
     146:	0e 94 f0 12 	call	0x25e0	; 0x25e0 <interrupt_right_init>
	right_position_encoder_init();
     14a:	0e 94 1c 13 	call	0x2638	; 0x2638 <right_position_encoder_init>
}
     14e:	cf 91       	pop	r28
     150:	df 91       	pop	r29
     152:	08 95       	ret

00000154 <uart0_init>:
// desired baud rate:9600
// actual baud rate:9600 (error 0.0%)
// char size: 8 bit
// parity: Disabled
void uart0_init(void)
{
     154:	df 93       	push	r29
     156:	cf 93       	push	r28
     158:	cd b7       	in	r28, 0x3d	; 61
     15a:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
     15c:	e1 ec       	ldi	r30, 0xC1	; 193
     15e:	f0 e0       	ldi	r31, 0x00	; 0
     160:	10 82       	st	Z, r1
 UCSR0A = 0x00;
     162:	e0 ec       	ldi	r30, 0xC0	; 192
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	10 82       	st	Z, r1
 UCSR0C = 0x06;
     168:	e2 ec       	ldi	r30, 0xC2	; 194
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	86 e0       	ldi	r24, 0x06	; 6
     16e:	80 83       	st	Z, r24
 UBRR0L = 0x5F; //set baud rate lo
     170:	e4 ec       	ldi	r30, 0xC4	; 196
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	8f e5       	ldi	r24, 0x5F	; 95
     176:	80 83       	st	Z, r24
 UBRR0H = 0x00; //set baud rate hi
     178:	e5 ec       	ldi	r30, 0xC5	; 197
     17a:	f0 e0       	ldi	r31, 0x00	; 0
     17c:	10 82       	st	Z, r1
 UCSR0B = 0x98;
     17e:	e1 ec       	ldi	r30, 0xC1	; 193
     180:	f0 e0       	ldi	r31, 0x00	; 0
     182:	88 e9       	ldi	r24, 0x98	; 152
     184:	80 83       	st	Z, r24
}
     186:	cf 91       	pop	r28
     188:	df 91       	pop	r29
     18a:	08 95       	ret

0000018c <send_status>:
int botId;

unsigned char data; 
// Pass the message to be passed as a string
void send_status(char msg[])
{
     18c:	df 93       	push	r29
     18e:	cf 93       	push	r28
     190:	00 d0       	rcall	.+0      	; 0x192 <send_status+0x6>
     192:	0f 92       	push	r0
     194:	cd b7       	in	r28, 0x3d	; 61
     196:	de b7       	in	r29, 0x3e	; 62
     198:	9c 83       	std	Y+4, r25	; 0x04
     19a:	8b 83       	std	Y+3, r24	; 0x03
	int i;
	UDR0 = 0x28;
     19c:	e6 ec       	ldi	r30, 0xC6	; 198
     19e:	f0 e0       	ldi	r31, 0x00	; 0
     1a0:	88 e2       	ldi	r24, 0x28	; 40
     1a2:	80 83       	st	Z, r24
	for(i = 0; msg[i]!=0; i++) {
     1a4:	1a 82       	std	Y+2, r1	; 0x02
     1a6:	19 82       	std	Y+1, r1	; 0x01
     1a8:	19 c0       	rjmp	.+50     	; 0x1dc <send_status+0x50>
		while ( !( UCSR0A & (1<<UDRE0)) );
     1aa:	e0 ec       	ldi	r30, 0xC0	; 192
     1ac:	f0 e0       	ldi	r31, 0x00	; 0
     1ae:	80 81       	ld	r24, Z
     1b0:	88 2f       	mov	r24, r24
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	80 72       	andi	r24, 0x20	; 32
     1b6:	90 70       	andi	r25, 0x00	; 0
     1b8:	00 97       	sbiw	r24, 0x00	; 0
     1ba:	b9 f3       	breq	.-18     	; 0x1aa <send_status+0x1e>
		UDR0 = msg[i];
     1bc:	a6 ec       	ldi	r26, 0xC6	; 198
     1be:	b0 e0       	ldi	r27, 0x00	; 0
     1c0:	29 81       	ldd	r18, Y+1	; 0x01
     1c2:	3a 81       	ldd	r19, Y+2	; 0x02
     1c4:	8b 81       	ldd	r24, Y+3	; 0x03
     1c6:	9c 81       	ldd	r25, Y+4	; 0x04
     1c8:	fc 01       	movw	r30, r24
     1ca:	e2 0f       	add	r30, r18
     1cc:	f3 1f       	adc	r31, r19
     1ce:	80 81       	ld	r24, Z
     1d0:	8c 93       	st	X, r24
// Pass the message to be passed as a string
void send_status(char msg[])
{
	int i;
	UDR0 = 0x28;
	for(i = 0; msg[i]!=0; i++) {
     1d2:	89 81       	ldd	r24, Y+1	; 0x01
     1d4:	9a 81       	ldd	r25, Y+2	; 0x02
     1d6:	01 96       	adiw	r24, 0x01	; 1
     1d8:	9a 83       	std	Y+2, r25	; 0x02
     1da:	89 83       	std	Y+1, r24	; 0x01
     1dc:	29 81       	ldd	r18, Y+1	; 0x01
     1de:	3a 81       	ldd	r19, Y+2	; 0x02
     1e0:	8b 81       	ldd	r24, Y+3	; 0x03
     1e2:	9c 81       	ldd	r25, Y+4	; 0x04
     1e4:	fc 01       	movw	r30, r24
     1e6:	e2 0f       	add	r30, r18
     1e8:	f3 1f       	adc	r31, r19
     1ea:	80 81       	ld	r24, Z
     1ec:	88 23       	and	r24, r24
     1ee:	e9 f6       	brne	.-70     	; 0x1aa <send_status+0x1e>
		while ( !( UCSR0A & (1<<UDRE0)) );
		UDR0 = msg[i];
	}
	while ( !( UCSR0A & (1<<UDRE0)) );
     1f0:	e0 ec       	ldi	r30, 0xC0	; 192
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	88 2f       	mov	r24, r24
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	80 72       	andi	r24, 0x20	; 32
     1fc:	90 70       	andi	r25, 0x00	; 0
     1fe:	00 97       	sbiw	r24, 0x00	; 0
     200:	b9 f3       	breq	.-18     	; 0x1f0 <send_status+0x64>
	UDR0 = 0x29;
     202:	e6 ec       	ldi	r30, 0xC6	; 198
     204:	f0 e0       	ldi	r31, 0x00	; 0
     206:	89 e2       	ldi	r24, 0x29	; 41
     208:	80 83       	st	Z, r24
}
     20a:	0f 90       	pop	r0
     20c:	0f 90       	pop	r0
     20e:	0f 90       	pop	r0
     210:	0f 90       	pop	r0
     212:	cf 91       	pop	r28
     214:	df 91       	pop	r29
     216:	08 95       	ret

00000218 <function_caller>:

void function_caller()
{
     218:	df 93       	push	r29
     21a:	cf 93       	push	r28
     21c:	cd b7       	in	r28, 0x3d	; 61
     21e:	de b7       	in	r29, 0x3e	; 62
     220:	28 97       	sbiw	r28, 0x08	; 8
     222:	0f b6       	in	r0, 0x3f	; 63
     224:	f8 94       	cli
     226:	de bf       	out	0x3e, r29	; 62
     228:	0f be       	out	0x3f, r0	; 63
     22a:	cd bf       	out	0x3d, r28	; 61
	int val, par, trough, speed;
	val = atoi(fcall[1]);
     22c:	8b ec       	ldi	r24, 0xCB	; 203
     22e:	94 e0       	ldi	r25, 0x04	; 4
     230:	0e 94 4c 1d 	call	0x3a98	; 0x3a98 <atoi>
     234:	98 87       	std	Y+8, r25	; 0x08
     236:	8f 83       	std	Y+7, r24	; 0x07
	trough = atoi(fcall[2]);
     238:	80 ed       	ldi	r24, 0xD0	; 208
     23a:	94 e0       	ldi	r25, 0x04	; 4
     23c:	0e 94 4c 1d 	call	0x3a98	; 0x3a98 <atoi>
     240:	9c 83       	std	Y+4, r25	; 0x04
     242:	8b 83       	std	Y+3, r24	; 0x03
	speed =  atoi(fcall[3]);
     244:	85 ed       	ldi	r24, 0xD5	; 213
     246:	94 e0       	ldi	r25, 0x04	; 4
     248:	0e 94 4c 1d 	call	0x3a98	; 0x3a98 <atoi>
     24c:	9a 83       	std	Y+2, r25	; 0x02
     24e:	89 83       	std	Y+1, r24	; 0x01
	switch(val) {
     250:	8f 81       	ldd	r24, Y+7	; 0x07
     252:	98 85       	ldd	r25, Y+8	; 0x08
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	91 05       	cpc	r25, r1
     258:	41 f4       	brne	.+16     	; 0x26a <function_caller+0x52>
		
		case 1 : harvest(trough, speed); break;
     25a:	8b 81       	ldd	r24, Y+3	; 0x03
     25c:	9c 81       	ldd	r25, Y+4	; 0x04
     25e:	29 81       	ldd	r18, Y+1	; 0x01
     260:	3a 81       	ldd	r19, Y+2	; 0x02
     262:	b9 01       	movw	r22, r18
     264:	0e 94 13 02 	call	0x426	; 0x426 <harvest>
     268:	04 c0       	rjmp	.+8      	; 0x272 <function_caller+0x5a>
				
		default: UDR0 = 0x26;
     26a:	e6 ec       	ldi	r30, 0xC6	; 198
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	86 e2       	ldi	r24, 0x26	; 38
     270:	80 83       	st	Z, r24
	}
}
     272:	28 96       	adiw	r28, 0x08	; 8
     274:	0f b6       	in	r0, 0x3f	; 63
     276:	f8 94       	cli
     278:	de bf       	out	0x3e, r29	; 62
     27a:	0f be       	out	0x3f, r0	; 63
     27c:	cd bf       	out	0x3d, r28	; 61
     27e:	cf 91       	pop	r28
     280:	df 91       	pop	r29
     282:	08 95       	ret

00000284 <__vector_25>:

//FORMAT "botId$funCode$par1$par2$par3#"
SIGNAL(SIG_USART0_RECV)
{
     284:	1f 92       	push	r1
     286:	0f 92       	push	r0
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	0f 92       	push	r0
     28c:	00 90 5b 00 	lds	r0, 0x005B
     290:	0f 92       	push	r0
     292:	11 24       	eor	r1, r1
     294:	2f 93       	push	r18
     296:	3f 93       	push	r19
     298:	4f 93       	push	r20
     29a:	5f 93       	push	r21
     29c:	6f 93       	push	r22
     29e:	7f 93       	push	r23
     2a0:	8f 93       	push	r24
     2a2:	9f 93       	push	r25
     2a4:	af 93       	push	r26
     2a6:	bf 93       	push	r27
     2a8:	ef 93       	push	r30
     2aa:	ff 93       	push	r31
     2ac:	df 93       	push	r29
     2ae:	cf 93       	push	r28
     2b0:	cd b7       	in	r28, 0x3d	; 61
     2b2:	de b7       	in	r29, 0x3e	; 62
	cli();
     2b4:	f8 94       	cli
	data = UDR0;
     2b6:	e6 ec       	ldi	r30, 0xC6	; 198
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	80 81       	ld	r24, Z
     2bc:	80 93 c3 04 	sts	0x04C3, r24

	if(data == 0x23) // #
     2c0:	80 91 c3 04 	lds	r24, 0x04C3
     2c4:	83 32       	cpi	r24, 0x23	; 35
     2c6:	c9 f5       	brne	.+114    	; 0x33a <__vector_25+0xb6>
	{
		if(atoi(fcall[0]) == botId) {
     2c8:	86 ec       	ldi	r24, 0xC6	; 198
     2ca:	94 e0       	ldi	r25, 0x04	; 4
     2cc:	0e 94 4c 1d 	call	0x3a98	; 0x3a98 <atoi>
     2d0:	9c 01       	movw	r18, r24
     2d2:	80 91 bf 04 	lds	r24, 0x04BF
     2d6:	90 91 c0 04 	lds	r25, 0x04C0
     2da:	28 17       	cp	r18, r24
     2dc:	39 07       	cpc	r19, r25
     2de:	21 f5       	brne	.+72     	; 0x328 <__vector_25+0xa4>
			if(j != 0) {
     2e0:	80 91 e0 03 	lds	r24, 0x03E0
     2e4:	90 91 e1 03 	lds	r25, 0x03E1
     2e8:	00 97       	sbiw	r24, 0x00	; 0
     2ea:	c9 f0       	breq	.+50     	; 0x31e <__vector_25+0x9a>
				fcall[i][j] = 0;
     2ec:	20 91 de 03 	lds	r18, 0x03DE
     2f0:	30 91 df 03 	lds	r19, 0x03DF
     2f4:	40 91 e0 03 	lds	r20, 0x03E0
     2f8:	50 91 e1 03 	lds	r21, 0x03E1
     2fc:	c9 01       	movw	r24, r18
     2fe:	88 0f       	add	r24, r24
     300:	99 1f       	adc	r25, r25
     302:	88 0f       	add	r24, r24
     304:	99 1f       	adc	r25, r25
     306:	82 0f       	add	r24, r18
     308:	93 1f       	adc	r25, r19
     30a:	84 0f       	add	r24, r20
     30c:	95 1f       	adc	r25, r21
     30e:	fc 01       	movw	r30, r24
     310:	ea 53       	subi	r30, 0x3A	; 58
     312:	fb 4f       	sbci	r31, 0xFB	; 251
     314:	10 82       	st	Z, r1
				sei();
     316:	78 94       	sei
				function_caller();
     318:	0e 94 0c 01 	call	0x218	; 0x218 <function_caller>
				cli();
     31c:	f8 94       	cli
			}
			UDR0 = data;
     31e:	e6 ec       	ldi	r30, 0xC6	; 198
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 91 c3 04 	lds	r24, 0x04C3
     326:	80 83       	st	Z, r24
		}
		i = 0;
     328:	10 92 df 03 	sts	0x03DF, r1
     32c:	10 92 de 03 	sts	0x03DE, r1
		j = 0;
     330:	10 92 e1 03 	sts	0x03E1, r1
     334:	10 92 e0 03 	sts	0x03E0, r1
     338:	47 c0       	rjmp	.+142    	; 0x3c8 <__vector_25+0x144>
	}
	else if(data == 0x24) // $
     33a:	80 91 c3 04 	lds	r24, 0x04C3
     33e:	84 32       	cpi	r24, 0x24	; 36
     340:	19 f5       	brne	.+70     	; 0x388 <__vector_25+0x104>
	{
		fcall[i][j] = 0;
     342:	20 91 de 03 	lds	r18, 0x03DE
     346:	30 91 df 03 	lds	r19, 0x03DF
     34a:	40 91 e0 03 	lds	r20, 0x03E0
     34e:	50 91 e1 03 	lds	r21, 0x03E1
     352:	c9 01       	movw	r24, r18
     354:	88 0f       	add	r24, r24
     356:	99 1f       	adc	r25, r25
     358:	88 0f       	add	r24, r24
     35a:	99 1f       	adc	r25, r25
     35c:	82 0f       	add	r24, r18
     35e:	93 1f       	adc	r25, r19
     360:	84 0f       	add	r24, r20
     362:	95 1f       	adc	r25, r21
     364:	fc 01       	movw	r30, r24
     366:	ea 53       	subi	r30, 0x3A	; 58
     368:	fb 4f       	sbci	r31, 0xFB	; 251
     36a:	10 82       	st	Z, r1
		i++;
     36c:	80 91 de 03 	lds	r24, 0x03DE
     370:	90 91 df 03 	lds	r25, 0x03DF
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	90 93 df 03 	sts	0x03DF, r25
     37a:	80 93 de 03 	sts	0x03DE, r24
		j = 0;
     37e:	10 92 e1 03 	sts	0x03E1, r1
     382:	10 92 e0 03 	sts	0x03E0, r1
     386:	20 c0       	rjmp	.+64     	; 0x3c8 <__vector_25+0x144>
	}
	else
	{	
		fcall[i][j] = data;
     388:	20 91 de 03 	lds	r18, 0x03DE
     38c:	30 91 df 03 	lds	r19, 0x03DF
     390:	40 91 e0 03 	lds	r20, 0x03E0
     394:	50 91 e1 03 	lds	r21, 0x03E1
     398:	60 91 c3 04 	lds	r22, 0x04C3
     39c:	c9 01       	movw	r24, r18
     39e:	88 0f       	add	r24, r24
     3a0:	99 1f       	adc	r25, r25
     3a2:	88 0f       	add	r24, r24
     3a4:	99 1f       	adc	r25, r25
     3a6:	82 0f       	add	r24, r18
     3a8:	93 1f       	adc	r25, r19
     3aa:	84 0f       	add	r24, r20
     3ac:	95 1f       	adc	r25, r21
     3ae:	fc 01       	movw	r30, r24
     3b0:	ea 53       	subi	r30, 0x3A	; 58
     3b2:	fb 4f       	sbci	r31, 0xFB	; 251
     3b4:	60 83       	st	Z, r22
		j++;
     3b6:	80 91 e0 03 	lds	r24, 0x03E0
     3ba:	90 91 e1 03 	lds	r25, 0x03E1
     3be:	01 96       	adiw	r24, 0x01	; 1
     3c0:	90 93 e1 03 	sts	0x03E1, r25
     3c4:	80 93 e0 03 	sts	0x03E0, r24
	}
	sei();
     3c8:	78 94       	sei
}
     3ca:	cf 91       	pop	r28
     3cc:	df 91       	pop	r29
     3ce:	ff 91       	pop	r31
     3d0:	ef 91       	pop	r30
     3d2:	bf 91       	pop	r27
     3d4:	af 91       	pop	r26
     3d6:	9f 91       	pop	r25
     3d8:	8f 91       	pop	r24
     3da:	7f 91       	pop	r23
     3dc:	6f 91       	pop	r22
     3de:	5f 91       	pop	r21
     3e0:	4f 91       	pop	r20
     3e2:	3f 91       	pop	r19
     3e4:	2f 91       	pop	r18
     3e6:	0f 90       	pop	r0
     3e8:	00 92 5b 00 	sts	0x005B, r0
     3ec:	0f 90       	pop	r0
     3ee:	0f be       	out	0x3f, r0	; 63
     3f0:	0f 90       	pop	r0
     3f2:	1f 90       	pop	r1
     3f4:	18 95       	reti

000003f6 <init_devices>:

//Function To Initialize all The Devices
void init_devices()
{
     3f6:	df 93       	push	r29
     3f8:	cf 93       	push	r28
     3fa:	cd b7       	in	r28, 0x3d	; 61
     3fc:	de b7       	in	r29, 0x3e	; 62
 cli(); //Clears the global interrupts
     3fe:	f8 94       	cli

 uart0_init(); //Initailize UART1 for serial communiaction
     400:	0e 94 aa 00 	call	0x154	; 0x154 <uart0_init>
 sei(); //Enables the global interrupts
     404:	78 94       	sei
}
     406:	cf 91       	pop	r28
     408:	df 91       	pop	r29
     40a:	08 95       	ret

0000040c <main>:
////////////////////////////////////////////////////////////


/*Main Function*/
int main(void)
{
     40c:	df 93       	push	r29
     40e:	cf 93       	push	r28
     410:	cd b7       	in	r28, 0x3d	; 61
     412:	de b7       	in	r29, 0x3e	; 62
	botId = 9;
     414:	89 e0       	ldi	r24, 0x09	; 9
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	90 93 c0 04 	sts	0x04C0, r25
     41c:	80 93 bf 04 	sts	0x04BF, r24
	init_devices();
     420:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <init_devices>
     424:	ff cf       	rjmp	.-2      	; 0x424 <main+0x18>

00000426 <harvest>:
	
}


void harvest( int trough, int speed)
{
     426:	df 93       	push	r29
     428:	cf 93       	push	r28
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	e6 97       	sbiw	r28, 0x36	; 54
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
     43a:	98 ab       	std	Y+48, r25	; 0x30
     43c:	8f a7       	std	Y+47, r24	; 0x2f
     43e:	7a ab       	std	Y+50, r23	; 0x32
     440:	69 ab       	std	Y+49, r22	; 0x31
	int trno = trough;
     442:	8f a5       	ldd	r24, Y+47	; 0x2f
     444:	98 a9       	ldd	r25, Y+48	; 0x30
     446:	9e a7       	std	Y+46, r25	; 0x2e
     448:	8d a7       	std	Y+45, r24	; 0x2d
	int	tmp=((int)speed -(int)'0')*32;
     44a:	89 a9       	ldd	r24, Y+49	; 0x31
     44c:	9a a9       	ldd	r25, Y+50	; 0x32
     44e:	c0 97       	sbiw	r24, 0x30	; 48
     450:	88 0f       	add	r24, r24
     452:	99 1f       	adc	r25, r25
     454:	82 95       	swap	r24
     456:	92 95       	swap	r25
     458:	90 7f       	andi	r25, 0xF0	; 240
     45a:	98 27       	eor	r25, r24
     45c:	80 7f       	andi	r24, 0xF0	; 240
     45e:	98 27       	eor	r25, r24
     460:	9c a7       	std	Y+44, r25	; 0x2c
     462:	8b a7       	std	Y+43, r24	; 0x2b
	mode = 1;     // bot directly onto line follower, reaching the desired trough
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	90 93 ba 04 	sts	0x04BA, r25
     46c:	80 93 b9 04 	sts	0x04B9, r24
	cli();
     470:	f8 94       	cli
	Init_Devices();
     472:	0e 94 95 00 	call	0x12a	; 0x12a <Init_Devices>
	sei();
     476:	78 94       	sei
	LCD_WR_Command(0x01);
     478:	81 e0       	ldi	r24, 0x01	; 1
     47a:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
	LCD_Cursor(1,1);
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	61 e0       	ldi	r22, 0x01	; 1
     482:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
	LCD_String("ANDROID_FB5");
     486:	80 e0       	ldi	r24, 0x00	; 0
     488:	92 e0       	ldi	r25, 0x02	; 2
     48a:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
	velocity(255,255);
     48e:	8f ef       	ldi	r24, 0xFF	; 255
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	6f ef       	ldi	r22, 0xFF	; 255
     494:	70 e0       	ldi	r23, 0x00	; 0
     496:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	a8 ec       	ldi	r26, 0xC8	; 200
     4a0:	b2 e4       	ldi	r27, 0x42	; 66
     4a2:	8f a3       	std	Y+39, r24	; 0x27
     4a4:	98 a7       	std	Y+40, r25	; 0x28
     4a6:	a9 a7       	std	Y+41, r26	; 0x29
     4a8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4aa:	6f a1       	ldd	r22, Y+39	; 0x27
     4ac:	78 a5       	ldd	r23, Y+40	; 0x28
     4ae:	89 a5       	ldd	r24, Y+41	; 0x29
     4b0:	9a a5       	ldd	r25, Y+42	; 0x2a
     4b2:	2d ec       	ldi	r18, 0xCD	; 205
     4b4:	3c ec       	ldi	r19, 0xCC	; 204
     4b6:	4c e2       	ldi	r20, 0x2C	; 44
     4b8:	55 e4       	ldi	r21, 0x45	; 69
     4ba:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     4be:	dc 01       	movw	r26, r24
     4c0:	cb 01       	movw	r24, r22
     4c2:	8b a3       	std	Y+35, r24	; 0x23
     4c4:	9c a3       	std	Y+36, r25	; 0x24
     4c6:	ad a3       	std	Y+37, r26	; 0x25
     4c8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     4ca:	6b a1       	ldd	r22, Y+35	; 0x23
     4cc:	7c a1       	ldd	r23, Y+36	; 0x24
     4ce:	8d a1       	ldd	r24, Y+37	; 0x25
     4d0:	9e a1       	ldd	r25, Y+38	; 0x26
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	40 e8       	ldi	r20, 0x80	; 128
     4d8:	5f e3       	ldi	r21, 0x3F	; 63
     4da:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
     4de:	88 23       	and	r24, r24
     4e0:	2c f4       	brge	.+10     	; 0x4ec <harvest+0xc6>
		__ticks = 1;
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	9a a3       	std	Y+34, r25	; 0x22
     4e8:	89 a3       	std	Y+33, r24	; 0x21
     4ea:	3f c0       	rjmp	.+126    	; 0x56a <harvest+0x144>
	else if (__tmp > 65535)
     4ec:	6b a1       	ldd	r22, Y+35	; 0x23
     4ee:	7c a1       	ldd	r23, Y+36	; 0x24
     4f0:	8d a1       	ldd	r24, Y+37	; 0x25
     4f2:	9e a1       	ldd	r25, Y+38	; 0x26
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	3f ef       	ldi	r19, 0xFF	; 255
     4f8:	4f e7       	ldi	r20, 0x7F	; 127
     4fa:	57 e4       	ldi	r21, 0x47	; 71
     4fc:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
     500:	18 16       	cp	r1, r24
     502:	4c f5       	brge	.+82     	; 0x556 <harvest+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     504:	6f a1       	ldd	r22, Y+39	; 0x27
     506:	78 a5       	ldd	r23, Y+40	; 0x28
     508:	89 a5       	ldd	r24, Y+41	; 0x29
     50a:	9a a5       	ldd	r25, Y+42	; 0x2a
     50c:	20 e0       	ldi	r18, 0x00	; 0
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	40 e2       	ldi	r20, 0x20	; 32
     512:	51 e4       	ldi	r21, 0x41	; 65
     514:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     518:	dc 01       	movw	r26, r24
     51a:	cb 01       	movw	r24, r22
     51c:	bc 01       	movw	r22, r24
     51e:	cd 01       	movw	r24, r26
     520:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     524:	dc 01       	movw	r26, r24
     526:	cb 01       	movw	r24, r22
     528:	9a a3       	std	Y+34, r25	; 0x22
     52a:	89 a3       	std	Y+33, r24	; 0x21
     52c:	0f c0       	rjmp	.+30     	; 0x54c <harvest+0x126>
     52e:	84 e1       	ldi	r24, 0x14	; 20
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	98 a3       	std	Y+32, r25	; 0x20
     534:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     536:	8f 8d       	ldd	r24, Y+31	; 0x1f
     538:	98 a1       	ldd	r25, Y+32	; 0x20
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <harvest+0x114>
     53e:	98 a3       	std	Y+32, r25	; 0x20
     540:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     542:	89 a1       	ldd	r24, Y+33	; 0x21
     544:	9a a1       	ldd	r25, Y+34	; 0x22
     546:	01 97       	sbiw	r24, 0x01	; 1
     548:	9a a3       	std	Y+34, r25	; 0x22
     54a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     54c:	89 a1       	ldd	r24, Y+33	; 0x21
     54e:	9a a1       	ldd	r25, Y+34	; 0x22
     550:	00 97       	sbiw	r24, 0x00	; 0
     552:	69 f7       	brne	.-38     	; 0x52e <harvest+0x108>
     554:	14 c0       	rjmp	.+40     	; 0x57e <harvest+0x158>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     556:	6b a1       	ldd	r22, Y+35	; 0x23
     558:	7c a1       	ldd	r23, Y+36	; 0x24
     55a:	8d a1       	ldd	r24, Y+37	; 0x25
     55c:	9e a1       	ldd	r25, Y+38	; 0x26
     55e:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     562:	dc 01       	movw	r26, r24
     564:	cb 01       	movw	r24, r22
     566:	9a a3       	std	Y+34, r25	; 0x22
     568:	89 a3       	std	Y+33, r24	; 0x21
     56a:	89 a1       	ldd	r24, Y+33	; 0x21
     56c:	9a a1       	ldd	r25, Y+34	; 0x22
     56e:	9e 8f       	std	Y+30, r25	; 0x1e
     570:	8d 8f       	std	Y+29, r24	; 0x1d
     572:	8d 8d       	ldd	r24, Y+29	; 0x1d
     574:	9e 8d       	ldd	r25, Y+30	; 0x1e
     576:	01 97       	sbiw	r24, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <harvest+0x150>
     57a:	9e 8f       	std	Y+30, r25	; 0x1e
     57c:	8d 8f       	std	Y+29, r24	; 0x1d
	//tmp=0;
	while (1)
	{
		_delay_ms(100);
		if (decode == 0)
     57e:	80 91 ea 03 	lds	r24, 0x03EA
     582:	88 23       	and	r24, r24
     584:	09 f0       	breq	.+2      	; 0x588 <harvest+0x162>
     586:	89 cf       	rjmp	.-238    	; 0x49a <harvest+0x74>
		{
			decode = 0;
     588:	10 92 ea 03 	sts	0x03EA, r1
			switch (mode)
     58c:	20 91 b9 04 	lds	r18, 0x04B9
     590:	30 91 ba 04 	lds	r19, 0x04BA
     594:	3e ab       	std	Y+54, r19	; 0x36
     596:	2d ab       	std	Y+53, r18	; 0x35
     598:	8d a9       	ldd	r24, Y+53	; 0x35
     59a:	9e a9       	ldd	r25, Y+54	; 0x36
     59c:	81 30       	cpi	r24, 0x01	; 1
     59e:	91 05       	cpc	r25, r1
     5a0:	09 f4       	brne	.+2      	; 0x5a4 <harvest+0x17e>
     5a2:	77 c1       	rjmp	.+750    	; 0x892 <harvest+0x46c>
     5a4:	2d a9       	ldd	r18, Y+53	; 0x35
     5a6:	3e a9       	ldd	r19, Y+54	; 0x36
     5a8:	21 30       	cpi	r18, 0x01	; 1
     5aa:	31 05       	cpc	r19, r1
     5ac:	38 f0       	brcs	.+14     	; 0x5bc <harvest+0x196>
     5ae:	8d a9       	ldd	r24, Y+53	; 0x35
     5b0:	9e a9       	ldd	r25, Y+54	; 0x36
     5b2:	82 30       	cpi	r24, 0x02	; 2
     5b4:	91 05       	cpc	r25, r1
     5b6:	09 f4       	brne	.+2      	; 0x5ba <harvest+0x194>
     5b8:	f2 c1       	rjmp	.+996    	; 0x99e <harvest+0x578>
     5ba:	77 c2       	rjmp	.+1262   	; 0xaaa <harvest+0x684>
			{
				case 0:
				switch (main_buf[0])
     5bc:	80 91 e1 04 	lds	r24, 0x04E1
     5c0:	28 2f       	mov	r18, r24
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	3c ab       	std	Y+52, r19	; 0x34
     5c6:	2b ab       	std	Y+51, r18	; 0x33
     5c8:	8b a9       	ldd	r24, Y+51	; 0x33
     5ca:	9c a9       	ldd	r25, Y+52	; 0x34
     5cc:	8c 34       	cpi	r24, 0x4C	; 76
     5ce:	91 05       	cpc	r25, r1
     5d0:	09 f4       	brne	.+2      	; 0x5d4 <harvest+0x1ae>
     5d2:	8a c0       	rjmp	.+276    	; 0x6e8 <harvest+0x2c2>
     5d4:	2b a9       	ldd	r18, Y+51	; 0x33
     5d6:	3c a9       	ldd	r19, Y+52	; 0x34
     5d8:	2d 34       	cpi	r18, 0x4D	; 77
     5da:	31 05       	cpc	r19, r1
     5dc:	54 f5       	brge	.+84     	; 0x632 <harvest+0x20c>
     5de:	8b a9       	ldd	r24, Y+51	; 0x33
     5e0:	9c a9       	ldd	r25, Y+52	; 0x34
     5e2:	85 34       	cpi	r24, 0x45	; 69
     5e4:	91 05       	cpc	r25, r1
     5e6:	09 f4       	brne	.+2      	; 0x5ea <harvest+0x1c4>
     5e8:	01 c1       	rjmp	.+514    	; 0x7ec <harvest+0x3c6>
     5ea:	2b a9       	ldd	r18, Y+51	; 0x33
     5ec:	3c a9       	ldd	r19, Y+52	; 0x34
     5ee:	26 34       	cpi	r18, 0x46	; 70
     5f0:	31 05       	cpc	r19, r1
     5f2:	6c f4       	brge	.+26     	; 0x60e <harvest+0x1e8>
     5f4:	8b a9       	ldd	r24, Y+51	; 0x33
     5f6:	9c a9       	ldd	r25, Y+52	; 0x34
     5f8:	81 33       	cpi	r24, 0x31	; 49
     5fa:	91 05       	cpc	r25, r1
     5fc:	09 f4       	brne	.+2      	; 0x600 <harvest+0x1da>
     5fe:	29 c1       	rjmp	.+594    	; 0x852 <harvest+0x42c>
     600:	2b a9       	ldd	r18, Y+51	; 0x33
     602:	3c a9       	ldd	r19, Y+52	; 0x34
     604:	22 34       	cpi	r18, 0x42	; 66
     606:	31 05       	cpc	r19, r1
     608:	09 f4       	brne	.+2      	; 0x60c <harvest+0x1e6>
     60a:	59 c0       	rjmp	.+178    	; 0x6be <harvest+0x298>
     60c:	34 c1       	rjmp	.+616    	; 0x876 <harvest+0x450>
     60e:	8b a9       	ldd	r24, Y+51	; 0x33
     610:	9c a9       	ldd	r25, Y+52	; 0x34
     612:	87 34       	cpi	r24, 0x47	; 71
     614:	91 05       	cpc	r25, r1
     616:	09 f4       	brne	.+2      	; 0x61a <harvest+0x1f4>
     618:	c1 c0       	rjmp	.+386    	; 0x79c <harvest+0x376>
     61a:	2b a9       	ldd	r18, Y+51	; 0x33
     61c:	3c a9       	ldd	r19, Y+52	; 0x34
     61e:	27 34       	cpi	r18, 0x47	; 71
     620:	31 05       	cpc	r19, r1
     622:	c4 f1       	brlt	.+112    	; 0x694 <harvest+0x26e>
     624:	8b a9       	ldd	r24, Y+51	; 0x33
     626:	9c a9       	ldd	r25, Y+52	; 0x34
     628:	8b 34       	cpi	r24, 0x4B	; 75
     62a:	91 05       	cpc	r25, r1
     62c:	09 f4       	brne	.+2      	; 0x630 <harvest+0x20a>
     62e:	a8 c0       	rjmp	.+336    	; 0x780 <harvest+0x35a>
     630:	22 c1       	rjmp	.+580    	; 0x876 <harvest+0x450>
     632:	2b a9       	ldd	r18, Y+51	; 0x33
     634:	3c a9       	ldd	r19, Y+52	; 0x34
     636:	25 35       	cpi	r18, 0x55	; 85
     638:	31 05       	cpc	r19, r1
     63a:	09 f4       	brne	.+2      	; 0x63e <harvest+0x218>
     63c:	93 c0       	rjmp	.+294    	; 0x764 <harvest+0x33e>
     63e:	8b a9       	ldd	r24, Y+51	; 0x33
     640:	9c a9       	ldd	r25, Y+52	; 0x34
     642:	86 35       	cpi	r24, 0x56	; 86
     644:	91 05       	cpc	r25, r1
     646:	9c f4       	brge	.+38     	; 0x66e <harvest+0x248>
     648:	2b a9       	ldd	r18, Y+51	; 0x33
     64a:	3c a9       	ldd	r19, Y+52	; 0x34
     64c:	23 35       	cpi	r18, 0x53	; 83
     64e:	31 05       	cpc	r19, r1
     650:	09 f4       	brne	.+2      	; 0x654 <harvest+0x22e>
     652:	7a c0       	rjmp	.+244    	; 0x748 <harvest+0x322>
     654:	8b a9       	ldd	r24, Y+51	; 0x33
     656:	9c a9       	ldd	r25, Y+52	; 0x34
     658:	84 35       	cpi	r24, 0x54	; 84
     65a:	91 05       	cpc	r25, r1
     65c:	0c f0       	brlt	.+2      	; 0x660 <harvest+0x23a>
     65e:	e6 c0       	rjmp	.+460    	; 0x82c <harvest+0x406>
     660:	2b a9       	ldd	r18, Y+51	; 0x33
     662:	3c a9       	ldd	r19, Y+52	; 0x34
     664:	22 35       	cpi	r18, 0x52	; 82
     666:	31 05       	cpc	r19, r1
     668:	09 f4       	brne	.+2      	; 0x66c <harvest+0x246>
     66a:	59 c0       	rjmp	.+178    	; 0x71e <harvest+0x2f8>
     66c:	04 c1       	rjmp	.+520    	; 0x876 <harvest+0x450>
     66e:	8b a9       	ldd	r24, Y+51	; 0x33
     670:	9c a9       	ldd	r25, Y+52	; 0x34
     672:	89 35       	cpi	r24, 0x59	; 89
     674:	91 05       	cpc	r25, r1
     676:	09 f4       	brne	.+2      	; 0x67a <harvest+0x254>
     678:	ad c0       	rjmp	.+346    	; 0x7d4 <harvest+0x3ae>
     67a:	2b a9       	ldd	r18, Y+51	; 0x33
     67c:	3c a9       	ldd	r19, Y+52	; 0x34
     67e:	2a 35       	cpi	r18, 0x5A	; 90
     680:	31 05       	cpc	r19, r1
     682:	09 f4       	brne	.+2      	; 0x686 <harvest+0x260>
     684:	99 c0       	rjmp	.+306    	; 0x7b8 <harvest+0x392>
     686:	8b a9       	ldd	r24, Y+51	; 0x33
     688:	9c a9       	ldd	r25, Y+52	; 0x34
     68a:	88 35       	cpi	r24, 0x58	; 88
     68c:	91 05       	cpc	r25, r1
     68e:	09 f4       	brne	.+2      	; 0x692 <harvest+0x26c>
     690:	bb c0       	rjmp	.+374    	; 0x808 <harvest+0x3e2>
     692:	f1 c0       	rjmp	.+482    	; 0x876 <harvest+0x450>
				{
					case 'F' :
						velocity(tmp,tmp);
     694:	8b a5       	ldd	r24, Y+43	; 0x2b
     696:	9c a5       	ldd	r25, Y+44	; 0x2c
     698:	2b a5       	ldd	r18, Y+43	; 0x2b
     69a:	3c a5       	ldd	r19, Y+44	; 0x2c
     69c:	b9 01       	movw	r22, r18
     69e:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
						Forward();
     6a2:	0e 94 86 10 	call	0x210c	; 0x210c <Forward>
						LCD_WR_Command(0x01);
     6a6:	81 e0       	ldi	r24, 0x01	; 1
     6a8:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	61 e0       	ldi	r22, 0x01	; 1
     6b0:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("BOT FORWARD");
     6b4:	8c e0       	ldi	r24, 0x0C	; 12
     6b6:	92 e0       	ldi	r25, 0x02	; 2
     6b8:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     6bc:	ee ce       	rjmp	.-548    	; 0x49a <harvest+0x74>
						break;
					case 'B' :
						velocity(tmp,tmp);
     6be:	8b a5       	ldd	r24, Y+43	; 0x2b
     6c0:	9c a5       	ldd	r25, Y+44	; 0x2c
     6c2:	2b a5       	ldd	r18, Y+43	; 0x2b
     6c4:	3c a5       	ldd	r19, Y+44	; 0x2c
     6c6:	b9 01       	movw	r22, r18
     6c8:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
						Reverse();
     6cc:	0e 94 95 10 	call	0x212a	; 0x212a <Reverse>
						LCD_WR_Command(0x01);
     6d0:	81 e0       	ldi	r24, 0x01	; 1
     6d2:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     6d6:	81 e0       	ldi	r24, 0x01	; 1
     6d8:	61 e0       	ldi	r22, 0x01	; 1
     6da:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("BOT REVERSE");
     6de:	88 e1       	ldi	r24, 0x18	; 24
     6e0:	92 e0       	ldi	r25, 0x02	; 2
     6e2:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     6e6:	d9 ce       	rjmp	.-590    	; 0x49a <harvest+0x74>
					case 'L' :
						/*Left_Turn();
						LCD_WR_Command(0x01);
						LCD_Cursor(1,1);
						LCD_String("BOT LEFT TURN");*/
						tmp=((int)main_buf[1]-(int)'0')*32;
     6e8:	80 91 e2 04 	lds	r24, 0x04E2
     6ec:	88 2f       	mov	r24, r24
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	c0 97       	sbiw	r24, 0x30	; 48
     6f2:	88 0f       	add	r24, r24
     6f4:	99 1f       	adc	r25, r25
     6f6:	82 95       	swap	r24
     6f8:	92 95       	swap	r25
     6fa:	90 7f       	andi	r25, 0xF0	; 240
     6fc:	98 27       	eor	r25, r24
     6fe:	80 7f       	andi	r24, 0xF0	; 240
     700:	98 27       	eor	r25, r24
     702:	9c a7       	std	Y+44, r25	; 0x2c
     704:	8b a7       	std	Y+43, r24	; 0x2b
						LCD_WR_Command(0x01);
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	61 e0       	ldi	r22, 0x01	; 1
     710:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("Speed changed");
     714:	84 e2       	ldi	r24, 0x24	; 36
     716:	92 e0       	ldi	r25, 0x02	; 2
     718:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     71c:	be ce       	rjmp	.-644    	; 0x49a <harvest+0x74>
						break;
					case 'R' :
						velocity(tmp,tmp);
     71e:	8b a5       	ldd	r24, Y+43	; 0x2b
     720:	9c a5       	ldd	r25, Y+44	; 0x2c
     722:	2b a5       	ldd	r18, Y+43	; 0x2b
     724:	3c a5       	ldd	r19, Y+44	; 0x2c
     726:	b9 01       	movw	r22, r18
     728:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
						Right_Turn();
     72c:	0e 94 b3 10 	call	0x2166	; 0x2166 <Right_Turn>
						LCD_WR_Command(0x01);
     730:	81 e0       	ldi	r24, 0x01	; 1
     732:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	61 e0       	ldi	r22, 0x01	; 1
     73a:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("BOT RIGHT TURN");
     73e:	82 e3       	ldi	r24, 0x32	; 50
     740:	92 e0       	ldi	r25, 0x02	; 2
     742:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     746:	a9 ce       	rjmp	.-686    	; 0x49a <harvest+0x74>
						break;
					case 'S' :
						Stop();
     748:	0e 94 c2 10 	call	0x2184	; 0x2184 <Stop>
						LCD_WR_Command(0x01);
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     752:	81 e0       	ldi	r24, 0x01	; 1
     754:	61 e0       	ldi	r22, 0x01	; 1
     756:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("BOT STOP");
     75a:	81 e4       	ldi	r24, 0x41	; 65
     75c:	92 e0       	ldi	r25, 0x02	; 2
     75e:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     762:	9b ce       	rjmp	.-714    	; 0x49a <harvest+0x74>
						break;
					case 'U' :
						motor_c2_forward();
     764:	0e 94 ee 10 	call	0x21dc	; 0x21dc <motor_c2_forward>
						LCD_WR_Command(0x01);
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     76e:	81 e0       	ldi	r24, 0x01	; 1
     770:	61 e0       	ldi	r22, 0x01	; 1
     772:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("PULLEY UP");
     776:	8a e4       	ldi	r24, 0x4A	; 74
     778:	92 e0       	ldi	r25, 0x02	; 2
     77a:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     77e:	8d ce       	rjmp	.-742    	; 0x49a <harvest+0x74>
						break;
					case 'K' :
						motor_c2_backward();
     780:	0e 94 fd 10 	call	0x21fa	; 0x21fa <motor_c2_backward>
						LCD_WR_Command(0x01);
     784:	81 e0       	ldi	r24, 0x01	; 1
     786:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	61 e0       	ldi	r22, 0x01	; 1
     78e:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("PULLEY DOWN");
     792:	84 e5       	ldi	r24, 0x54	; 84
     794:	92 e0       	ldi	r25, 0x02	; 2
     796:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     79a:	7f ce       	rjmp	.-770    	; 0x49a <harvest+0x74>
						break;
					case 'G' :
						motor_c2_stop();
     79c:	0e 94 1a 11 	call	0x2234	; 0x2234 <motor_c2_stop>
						LCD_WR_Command(0x01);
     7a0:	81 e0       	ldi	r24, 0x01	; 1
     7a2:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("PULLEY STOP");
     7ae:	80 e6       	ldi	r24, 0x60	; 96
     7b0:	92 e0       	ldi	r25, 0x02	; 2
     7b2:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     7b6:	71 ce       	rjmp	.-798    	; 0x49a <harvest+0x74>
						break;
					case 'Z' :
						motor_c1_forward();
     7b8:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <motor_c1_forward>
						LCD_WR_Command(0x01);
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     7c2:	81 e0       	ldi	r24, 0x01	; 1
     7c4:	61 e0       	ldi	r22, 0x01	; 1
     7c6:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("CUTTER ON");
     7ca:	8c e6       	ldi	r24, 0x6C	; 108
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     7d2:	63 ce       	rjmp	.-826    	; 0x49a <harvest+0x74>
						break;
					case 'Y' :
						LCD_WR_Command(0x01);
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     7da:	81 e0       	ldi	r24, 0x01	; 1
     7dc:	61 e0       	ldi	r22, 0x01	; 1
     7de:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("WORKING");
     7e2:	86 e7       	ldi	r24, 0x76	; 118
     7e4:	92 e0       	ldi	r25, 0x02	; 2
     7e6:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     7ea:	57 ce       	rjmp	.-850    	; 0x49a <harvest+0x74>
						break;
					case 'E' :
						motor_c1_stop();
     7ec:	0e 94 0c 11 	call	0x2218	; 0x2218 <motor_c1_stop>
						LCD_WR_Command(0x01);
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     7f6:	81 e0       	ldi	r24, 0x01	; 1
     7f8:	61 e0       	ldi	r22, 0x01	; 1
     7fa:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("CUTTER OFF");
     7fe:	8e e7       	ldi	r24, 0x7E	; 126
     800:	92 e0       	ldi	r25, 0x02	; 2
     802:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     806:	49 ce       	rjmp	.-878    	; 0x49a <harvest+0x74>
						break;
					case 'X' :
						mode=2;
     808:	82 e0       	ldi	r24, 0x02	; 2
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	90 93 ba 04 	sts	0x04BA, r25
     810:	80 93 b9 04 	sts	0x04B9, r24
						LCD_WR_Command(0x01);
     814:	81 e0       	ldi	r24, 0x01	; 1
     816:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	61 e0       	ldi	r22, 0x01	; 1
     81e:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("Return");
     822:	89 e8       	ldi	r24, 0x89	; 137
     824:	92 e0       	ldi	r25, 0x02	; 2
     826:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     82a:	37 ce       	rjmp	.-914    	; 0x49a <harvest+0x74>
						break;
					case 'T' :
						//mode=1;
						trno=(int)main_buf[1]-(int)'0';
     82c:	80 91 e2 04 	lds	r24, 0x04E2
     830:	88 2f       	mov	r24, r24
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	c0 97       	sbiw	r24, 0x30	; 48
     836:	9e a7       	std	Y+46, r25	; 0x2e
     838:	8d a7       	std	Y+45, r24	; 0x2d
						LCD_WR_Command(0x01);
     83a:	81 e0       	ldi	r24, 0x01	; 1
     83c:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     840:	81 e0       	ldi	r24, 0x01	; 1
     842:	61 e0       	ldi	r22, 0x01	; 1
     844:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("Trough no. received");
     848:	80 e9       	ldi	r24, 0x90	; 144
     84a:	92 e0       	ldi	r25, 0x02	; 2
     84c:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     850:	24 ce       	rjmp	.-952    	; 0x49a <harvest+0x74>
						break;
					case '1' :
						mode=1;
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	90 93 ba 04 	sts	0x04BA, r25
     85a:	80 93 b9 04 	sts	0x04B9, r24
						LCD_WR_Command(0x01);
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	61 e0       	ldi	r22, 0x01	; 1
     868:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("Mode : 1");
     86c:	84 ea       	ldi	r24, 0xA4	; 164
     86e:	92 e0       	ldi	r25, 0x02	; 2
     870:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     874:	12 ce       	rjmp	.-988    	; 0x49a <harvest+0x74>
						break;
					default :
						Stop();
     876:	0e 94 c2 10 	call	0x2184	; 0x2184 <Stop>
						LCD_WR_Command(0x01);
     87a:	81 e0       	ldi	r24, 0x01	; 1
     87c:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
						LCD_Cursor(1,1);
     880:	81 e0       	ldi	r24, 0x01	; 1
     882:	61 e0       	ldi	r22, 0x01	; 1
     884:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
						LCD_String("ANDROID_FB5");
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	92 e0       	ldi	r25, 0x02	; 2
     88c:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     890:	04 ce       	rjmp	.-1016   	; 0x49a <harvest+0x74>
						break;
				}
				break;
				case 1:
					//Insert line follower codes here.
					moveToTrough(trno);
     892:	8d a5       	ldd	r24, Y+45	; 0x2d
     894:	9e a5       	ldd	r25, Y+46	; 0x2e
     896:	0e 94 03 14 	call	0x2806	; 0x2806 <moveToTrough>
					mode=0;
     89a:	10 92 ba 04 	sts	0x04BA, r1
     89e:	10 92 b9 04 	sts	0x04B9, r1
					LCD_WR_Command(0x01);
     8a2:	81 e0       	ldi	r24, 0x01	; 1
     8a4:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
					LCD_Cursor(1,1);
     8a8:	81 e0       	ldi	r24, 0x01	; 1
     8aa:	61 e0       	ldi	r22, 0x01	; 1
     8ac:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
					LCD_String("Leaving Mode : 1");
     8b0:	8d ea       	ldi	r24, 0xAD	; 173
     8b2:	92 e0       	ldi	r25, 0x02	; 2
     8b4:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     8b8:	80 e0       	ldi	r24, 0x00	; 0
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	aa e7       	ldi	r26, 0x7A	; 122
     8be:	b4 e4       	ldi	r27, 0x44	; 68
     8c0:	89 8f       	std	Y+25, r24	; 0x19
     8c2:	9a 8f       	std	Y+26, r25	; 0x1a
     8c4:	ab 8f       	std	Y+27, r26	; 0x1b
     8c6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     8c8:	69 8d       	ldd	r22, Y+25	; 0x19
     8ca:	7a 8d       	ldd	r23, Y+26	; 0x1a
     8cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     8ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
     8d0:	2d ec       	ldi	r18, 0xCD	; 205
     8d2:	3c ec       	ldi	r19, 0xCC	; 204
     8d4:	4c e2       	ldi	r20, 0x2C	; 44
     8d6:	55 e4       	ldi	r21, 0x45	; 69
     8d8:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     8dc:	dc 01       	movw	r26, r24
     8de:	cb 01       	movw	r24, r22
     8e0:	8d 8b       	std	Y+21, r24	; 0x15
     8e2:	9e 8b       	std	Y+22, r25	; 0x16
     8e4:	af 8b       	std	Y+23, r26	; 0x17
     8e6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     8e8:	6d 89       	ldd	r22, Y+21	; 0x15
     8ea:	7e 89       	ldd	r23, Y+22	; 0x16
     8ec:	8f 89       	ldd	r24, Y+23	; 0x17
     8ee:	98 8d       	ldd	r25, Y+24	; 0x18
     8f0:	20 e0       	ldi	r18, 0x00	; 0
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	40 e8       	ldi	r20, 0x80	; 128
     8f6:	5f e3       	ldi	r21, 0x3F	; 63
     8f8:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
     8fc:	88 23       	and	r24, r24
     8fe:	2c f4       	brge	.+10     	; 0x90a <harvest+0x4e4>
		__ticks = 1;
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	9c 8b       	std	Y+20, r25	; 0x14
     906:	8b 8b       	std	Y+19, r24	; 0x13
     908:	3f c0       	rjmp	.+126    	; 0x988 <harvest+0x562>
	else if (__tmp > 65535)
     90a:	6d 89       	ldd	r22, Y+21	; 0x15
     90c:	7e 89       	ldd	r23, Y+22	; 0x16
     90e:	8f 89       	ldd	r24, Y+23	; 0x17
     910:	98 8d       	ldd	r25, Y+24	; 0x18
     912:	20 e0       	ldi	r18, 0x00	; 0
     914:	3f ef       	ldi	r19, 0xFF	; 255
     916:	4f e7       	ldi	r20, 0x7F	; 127
     918:	57 e4       	ldi	r21, 0x47	; 71
     91a:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
     91e:	18 16       	cp	r1, r24
     920:	4c f5       	brge	.+82     	; 0x974 <harvest+0x54e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     922:	69 8d       	ldd	r22, Y+25	; 0x19
     924:	7a 8d       	ldd	r23, Y+26	; 0x1a
     926:	8b 8d       	ldd	r24, Y+27	; 0x1b
     928:	9c 8d       	ldd	r25, Y+28	; 0x1c
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e2       	ldi	r20, 0x20	; 32
     930:	51 e4       	ldi	r21, 0x41	; 65
     932:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     936:	dc 01       	movw	r26, r24
     938:	cb 01       	movw	r24, r22
     93a:	bc 01       	movw	r22, r24
     93c:	cd 01       	movw	r24, r26
     93e:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     942:	dc 01       	movw	r26, r24
     944:	cb 01       	movw	r24, r22
     946:	9c 8b       	std	Y+20, r25	; 0x14
     948:	8b 8b       	std	Y+19, r24	; 0x13
     94a:	0f c0       	rjmp	.+30     	; 0x96a <harvest+0x544>
     94c:	84 e1       	ldi	r24, 0x14	; 20
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	9a 8b       	std	Y+18, r25	; 0x12
     952:	89 8b       	std	Y+17, r24	; 0x11
     954:	89 89       	ldd	r24, Y+17	; 0x11
     956:	9a 89       	ldd	r25, Y+18	; 0x12
     958:	01 97       	sbiw	r24, 0x01	; 1
     95a:	f1 f7       	brne	.-4      	; 0x958 <harvest+0x532>
     95c:	9a 8b       	std	Y+18, r25	; 0x12
     95e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     960:	8b 89       	ldd	r24, Y+19	; 0x13
     962:	9c 89       	ldd	r25, Y+20	; 0x14
     964:	01 97       	sbiw	r24, 0x01	; 1
     966:	9c 8b       	std	Y+20, r25	; 0x14
     968:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     96a:	8b 89       	ldd	r24, Y+19	; 0x13
     96c:	9c 89       	ldd	r25, Y+20	; 0x14
     96e:	00 97       	sbiw	r24, 0x00	; 0
     970:	69 f7       	brne	.-38     	; 0x94c <harvest+0x526>
     972:	93 cd       	rjmp	.-1242   	; 0x49a <harvest+0x74>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     974:	6d 89       	ldd	r22, Y+21	; 0x15
     976:	7e 89       	ldd	r23, Y+22	; 0x16
     978:	8f 89       	ldd	r24, Y+23	; 0x17
     97a:	98 8d       	ldd	r25, Y+24	; 0x18
     97c:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     980:	dc 01       	movw	r26, r24
     982:	cb 01       	movw	r24, r22
     984:	9c 8b       	std	Y+20, r25	; 0x14
     986:	8b 8b       	std	Y+19, r24	; 0x13
     988:	8b 89       	ldd	r24, Y+19	; 0x13
     98a:	9c 89       	ldd	r25, Y+20	; 0x14
     98c:	98 8b       	std	Y+16, r25	; 0x10
     98e:	8f 87       	std	Y+15, r24	; 0x0f
     990:	8f 85       	ldd	r24, Y+15	; 0x0f
     992:	98 89       	ldd	r25, Y+16	; 0x10
     994:	01 97       	sbiw	r24, 0x01	; 1
     996:	f1 f7       	brne	.-4      	; 0x994 <harvest+0x56e>
     998:	98 8b       	std	Y+16, r25	; 0x10
     99a:	8f 87       	std	Y+15, r24	; 0x0f
     99c:	7e cd       	rjmp	.-1284   	; 0x49a <harvest+0x74>
					_delay_ms(1000);
				break;
				case 2:
					// Insert any other code you like.
					LCD_WR_Command(0x01);
     99e:	81 e0       	ldi	r24, 0x01	; 1
     9a0:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
					LCD_Cursor(1,1);
     9a4:	81 e0       	ldi	r24, 0x01	; 1
     9a6:	61 e0       	ldi	r22, 0x01	; 1
     9a8:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
					LCD_String("Return to Start");
     9ac:	8e eb       	ldi	r24, 0xBE	; 190
     9ae:	92 e0       	ldi	r25, 0x02	; 2
     9b0:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	aa e7       	ldi	r26, 0x7A	; 122
     9ba:	b4 e4       	ldi	r27, 0x44	; 68
     9bc:	8b 87       	std	Y+11, r24	; 0x0b
     9be:	9c 87       	std	Y+12, r25	; 0x0c
     9c0:	ad 87       	std	Y+13, r26	; 0x0d
     9c2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9c4:	6b 85       	ldd	r22, Y+11	; 0x0b
     9c6:	7c 85       	ldd	r23, Y+12	; 0x0c
     9c8:	8d 85       	ldd	r24, Y+13	; 0x0d
     9ca:	9e 85       	ldd	r25, Y+14	; 0x0e
     9cc:	2d ec       	ldi	r18, 0xCD	; 205
     9ce:	3c ec       	ldi	r19, 0xCC	; 204
     9d0:	4c e2       	ldi	r20, 0x2C	; 44
     9d2:	55 e4       	ldi	r21, 0x45	; 69
     9d4:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     9d8:	dc 01       	movw	r26, r24
     9da:	cb 01       	movw	r24, r22
     9dc:	8f 83       	std	Y+7, r24	; 0x07
     9de:	98 87       	std	Y+8, r25	; 0x08
     9e0:	a9 87       	std	Y+9, r26	; 0x09
     9e2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     9e4:	6f 81       	ldd	r22, Y+7	; 0x07
     9e6:	78 85       	ldd	r23, Y+8	; 0x08
     9e8:	89 85       	ldd	r24, Y+9	; 0x09
     9ea:	9a 85       	ldd	r25, Y+10	; 0x0a
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	40 e8       	ldi	r20, 0x80	; 128
     9f2:	5f e3       	ldi	r21, 0x3F	; 63
     9f4:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
     9f8:	88 23       	and	r24, r24
     9fa:	2c f4       	brge	.+10     	; 0xa06 <harvest+0x5e0>
		__ticks = 1;
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	9e 83       	std	Y+6, r25	; 0x06
     a02:	8d 83       	std	Y+5, r24	; 0x05
     a04:	3f c0       	rjmp	.+126    	; 0xa84 <harvest+0x65e>
	else if (__tmp > 65535)
     a06:	6f 81       	ldd	r22, Y+7	; 0x07
     a08:	78 85       	ldd	r23, Y+8	; 0x08
     a0a:	89 85       	ldd	r24, Y+9	; 0x09
     a0c:	9a 85       	ldd	r25, Y+10	; 0x0a
     a0e:	20 e0       	ldi	r18, 0x00	; 0
     a10:	3f ef       	ldi	r19, 0xFF	; 255
     a12:	4f e7       	ldi	r20, 0x7F	; 127
     a14:	57 e4       	ldi	r21, 0x47	; 71
     a16:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
     a1a:	18 16       	cp	r1, r24
     a1c:	4c f5       	brge	.+82     	; 0xa70 <harvest+0x64a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a1e:	6b 85       	ldd	r22, Y+11	; 0x0b
     a20:	7c 85       	ldd	r23, Y+12	; 0x0c
     a22:	8d 85       	ldd	r24, Y+13	; 0x0d
     a24:	9e 85       	ldd	r25, Y+14	; 0x0e
     a26:	20 e0       	ldi	r18, 0x00	; 0
     a28:	30 e0       	ldi	r19, 0x00	; 0
     a2a:	40 e2       	ldi	r20, 0x20	; 32
     a2c:	51 e4       	ldi	r21, 0x41	; 65
     a2e:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     a32:	dc 01       	movw	r26, r24
     a34:	cb 01       	movw	r24, r22
     a36:	bc 01       	movw	r22, r24
     a38:	cd 01       	movw	r24, r26
     a3a:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     a3e:	dc 01       	movw	r26, r24
     a40:	cb 01       	movw	r24, r22
     a42:	9e 83       	std	Y+6, r25	; 0x06
     a44:	8d 83       	std	Y+5, r24	; 0x05
     a46:	0f c0       	rjmp	.+30     	; 0xa66 <harvest+0x640>
     a48:	84 e1       	ldi	r24, 0x14	; 20
     a4a:	91 e0       	ldi	r25, 0x01	; 1
     a4c:	9c 83       	std	Y+4, r25	; 0x04
     a4e:	8b 83       	std	Y+3, r24	; 0x03
     a50:	8b 81       	ldd	r24, Y+3	; 0x03
     a52:	9c 81       	ldd	r25, Y+4	; 0x04
     a54:	01 97       	sbiw	r24, 0x01	; 1
     a56:	f1 f7       	brne	.-4      	; 0xa54 <harvest+0x62e>
     a58:	9c 83       	std	Y+4, r25	; 0x04
     a5a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a5c:	8d 81       	ldd	r24, Y+5	; 0x05
     a5e:	9e 81       	ldd	r25, Y+6	; 0x06
     a60:	01 97       	sbiw	r24, 0x01	; 1
     a62:	9e 83       	std	Y+6, r25	; 0x06
     a64:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a66:	8d 81       	ldd	r24, Y+5	; 0x05
     a68:	9e 81       	ldd	r25, Y+6	; 0x06
     a6a:	00 97       	sbiw	r24, 0x00	; 0
     a6c:	69 f7       	brne	.-38     	; 0xa48 <harvest+0x622>
     a6e:	14 c0       	rjmp	.+40     	; 0xa98 <harvest+0x672>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a70:	6f 81       	ldd	r22, Y+7	; 0x07
     a72:	78 85       	ldd	r23, Y+8	; 0x08
     a74:	89 85       	ldd	r24, Y+9	; 0x09
     a76:	9a 85       	ldd	r25, Y+10	; 0x0a
     a78:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     a7c:	dc 01       	movw	r26, r24
     a7e:	cb 01       	movw	r24, r22
     a80:	9e 83       	std	Y+6, r25	; 0x06
     a82:	8d 83       	std	Y+5, r24	; 0x05
     a84:	8d 81       	ldd	r24, Y+5	; 0x05
     a86:	9e 81       	ldd	r25, Y+6	; 0x06
     a88:	9a 83       	std	Y+2, r25	; 0x02
     a8a:	89 83       	std	Y+1, r24	; 0x01
     a8c:	89 81       	ldd	r24, Y+1	; 0x01
     a8e:	9a 81       	ldd	r25, Y+2	; 0x02
     a90:	01 97       	sbiw	r24, 0x01	; 1
     a92:	f1 f7       	brne	.-4      	; 0xa90 <harvest+0x66a>
     a94:	9a 83       	std	Y+2, r25	; 0x02
     a96:	89 83       	std	Y+1, r24	; 0x01
					_delay_ms(1000);
					returnToInitial(trno);
     a98:	8d a5       	ldd	r24, Y+45	; 0x2d
     a9a:	9e a5       	ldd	r25, Y+46	; 0x2e
     a9c:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <returnToInitial>
					mode=0;
     aa0:	10 92 ba 04 	sts	0x04BA, r1
     aa4:	10 92 b9 04 	sts	0x04B9, r1
     aa8:	f8 cc       	rjmp	.-1552   	; 0x49a <harvest+0x74>
				break;
				default :
					LCD_WR_Command(0x01);
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
					LCD_Cursor(1,1);
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	61 e0       	ldi	r22, 0x01	; 1
     ab4:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
					LCD_String("Default");
     ab8:	8e ec       	ldi	r24, 0xCE	; 206
     aba:	92 e0       	ldi	r25, 0x02	; 2
     abc:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
     ac0:	ec cc       	rjmp	.-1576   	; 0x49a <harvest+0x74>

00000ac2 <Init_USART2>:
     ac2:	df 93       	push	r29
     ac4:	cf 93       	push	r28
     ac6:	cd b7       	in	r28, 0x3d	; 61
     ac8:	de b7       	in	r29, 0x3e	; 62
     aca:	e1 ed       	ldi	r30, 0xD1	; 209
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	10 82       	st	Z, r1
     ad0:	e0 ed       	ldi	r30, 0xD0	; 208
     ad2:	f0 e0       	ldi	r31, 0x00	; 0
     ad4:	10 82       	st	Z, r1
     ad6:	e2 ed       	ldi	r30, 0xD2	; 210
     ad8:	f0 e0       	ldi	r31, 0x00	; 0
     ada:	86 e0       	ldi	r24, 0x06	; 6
     adc:	80 83       	st	Z, r24
     ade:	e4 ed       	ldi	r30, 0xD4	; 212
     ae0:	f0 e0       	ldi	r31, 0x00	; 0
     ae2:	8f e5       	ldi	r24, 0x5F	; 95
     ae4:	80 83       	st	Z, r24
     ae6:	e5 ed       	ldi	r30, 0xD5	; 213
     ae8:	f0 e0       	ldi	r31, 0x00	; 0
     aea:	10 82       	st	Z, r1
     aec:	e1 ed       	ldi	r30, 0xD1	; 209
     aee:	f0 e0       	ldi	r31, 0x00	; 0
     af0:	88 ed       	ldi	r24, 0xD8	; 216
     af2:	80 83       	st	Z, r24
     af4:	cf 91       	pop	r28
     af6:	df 91       	pop	r29
     af8:	08 95       	ret

00000afa <__vector_51>:
     afa:	1f 92       	push	r1
     afc:	0f 92       	push	r0
     afe:	0f b6       	in	r0, 0x3f	; 63
     b00:	0f 92       	push	r0
     b02:	00 90 5b 00 	lds	r0, 0x005B
     b06:	0f 92       	push	r0
     b08:	11 24       	eor	r1, r1
     b0a:	2f 93       	push	r18
     b0c:	3f 93       	push	r19
     b0e:	8f 93       	push	r24
     b10:	9f 93       	push	r25
     b12:	ef 93       	push	r30
     b14:	ff 93       	push	r31
     b16:	df 93       	push	r29
     b18:	cf 93       	push	r28
     b1a:	00 d0       	rcall	.+0      	; 0xb1c <__vector_51+0x22>
     b1c:	cd b7       	in	r28, 0x3d	; 61
     b1e:	de b7       	in	r29, 0x3e	; 62
     b20:	e6 ed       	ldi	r30, 0xD6	; 214
     b22:	f0 e0       	ldi	r31, 0x00	; 0
     b24:	80 81       	ld	r24, Z
     b26:	8b 83       	std	Y+3, r24	; 0x03
     b28:	8b 81       	ldd	r24, Y+3	; 0x03
     b2a:	8a 30       	cpi	r24, 0x0A	; 10
     b2c:	99 f0       	breq	.+38     	; 0xb54 <__vector_51+0x5a>
     b2e:	80 91 c4 04 	lds	r24, 0x04C4
     b32:	90 91 c5 04 	lds	r25, 0x04C5
     b36:	fc 01       	movw	r30, r24
     b38:	ee 5a       	subi	r30, 0xAE	; 174
     b3a:	fb 4f       	sbci	r31, 0xFB	; 251
     b3c:	8b 81       	ldd	r24, Y+3	; 0x03
     b3e:	80 83       	st	Z, r24
     b40:	80 91 c4 04 	lds	r24, 0x04C4
     b44:	90 91 c5 04 	lds	r25, 0x04C5
     b48:	01 96       	adiw	r24, 0x01	; 1
     b4a:	90 93 c5 04 	sts	0x04C5, r25
     b4e:	80 93 c4 04 	sts	0x04C4, r24
     b52:	3b c0       	rjmp	.+118    	; 0xbca <__vector_51+0xd0>
     b54:	80 91 52 04 	lds	r24, 0x0452
     b58:	87 32       	cpi	r24, 0x27	; 39
     b5a:	41 f0       	breq	.+16     	; 0xb6c <__vector_51+0x72>
     b5c:	80 91 52 04 	lds	r24, 0x0452
     b60:	83 34       	cpi	r24, 0x43	; 67
     b62:	21 f0       	breq	.+8      	; 0xb6c <__vector_51+0x72>
     b64:	80 91 52 04 	lds	r24, 0x0452
     b68:	84 34       	cpi	r24, 0x44	; 68
     b6a:	29 f4       	brne	.+10     	; 0xb76 <__vector_51+0x7c>
     b6c:	10 92 c5 04 	sts	0x04C5, r1
     b70:	10 92 c4 04 	sts	0x04C4, r1
     b74:	2a c0       	rjmp	.+84     	; 0xbca <__vector_51+0xd0>
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	80 93 ea 03 	sts	0x03EA, r24
     b7c:	1a 82       	std	Y+2, r1	; 0x02
     b7e:	19 82       	std	Y+1, r1	; 0x01
     b80:	11 c0       	rjmp	.+34     	; 0xba4 <__vector_51+0xaa>
     b82:	29 81       	ldd	r18, Y+1	; 0x01
     b84:	3a 81       	ldd	r19, Y+2	; 0x02
     b86:	89 81       	ldd	r24, Y+1	; 0x01
     b88:	9a 81       	ldd	r25, Y+2	; 0x02
     b8a:	fc 01       	movw	r30, r24
     b8c:	ee 5a       	subi	r30, 0xAE	; 174
     b8e:	fb 4f       	sbci	r31, 0xFB	; 251
     b90:	80 81       	ld	r24, Z
     b92:	f9 01       	movw	r30, r18
     b94:	ef 51       	subi	r30, 0x1F	; 31
     b96:	fb 4f       	sbci	r31, 0xFB	; 251
     b98:	80 83       	st	Z, r24
     b9a:	89 81       	ldd	r24, Y+1	; 0x01
     b9c:	9a 81       	ldd	r25, Y+2	; 0x02
     b9e:	01 96       	adiw	r24, 0x01	; 1
     ba0:	9a 83       	std	Y+2, r25	; 0x02
     ba2:	89 83       	std	Y+1, r24	; 0x01
     ba4:	29 81       	ldd	r18, Y+1	; 0x01
     ba6:	3a 81       	ldd	r19, Y+2	; 0x02
     ba8:	80 91 c4 04 	lds	r24, 0x04C4
     bac:	90 91 c5 04 	lds	r25, 0x04C5
     bb0:	28 17       	cp	r18, r24
     bb2:	39 07       	cpc	r19, r25
     bb4:	30 f3       	brcs	.-52     	; 0xb82 <__vector_51+0x88>
     bb6:	80 91 c4 04 	lds	r24, 0x04C4
     bba:	90 91 c5 04 	lds	r25, 0x04C5
     bbe:	80 93 b8 04 	sts	0x04B8, r24
     bc2:	10 92 c5 04 	sts	0x04C5, r1
     bc6:	10 92 c4 04 	sts	0x04C4, r1
     bca:	0f 90       	pop	r0
     bcc:	0f 90       	pop	r0
     bce:	0f 90       	pop	r0
     bd0:	cf 91       	pop	r28
     bd2:	df 91       	pop	r29
     bd4:	ff 91       	pop	r31
     bd6:	ef 91       	pop	r30
     bd8:	9f 91       	pop	r25
     bda:	8f 91       	pop	r24
     bdc:	3f 91       	pop	r19
     bde:	2f 91       	pop	r18
     be0:	0f 90       	pop	r0
     be2:	00 92 5b 00 	sts	0x005B, r0
     be6:	0f 90       	pop	r0
     be8:	0f be       	out	0x3f, r0	; 63
     bea:	0f 90       	pop	r0
     bec:	1f 90       	pop	r1
     bee:	18 95       	reti

00000bf0 <__vector_53>:
     bf0:	1f 92       	push	r1
     bf2:	0f 92       	push	r0
     bf4:	0f b6       	in	r0, 0x3f	; 63
     bf6:	0f 92       	push	r0
     bf8:	00 90 5b 00 	lds	r0, 0x005B
     bfc:	0f 92       	push	r0
     bfe:	11 24       	eor	r1, r1
     c00:	2f 93       	push	r18
     c02:	3f 93       	push	r19
     c04:	8f 93       	push	r24
     c06:	9f 93       	push	r25
     c08:	af 93       	push	r26
     c0a:	bf 93       	push	r27
     c0c:	ef 93       	push	r30
     c0e:	ff 93       	push	r31
     c10:	df 93       	push	r29
     c12:	cf 93       	push	r28
     c14:	cd b7       	in	r28, 0x3d	; 61
     c16:	de b7       	in	r29, 0x3e	; 62
     c18:	20 91 bb 04 	lds	r18, 0x04BB
     c1c:	30 91 bc 04 	lds	r19, 0x04BC
     c20:	80 91 c1 04 	lds	r24, 0x04C1
     c24:	90 91 c2 04 	lds	r25, 0x04C2
     c28:	28 17       	cp	r18, r24
     c2a:	39 07       	cpc	r19, r25
     c2c:	58 f0       	brcs	.+22     	; 0xc44 <__vector_53+0x54>
     c2e:	a6 ed       	ldi	r26, 0xD6	; 214
     c30:	b0 e0       	ldi	r27, 0x00	; 0
     c32:	80 91 c1 04 	lds	r24, 0x04C1
     c36:	90 91 c2 04 	lds	r25, 0x04C2
     c3a:	fc 01       	movw	r30, r24
     c3c:	e5 51       	subi	r30, 0x15	; 21
     c3e:	fc 4f       	sbci	r31, 0xFC	; 252
     c40:	80 81       	ld	r24, Z
     c42:	8c 93       	st	X, r24
     c44:	80 91 c1 04 	lds	r24, 0x04C1
     c48:	90 91 c2 04 	lds	r25, 0x04C2
     c4c:	01 96       	adiw	r24, 0x01	; 1
     c4e:	90 93 c2 04 	sts	0x04C2, r25
     c52:	80 93 c1 04 	sts	0x04C1, r24
     c56:	cf 91       	pop	r28
     c58:	df 91       	pop	r29
     c5a:	ff 91       	pop	r31
     c5c:	ef 91       	pop	r30
     c5e:	bf 91       	pop	r27
     c60:	af 91       	pop	r26
     c62:	9f 91       	pop	r25
     c64:	8f 91       	pop	r24
     c66:	3f 91       	pop	r19
     c68:	2f 91       	pop	r18
     c6a:	0f 90       	pop	r0
     c6c:	00 92 5b 00 	sts	0x005B, r0
     c70:	0f 90       	pop	r0
     c72:	0f be       	out	0x3f, r0	; 63
     c74:	0f 90       	pop	r0
     c76:	1f 90       	pop	r1
     c78:	18 95       	reti

00000c7a <BlueTooth_Add>:
     c7a:	df 93       	push	r29
     c7c:	cf 93       	push	r28
     c7e:	cd b7       	in	r28, 0x3d	; 61
     c80:	de b7       	in	r29, 0x3e	; 62
     c82:	81 e4       	ldi	r24, 0x41	; 65
     c84:	80 93 eb 03 	sts	0x03EB, r24
     c88:	84 e5       	ldi	r24, 0x54	; 84
     c8a:	80 93 ec 03 	sts	0x03EC, r24
     c8e:	82 e4       	ldi	r24, 0x42	; 66
     c90:	80 93 ed 03 	sts	0x03ED, r24
     c94:	8f e3       	ldi	r24, 0x3F	; 63
     c96:	80 93 ee 03 	sts	0x03EE, r24
     c9a:	8d e0       	ldi	r24, 0x0D	; 13
     c9c:	80 93 ef 03 	sts	0x03EF, r24
     ca0:	84 e0       	ldi	r24, 0x04	; 4
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	90 93 bc 04 	sts	0x04BC, r25
     ca8:	80 93 bb 04 	sts	0x04BB, r24
     cac:	81 e0       	ldi	r24, 0x01	; 1
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	90 93 c2 04 	sts	0x04C2, r25
     cb4:	80 93 c1 04 	sts	0x04C1, r24
     cb8:	e6 ed       	ldi	r30, 0xD6	; 214
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	80 91 eb 03 	lds	r24, 0x03EB
     cc0:	80 83       	st	Z, r24
     cc2:	81 e0       	ldi	r24, 0x01	; 1
     cc4:	80 93 4f 04 	sts	0x044F, r24
     cc8:	cf 91       	pop	r28
     cca:	df 91       	pop	r29
     ccc:	08 95       	ret

00000cce <LCD_Reset_4bit>:
     cce:	0f 93       	push	r16
     cd0:	1f 93       	push	r17
     cd2:	df 93       	push	r29
     cd4:	cf 93       	push	r28
     cd6:	cd b7       	in	r28, 0x3d	; 61
     cd8:	de b7       	in	r29, 0x3e	; 62
     cda:	c0 57       	subi	r28, 0x70	; 112
     cdc:	d0 40       	sbci	r29, 0x00	; 0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	f8 94       	cli
     ce2:	de bf       	out	0x3e, r29	; 62
     ce4:	0f be       	out	0x3f, r0	; 63
     ce6:	cd bf       	out	0x3d, r28	; 61
     ce8:	fe 01       	movw	r30, r28
     cea:	e3 59       	subi	r30, 0x93	; 147
     cec:	ff 4f       	sbci	r31, 0xFF	; 255
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	a0 e8       	ldi	r26, 0x80	; 128
     cf4:	bf e3       	ldi	r27, 0x3F	; 63
     cf6:	80 83       	st	Z, r24
     cf8:	91 83       	std	Z+1, r25	; 0x01
     cfa:	a2 83       	std	Z+2, r26	; 0x02
     cfc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cfe:	8e 01       	movw	r16, r28
     d00:	07 59       	subi	r16, 0x97	; 151
     d02:	1f 4f       	sbci	r17, 0xFF	; 255
     d04:	fe 01       	movw	r30, r28
     d06:	e3 59       	subi	r30, 0x93	; 147
     d08:	ff 4f       	sbci	r31, 0xFF	; 255
     d0a:	60 81       	ld	r22, Z
     d0c:	71 81       	ldd	r23, Z+1	; 0x01
     d0e:	82 81       	ldd	r24, Z+2	; 0x02
     d10:	93 81       	ldd	r25, Z+3	; 0x03
     d12:	2d ec       	ldi	r18, 0xCD	; 205
     d14:	3c ec       	ldi	r19, 0xCC	; 204
     d16:	4c e2       	ldi	r20, 0x2C	; 44
     d18:	55 e4       	ldi	r21, 0x45	; 69
     d1a:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     d1e:	dc 01       	movw	r26, r24
     d20:	cb 01       	movw	r24, r22
     d22:	f8 01       	movw	r30, r16
     d24:	80 83       	st	Z, r24
     d26:	91 83       	std	Z+1, r25	; 0x01
     d28:	a2 83       	std	Z+2, r26	; 0x02
     d2a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d2c:	fe 01       	movw	r30, r28
     d2e:	e7 59       	subi	r30, 0x97	; 151
     d30:	ff 4f       	sbci	r31, 0xFF	; 255
     d32:	60 81       	ld	r22, Z
     d34:	71 81       	ldd	r23, Z+1	; 0x01
     d36:	82 81       	ldd	r24, Z+2	; 0x02
     d38:	93 81       	ldd	r25, Z+3	; 0x03
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	40 e8       	ldi	r20, 0x80	; 128
     d40:	5f e3       	ldi	r21, 0x3F	; 63
     d42:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
     d46:	88 23       	and	r24, r24
     d48:	44 f4       	brge	.+16     	; 0xd5a <LCD_Reset_4bit+0x8c>
		__ticks = 1;
     d4a:	fe 01       	movw	r30, r28
     d4c:	e9 59       	subi	r30, 0x99	; 153
     d4e:	ff 4f       	sbci	r31, 0xFF	; 255
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	91 83       	std	Z+1, r25	; 0x01
     d56:	80 83       	st	Z, r24
     d58:	64 c0       	rjmp	.+200    	; 0xe22 <LCD_Reset_4bit+0x154>
	else if (__tmp > 65535)
     d5a:	fe 01       	movw	r30, r28
     d5c:	e7 59       	subi	r30, 0x97	; 151
     d5e:	ff 4f       	sbci	r31, 0xFF	; 255
     d60:	60 81       	ld	r22, Z
     d62:	71 81       	ldd	r23, Z+1	; 0x01
     d64:	82 81       	ldd	r24, Z+2	; 0x02
     d66:	93 81       	ldd	r25, Z+3	; 0x03
     d68:	20 e0       	ldi	r18, 0x00	; 0
     d6a:	3f ef       	ldi	r19, 0xFF	; 255
     d6c:	4f e7       	ldi	r20, 0x7F	; 127
     d6e:	57 e4       	ldi	r21, 0x47	; 71
     d70:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
     d74:	18 16       	cp	r1, r24
     d76:	0c f0       	brlt	.+2      	; 0xd7a <LCD_Reset_4bit+0xac>
     d78:	43 c0       	rjmp	.+134    	; 0xe00 <LCD_Reset_4bit+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d7a:	fe 01       	movw	r30, r28
     d7c:	e3 59       	subi	r30, 0x93	; 147
     d7e:	ff 4f       	sbci	r31, 0xFF	; 255
     d80:	60 81       	ld	r22, Z
     d82:	71 81       	ldd	r23, Z+1	; 0x01
     d84:	82 81       	ldd	r24, Z+2	; 0x02
     d86:	93 81       	ldd	r25, Z+3	; 0x03
     d88:	20 e0       	ldi	r18, 0x00	; 0
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	40 e2       	ldi	r20, 0x20	; 32
     d8e:	51 e4       	ldi	r21, 0x41	; 65
     d90:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     d94:	dc 01       	movw	r26, r24
     d96:	cb 01       	movw	r24, r22
     d98:	8e 01       	movw	r16, r28
     d9a:	09 59       	subi	r16, 0x99	; 153
     d9c:	1f 4f       	sbci	r17, 0xFF	; 255
     d9e:	bc 01       	movw	r22, r24
     da0:	cd 01       	movw	r24, r26
     da2:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     da6:	dc 01       	movw	r26, r24
     da8:	cb 01       	movw	r24, r22
     daa:	f8 01       	movw	r30, r16
     dac:	91 83       	std	Z+1, r25	; 0x01
     dae:	80 83       	st	Z, r24
     db0:	1f c0       	rjmp	.+62     	; 0xdf0 <LCD_Reset_4bit+0x122>
     db2:	fe 01       	movw	r30, r28
     db4:	eb 59       	subi	r30, 0x9B	; 155
     db6:	ff 4f       	sbci	r31, 0xFF	; 255
     db8:	84 e1       	ldi	r24, 0x14	; 20
     dba:	91 e0       	ldi	r25, 0x01	; 1
     dbc:	91 83       	std	Z+1, r25	; 0x01
     dbe:	80 83       	st	Z, r24
     dc0:	fe 01       	movw	r30, r28
     dc2:	eb 59       	subi	r30, 0x9B	; 155
     dc4:	ff 4f       	sbci	r31, 0xFF	; 255
     dc6:	80 81       	ld	r24, Z
     dc8:	91 81       	ldd	r25, Z+1	; 0x01
     dca:	01 97       	sbiw	r24, 0x01	; 1
     dcc:	f1 f7       	brne	.-4      	; 0xdca <LCD_Reset_4bit+0xfc>
     dce:	fe 01       	movw	r30, r28
     dd0:	eb 59       	subi	r30, 0x9B	; 155
     dd2:	ff 4f       	sbci	r31, 0xFF	; 255
     dd4:	91 83       	std	Z+1, r25	; 0x01
     dd6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dd8:	de 01       	movw	r26, r28
     dda:	a9 59       	subi	r26, 0x99	; 153
     ddc:	bf 4f       	sbci	r27, 0xFF	; 255
     dde:	fe 01       	movw	r30, r28
     de0:	e9 59       	subi	r30, 0x99	; 153
     de2:	ff 4f       	sbci	r31, 0xFF	; 255
     de4:	80 81       	ld	r24, Z
     de6:	91 81       	ldd	r25, Z+1	; 0x01
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	11 96       	adiw	r26, 0x01	; 1
     dec:	9c 93       	st	X, r25
     dee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     df0:	fe 01       	movw	r30, r28
     df2:	e9 59       	subi	r30, 0x99	; 153
     df4:	ff 4f       	sbci	r31, 0xFF	; 255
     df6:	80 81       	ld	r24, Z
     df8:	91 81       	ldd	r25, Z+1	; 0x01
     dfa:	00 97       	sbiw	r24, 0x00	; 0
     dfc:	d1 f6       	brne	.-76     	; 0xdb2 <LCD_Reset_4bit+0xe4>
     dfe:	27 c0       	rjmp	.+78     	; 0xe4e <LCD_Reset_4bit+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e00:	8e 01       	movw	r16, r28
     e02:	09 59       	subi	r16, 0x99	; 153
     e04:	1f 4f       	sbci	r17, 0xFF	; 255
     e06:	fe 01       	movw	r30, r28
     e08:	e7 59       	subi	r30, 0x97	; 151
     e0a:	ff 4f       	sbci	r31, 0xFF	; 255
     e0c:	60 81       	ld	r22, Z
     e0e:	71 81       	ldd	r23, Z+1	; 0x01
     e10:	82 81       	ldd	r24, Z+2	; 0x02
     e12:	93 81       	ldd	r25, Z+3	; 0x03
     e14:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     e18:	dc 01       	movw	r26, r24
     e1a:	cb 01       	movw	r24, r22
     e1c:	f8 01       	movw	r30, r16
     e1e:	91 83       	std	Z+1, r25	; 0x01
     e20:	80 83       	st	Z, r24
     e22:	de 01       	movw	r26, r28
     e24:	ad 59       	subi	r26, 0x9D	; 157
     e26:	bf 4f       	sbci	r27, 0xFF	; 255
     e28:	fe 01       	movw	r30, r28
     e2a:	e9 59       	subi	r30, 0x99	; 153
     e2c:	ff 4f       	sbci	r31, 0xFF	; 255
     e2e:	80 81       	ld	r24, Z
     e30:	91 81       	ldd	r25, Z+1	; 0x01
     e32:	8d 93       	st	X+, r24
     e34:	9c 93       	st	X, r25
     e36:	fe 01       	movw	r30, r28
     e38:	ed 59       	subi	r30, 0x9D	; 157
     e3a:	ff 4f       	sbci	r31, 0xFF	; 255
     e3c:	80 81       	ld	r24, Z
     e3e:	91 81       	ldd	r25, Z+1	; 0x01
     e40:	01 97       	sbiw	r24, 0x01	; 1
     e42:	f1 f7       	brne	.-4      	; 0xe40 <LCD_Reset_4bit+0x172>
     e44:	fe 01       	movw	r30, r28
     e46:	ed 59       	subi	r30, 0x9D	; 157
     e48:	ff 4f       	sbci	r31, 0xFF	; 255
     e4a:	91 83       	std	Z+1, r25	; 0x01
     e4c:	80 83       	st	Z, r24
     e4e:	a8 e2       	ldi	r26, 0x28	; 40
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	e8 e2       	ldi	r30, 0x28	; 40
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	80 81       	ld	r24, Z
     e58:	8e 7f       	andi	r24, 0xFE	; 254
     e5a:	8c 93       	st	X, r24
     e5c:	a8 e2       	ldi	r26, 0x28	; 40
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e8 e2       	ldi	r30, 0x28	; 40
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	8d 7f       	andi	r24, 0xFD	; 253
     e68:	8c 93       	st	X, r24
     e6a:	e8 e2       	ldi	r30, 0x28	; 40
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
     e6e:	80 e3       	ldi	r24, 0x30	; 48
     e70:	80 83       	st	Z, r24
     e72:	a8 e2       	ldi	r26, 0x28	; 40
     e74:	b0 e0       	ldi	r27, 0x00	; 0
     e76:	e8 e2       	ldi	r30, 0x28	; 40
     e78:	f0 e0       	ldi	r31, 0x00	; 0
     e7a:	80 81       	ld	r24, Z
     e7c:	84 60       	ori	r24, 0x04	; 4
     e7e:	8c 93       	st	X, r24
     e80:	fe 01       	movw	r30, r28
     e82:	e1 5a       	subi	r30, 0xA1	; 161
     e84:	ff 4f       	sbci	r31, 0xFF	; 255
     e86:	80 e0       	ldi	r24, 0x00	; 0
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	a0 ea       	ldi	r26, 0xA0	; 160
     e8c:	b0 e4       	ldi	r27, 0x40	; 64
     e8e:	80 83       	st	Z, r24
     e90:	91 83       	std	Z+1, r25	; 0x01
     e92:	a2 83       	std	Z+2, r26	; 0x02
     e94:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e96:	8e 01       	movw	r16, r28
     e98:	05 5a       	subi	r16, 0xA5	; 165
     e9a:	1f 4f       	sbci	r17, 0xFF	; 255
     e9c:	fe 01       	movw	r30, r28
     e9e:	e1 5a       	subi	r30, 0xA1	; 161
     ea0:	ff 4f       	sbci	r31, 0xFF	; 255
     ea2:	60 81       	ld	r22, Z
     ea4:	71 81       	ldd	r23, Z+1	; 0x01
     ea6:	82 81       	ldd	r24, Z+2	; 0x02
     ea8:	93 81       	ldd	r25, Z+3	; 0x03
     eaa:	2d ec       	ldi	r18, 0xCD	; 205
     eac:	3c ec       	ldi	r19, 0xCC	; 204
     eae:	4c e2       	ldi	r20, 0x2C	; 44
     eb0:	55 e4       	ldi	r21, 0x45	; 69
     eb2:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     eb6:	dc 01       	movw	r26, r24
     eb8:	cb 01       	movw	r24, r22
     eba:	f8 01       	movw	r30, r16
     ebc:	80 83       	st	Z, r24
     ebe:	91 83       	std	Z+1, r25	; 0x01
     ec0:	a2 83       	std	Z+2, r26	; 0x02
     ec2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ec4:	fe 01       	movw	r30, r28
     ec6:	e5 5a       	subi	r30, 0xA5	; 165
     ec8:	ff 4f       	sbci	r31, 0xFF	; 255
     eca:	60 81       	ld	r22, Z
     ecc:	71 81       	ldd	r23, Z+1	; 0x01
     ece:	82 81       	ldd	r24, Z+2	; 0x02
     ed0:	93 81       	ldd	r25, Z+3	; 0x03
     ed2:	20 e0       	ldi	r18, 0x00	; 0
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	40 e8       	ldi	r20, 0x80	; 128
     ed8:	5f e3       	ldi	r21, 0x3F	; 63
     eda:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
     ede:	88 23       	and	r24, r24
     ee0:	44 f4       	brge	.+16     	; 0xef2 <LCD_Reset_4bit+0x224>
		__ticks = 1;
     ee2:	fe 01       	movw	r30, r28
     ee4:	e7 5a       	subi	r30, 0xA7	; 167
     ee6:	ff 4f       	sbci	r31, 0xFF	; 255
     ee8:	81 e0       	ldi	r24, 0x01	; 1
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	91 83       	std	Z+1, r25	; 0x01
     eee:	80 83       	st	Z, r24
     ef0:	64 c0       	rjmp	.+200    	; 0xfba <LCD_Reset_4bit+0x2ec>
	else if (__tmp > 65535)
     ef2:	fe 01       	movw	r30, r28
     ef4:	e5 5a       	subi	r30, 0xA5	; 165
     ef6:	ff 4f       	sbci	r31, 0xFF	; 255
     ef8:	60 81       	ld	r22, Z
     efa:	71 81       	ldd	r23, Z+1	; 0x01
     efc:	82 81       	ldd	r24, Z+2	; 0x02
     efe:	93 81       	ldd	r25, Z+3	; 0x03
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	3f ef       	ldi	r19, 0xFF	; 255
     f04:	4f e7       	ldi	r20, 0x7F	; 127
     f06:	57 e4       	ldi	r21, 0x47	; 71
     f08:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
     f0c:	18 16       	cp	r1, r24
     f0e:	0c f0       	brlt	.+2      	; 0xf12 <LCD_Reset_4bit+0x244>
     f10:	43 c0       	rjmp	.+134    	; 0xf98 <LCD_Reset_4bit+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f12:	fe 01       	movw	r30, r28
     f14:	e1 5a       	subi	r30, 0xA1	; 161
     f16:	ff 4f       	sbci	r31, 0xFF	; 255
     f18:	60 81       	ld	r22, Z
     f1a:	71 81       	ldd	r23, Z+1	; 0x01
     f1c:	82 81       	ldd	r24, Z+2	; 0x02
     f1e:	93 81       	ldd	r25, Z+3	; 0x03
     f20:	20 e0       	ldi	r18, 0x00	; 0
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	40 e2       	ldi	r20, 0x20	; 32
     f26:	51 e4       	ldi	r21, 0x41	; 65
     f28:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
     f2c:	dc 01       	movw	r26, r24
     f2e:	cb 01       	movw	r24, r22
     f30:	8e 01       	movw	r16, r28
     f32:	07 5a       	subi	r16, 0xA7	; 167
     f34:	1f 4f       	sbci	r17, 0xFF	; 255
     f36:	bc 01       	movw	r22, r24
     f38:	cd 01       	movw	r24, r26
     f3a:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     f3e:	dc 01       	movw	r26, r24
     f40:	cb 01       	movw	r24, r22
     f42:	f8 01       	movw	r30, r16
     f44:	91 83       	std	Z+1, r25	; 0x01
     f46:	80 83       	st	Z, r24
     f48:	1f c0       	rjmp	.+62     	; 0xf88 <LCD_Reset_4bit+0x2ba>
     f4a:	fe 01       	movw	r30, r28
     f4c:	e9 5a       	subi	r30, 0xA9	; 169
     f4e:	ff 4f       	sbci	r31, 0xFF	; 255
     f50:	84 e1       	ldi	r24, 0x14	; 20
     f52:	91 e0       	ldi	r25, 0x01	; 1
     f54:	91 83       	std	Z+1, r25	; 0x01
     f56:	80 83       	st	Z, r24
     f58:	fe 01       	movw	r30, r28
     f5a:	e9 5a       	subi	r30, 0xA9	; 169
     f5c:	ff 4f       	sbci	r31, 0xFF	; 255
     f5e:	80 81       	ld	r24, Z
     f60:	91 81       	ldd	r25, Z+1	; 0x01
     f62:	01 97       	sbiw	r24, 0x01	; 1
     f64:	f1 f7       	brne	.-4      	; 0xf62 <LCD_Reset_4bit+0x294>
     f66:	fe 01       	movw	r30, r28
     f68:	e9 5a       	subi	r30, 0xA9	; 169
     f6a:	ff 4f       	sbci	r31, 0xFF	; 255
     f6c:	91 83       	std	Z+1, r25	; 0x01
     f6e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f70:	de 01       	movw	r26, r28
     f72:	a7 5a       	subi	r26, 0xA7	; 167
     f74:	bf 4f       	sbci	r27, 0xFF	; 255
     f76:	fe 01       	movw	r30, r28
     f78:	e7 5a       	subi	r30, 0xA7	; 167
     f7a:	ff 4f       	sbci	r31, 0xFF	; 255
     f7c:	80 81       	ld	r24, Z
     f7e:	91 81       	ldd	r25, Z+1	; 0x01
     f80:	01 97       	sbiw	r24, 0x01	; 1
     f82:	11 96       	adiw	r26, 0x01	; 1
     f84:	9c 93       	st	X, r25
     f86:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f88:	fe 01       	movw	r30, r28
     f8a:	e7 5a       	subi	r30, 0xA7	; 167
     f8c:	ff 4f       	sbci	r31, 0xFF	; 255
     f8e:	80 81       	ld	r24, Z
     f90:	91 81       	ldd	r25, Z+1	; 0x01
     f92:	00 97       	sbiw	r24, 0x00	; 0
     f94:	d1 f6       	brne	.-76     	; 0xf4a <LCD_Reset_4bit+0x27c>
     f96:	27 c0       	rjmp	.+78     	; 0xfe6 <LCD_Reset_4bit+0x318>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f98:	8e 01       	movw	r16, r28
     f9a:	07 5a       	subi	r16, 0xA7	; 167
     f9c:	1f 4f       	sbci	r17, 0xFF	; 255
     f9e:	fe 01       	movw	r30, r28
     fa0:	e5 5a       	subi	r30, 0xA5	; 165
     fa2:	ff 4f       	sbci	r31, 0xFF	; 255
     fa4:	60 81       	ld	r22, Z
     fa6:	71 81       	ldd	r23, Z+1	; 0x01
     fa8:	82 81       	ldd	r24, Z+2	; 0x02
     faa:	93 81       	ldd	r25, Z+3	; 0x03
     fac:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
     fb0:	dc 01       	movw	r26, r24
     fb2:	cb 01       	movw	r24, r22
     fb4:	f8 01       	movw	r30, r16
     fb6:	91 83       	std	Z+1, r25	; 0x01
     fb8:	80 83       	st	Z, r24
     fba:	de 01       	movw	r26, r28
     fbc:	ab 5a       	subi	r26, 0xAB	; 171
     fbe:	bf 4f       	sbci	r27, 0xFF	; 255
     fc0:	fe 01       	movw	r30, r28
     fc2:	e7 5a       	subi	r30, 0xA7	; 167
     fc4:	ff 4f       	sbci	r31, 0xFF	; 255
     fc6:	80 81       	ld	r24, Z
     fc8:	91 81       	ldd	r25, Z+1	; 0x01
     fca:	8d 93       	st	X+, r24
     fcc:	9c 93       	st	X, r25
     fce:	fe 01       	movw	r30, r28
     fd0:	eb 5a       	subi	r30, 0xAB	; 171
     fd2:	ff 4f       	sbci	r31, 0xFF	; 255
     fd4:	80 81       	ld	r24, Z
     fd6:	91 81       	ldd	r25, Z+1	; 0x01
     fd8:	01 97       	sbiw	r24, 0x01	; 1
     fda:	f1 f7       	brne	.-4      	; 0xfd8 <LCD_Reset_4bit+0x30a>
     fdc:	fe 01       	movw	r30, r28
     fde:	eb 5a       	subi	r30, 0xAB	; 171
     fe0:	ff 4f       	sbci	r31, 0xFF	; 255
     fe2:	91 83       	std	Z+1, r25	; 0x01
     fe4:	80 83       	st	Z, r24
     fe6:	a8 e2       	ldi	r26, 0x28	; 40
     fe8:	b0 e0       	ldi	r27, 0x00	; 0
     fea:	e8 e2       	ldi	r30, 0x28	; 40
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	80 81       	ld	r24, Z
     ff0:	8b 7f       	andi	r24, 0xFB	; 251
     ff2:	8c 93       	st	X, r24
     ff4:	fe 01       	movw	r30, r28
     ff6:	ef 5a       	subi	r30, 0xAF	; 175
     ff8:	ff 4f       	sbci	r31, 0xFF	; 255
     ffa:	80 e0       	ldi	r24, 0x00	; 0
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	a0 e8       	ldi	r26, 0x80	; 128
    1000:	bf e3       	ldi	r27, 0x3F	; 63
    1002:	80 83       	st	Z, r24
    1004:	91 83       	std	Z+1, r25	; 0x01
    1006:	a2 83       	std	Z+2, r26	; 0x02
    1008:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    100a:	8e 01       	movw	r16, r28
    100c:	03 5b       	subi	r16, 0xB3	; 179
    100e:	1f 4f       	sbci	r17, 0xFF	; 255
    1010:	fe 01       	movw	r30, r28
    1012:	ef 5a       	subi	r30, 0xAF	; 175
    1014:	ff 4f       	sbci	r31, 0xFF	; 255
    1016:	60 81       	ld	r22, Z
    1018:	71 81       	ldd	r23, Z+1	; 0x01
    101a:	82 81       	ldd	r24, Z+2	; 0x02
    101c:	93 81       	ldd	r25, Z+3	; 0x03
    101e:	2d ec       	ldi	r18, 0xCD	; 205
    1020:	3c ec       	ldi	r19, 0xCC	; 204
    1022:	4c e2       	ldi	r20, 0x2C	; 44
    1024:	55 e4       	ldi	r21, 0x45	; 69
    1026:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    102a:	dc 01       	movw	r26, r24
    102c:	cb 01       	movw	r24, r22
    102e:	f8 01       	movw	r30, r16
    1030:	80 83       	st	Z, r24
    1032:	91 83       	std	Z+1, r25	; 0x01
    1034:	a2 83       	std	Z+2, r26	; 0x02
    1036:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1038:	fe 01       	movw	r30, r28
    103a:	e3 5b       	subi	r30, 0xB3	; 179
    103c:	ff 4f       	sbci	r31, 0xFF	; 255
    103e:	60 81       	ld	r22, Z
    1040:	71 81       	ldd	r23, Z+1	; 0x01
    1042:	82 81       	ldd	r24, Z+2	; 0x02
    1044:	93 81       	ldd	r25, Z+3	; 0x03
    1046:	20 e0       	ldi	r18, 0x00	; 0
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	40 e8       	ldi	r20, 0x80	; 128
    104c:	5f e3       	ldi	r21, 0x3F	; 63
    104e:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    1052:	88 23       	and	r24, r24
    1054:	44 f4       	brge	.+16     	; 0x1066 <LCD_Reset_4bit+0x398>
		__ticks = 1;
    1056:	fe 01       	movw	r30, r28
    1058:	e5 5b       	subi	r30, 0xB5	; 181
    105a:	ff 4f       	sbci	r31, 0xFF	; 255
    105c:	81 e0       	ldi	r24, 0x01	; 1
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	91 83       	std	Z+1, r25	; 0x01
    1062:	80 83       	st	Z, r24
    1064:	64 c0       	rjmp	.+200    	; 0x112e <LCD_Reset_4bit+0x460>
	else if (__tmp > 65535)
    1066:	fe 01       	movw	r30, r28
    1068:	e3 5b       	subi	r30, 0xB3	; 179
    106a:	ff 4f       	sbci	r31, 0xFF	; 255
    106c:	60 81       	ld	r22, Z
    106e:	71 81       	ldd	r23, Z+1	; 0x01
    1070:	82 81       	ldd	r24, Z+2	; 0x02
    1072:	93 81       	ldd	r25, Z+3	; 0x03
    1074:	20 e0       	ldi	r18, 0x00	; 0
    1076:	3f ef       	ldi	r19, 0xFF	; 255
    1078:	4f e7       	ldi	r20, 0x7F	; 127
    107a:	57 e4       	ldi	r21, 0x47	; 71
    107c:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1080:	18 16       	cp	r1, r24
    1082:	0c f0       	brlt	.+2      	; 0x1086 <LCD_Reset_4bit+0x3b8>
    1084:	43 c0       	rjmp	.+134    	; 0x110c <LCD_Reset_4bit+0x43e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1086:	fe 01       	movw	r30, r28
    1088:	ef 5a       	subi	r30, 0xAF	; 175
    108a:	ff 4f       	sbci	r31, 0xFF	; 255
    108c:	60 81       	ld	r22, Z
    108e:	71 81       	ldd	r23, Z+1	; 0x01
    1090:	82 81       	ldd	r24, Z+2	; 0x02
    1092:	93 81       	ldd	r25, Z+3	; 0x03
    1094:	20 e0       	ldi	r18, 0x00	; 0
    1096:	30 e0       	ldi	r19, 0x00	; 0
    1098:	40 e2       	ldi	r20, 0x20	; 32
    109a:	51 e4       	ldi	r21, 0x41	; 65
    109c:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    10a0:	dc 01       	movw	r26, r24
    10a2:	cb 01       	movw	r24, r22
    10a4:	8e 01       	movw	r16, r28
    10a6:	05 5b       	subi	r16, 0xB5	; 181
    10a8:	1f 4f       	sbci	r17, 0xFF	; 255
    10aa:	bc 01       	movw	r22, r24
    10ac:	cd 01       	movw	r24, r26
    10ae:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    10b2:	dc 01       	movw	r26, r24
    10b4:	cb 01       	movw	r24, r22
    10b6:	f8 01       	movw	r30, r16
    10b8:	91 83       	std	Z+1, r25	; 0x01
    10ba:	80 83       	st	Z, r24
    10bc:	1f c0       	rjmp	.+62     	; 0x10fc <LCD_Reset_4bit+0x42e>
    10be:	fe 01       	movw	r30, r28
    10c0:	e7 5b       	subi	r30, 0xB7	; 183
    10c2:	ff 4f       	sbci	r31, 0xFF	; 255
    10c4:	84 e1       	ldi	r24, 0x14	; 20
    10c6:	91 e0       	ldi	r25, 0x01	; 1
    10c8:	91 83       	std	Z+1, r25	; 0x01
    10ca:	80 83       	st	Z, r24
    10cc:	fe 01       	movw	r30, r28
    10ce:	e7 5b       	subi	r30, 0xB7	; 183
    10d0:	ff 4f       	sbci	r31, 0xFF	; 255
    10d2:	80 81       	ld	r24, Z
    10d4:	91 81       	ldd	r25, Z+1	; 0x01
    10d6:	01 97       	sbiw	r24, 0x01	; 1
    10d8:	f1 f7       	brne	.-4      	; 0x10d6 <LCD_Reset_4bit+0x408>
    10da:	fe 01       	movw	r30, r28
    10dc:	e7 5b       	subi	r30, 0xB7	; 183
    10de:	ff 4f       	sbci	r31, 0xFF	; 255
    10e0:	91 83       	std	Z+1, r25	; 0x01
    10e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10e4:	de 01       	movw	r26, r28
    10e6:	a5 5b       	subi	r26, 0xB5	; 181
    10e8:	bf 4f       	sbci	r27, 0xFF	; 255
    10ea:	fe 01       	movw	r30, r28
    10ec:	e5 5b       	subi	r30, 0xB5	; 181
    10ee:	ff 4f       	sbci	r31, 0xFF	; 255
    10f0:	80 81       	ld	r24, Z
    10f2:	91 81       	ldd	r25, Z+1	; 0x01
    10f4:	01 97       	sbiw	r24, 0x01	; 1
    10f6:	11 96       	adiw	r26, 0x01	; 1
    10f8:	9c 93       	st	X, r25
    10fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10fc:	fe 01       	movw	r30, r28
    10fe:	e5 5b       	subi	r30, 0xB5	; 181
    1100:	ff 4f       	sbci	r31, 0xFF	; 255
    1102:	80 81       	ld	r24, Z
    1104:	91 81       	ldd	r25, Z+1	; 0x01
    1106:	00 97       	sbiw	r24, 0x00	; 0
    1108:	d1 f6       	brne	.-76     	; 0x10be <LCD_Reset_4bit+0x3f0>
    110a:	27 c0       	rjmp	.+78     	; 0x115a <LCD_Reset_4bit+0x48c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    110c:	8e 01       	movw	r16, r28
    110e:	05 5b       	subi	r16, 0xB5	; 181
    1110:	1f 4f       	sbci	r17, 0xFF	; 255
    1112:	fe 01       	movw	r30, r28
    1114:	e3 5b       	subi	r30, 0xB3	; 179
    1116:	ff 4f       	sbci	r31, 0xFF	; 255
    1118:	60 81       	ld	r22, Z
    111a:	71 81       	ldd	r23, Z+1	; 0x01
    111c:	82 81       	ldd	r24, Z+2	; 0x02
    111e:	93 81       	ldd	r25, Z+3	; 0x03
    1120:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1124:	dc 01       	movw	r26, r24
    1126:	cb 01       	movw	r24, r22
    1128:	f8 01       	movw	r30, r16
    112a:	91 83       	std	Z+1, r25	; 0x01
    112c:	80 83       	st	Z, r24
    112e:	de 01       	movw	r26, r28
    1130:	a9 5b       	subi	r26, 0xB9	; 185
    1132:	bf 4f       	sbci	r27, 0xFF	; 255
    1134:	fe 01       	movw	r30, r28
    1136:	e5 5b       	subi	r30, 0xB5	; 181
    1138:	ff 4f       	sbci	r31, 0xFF	; 255
    113a:	80 81       	ld	r24, Z
    113c:	91 81       	ldd	r25, Z+1	; 0x01
    113e:	8d 93       	st	X+, r24
    1140:	9c 93       	st	X, r25
    1142:	fe 01       	movw	r30, r28
    1144:	e9 5b       	subi	r30, 0xB9	; 185
    1146:	ff 4f       	sbci	r31, 0xFF	; 255
    1148:	80 81       	ld	r24, Z
    114a:	91 81       	ldd	r25, Z+1	; 0x01
    114c:	01 97       	sbiw	r24, 0x01	; 1
    114e:	f1 f7       	brne	.-4      	; 0x114c <LCD_Reset_4bit+0x47e>
    1150:	fe 01       	movw	r30, r28
    1152:	e9 5b       	subi	r30, 0xB9	; 185
    1154:	ff 4f       	sbci	r31, 0xFF	; 255
    1156:	91 83       	std	Z+1, r25	; 0x01
    1158:	80 83       	st	Z, r24
    115a:	a8 e2       	ldi	r26, 0x28	; 40
    115c:	b0 e0       	ldi	r27, 0x00	; 0
    115e:	e8 e2       	ldi	r30, 0x28	; 40
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	80 81       	ld	r24, Z
    1164:	8e 7f       	andi	r24, 0xFE	; 254
    1166:	8c 93       	st	X, r24
    1168:	a8 e2       	ldi	r26, 0x28	; 40
    116a:	b0 e0       	ldi	r27, 0x00	; 0
    116c:	e8 e2       	ldi	r30, 0x28	; 40
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	80 81       	ld	r24, Z
    1172:	8d 7f       	andi	r24, 0xFD	; 253
    1174:	8c 93       	st	X, r24
    1176:	e8 e2       	ldi	r30, 0x28	; 40
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	80 e3       	ldi	r24, 0x30	; 48
    117c:	80 83       	st	Z, r24
    117e:	a8 e2       	ldi	r26, 0x28	; 40
    1180:	b0 e0       	ldi	r27, 0x00	; 0
    1182:	e8 e2       	ldi	r30, 0x28	; 40
    1184:	f0 e0       	ldi	r31, 0x00	; 0
    1186:	80 81       	ld	r24, Z
    1188:	84 60       	ori	r24, 0x04	; 4
    118a:	8c 93       	st	X, r24
    118c:	fe 01       	movw	r30, r28
    118e:	ed 5b       	subi	r30, 0xBD	; 189
    1190:	ff 4f       	sbci	r31, 0xFF	; 255
    1192:	80 e0       	ldi	r24, 0x00	; 0
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	a0 ea       	ldi	r26, 0xA0	; 160
    1198:	b0 e4       	ldi	r27, 0x40	; 64
    119a:	80 83       	st	Z, r24
    119c:	91 83       	std	Z+1, r25	; 0x01
    119e:	a2 83       	std	Z+2, r26	; 0x02
    11a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11a2:	8e 01       	movw	r16, r28
    11a4:	01 5c       	subi	r16, 0xC1	; 193
    11a6:	1f 4f       	sbci	r17, 0xFF	; 255
    11a8:	fe 01       	movw	r30, r28
    11aa:	ed 5b       	subi	r30, 0xBD	; 189
    11ac:	ff 4f       	sbci	r31, 0xFF	; 255
    11ae:	60 81       	ld	r22, Z
    11b0:	71 81       	ldd	r23, Z+1	; 0x01
    11b2:	82 81       	ldd	r24, Z+2	; 0x02
    11b4:	93 81       	ldd	r25, Z+3	; 0x03
    11b6:	2d ec       	ldi	r18, 0xCD	; 205
    11b8:	3c ec       	ldi	r19, 0xCC	; 204
    11ba:	4c e2       	ldi	r20, 0x2C	; 44
    11bc:	55 e4       	ldi	r21, 0x45	; 69
    11be:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    11c2:	dc 01       	movw	r26, r24
    11c4:	cb 01       	movw	r24, r22
    11c6:	f8 01       	movw	r30, r16
    11c8:	80 83       	st	Z, r24
    11ca:	91 83       	std	Z+1, r25	; 0x01
    11cc:	a2 83       	std	Z+2, r26	; 0x02
    11ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11d0:	fe 01       	movw	r30, r28
    11d2:	ff 96       	adiw	r30, 0x3f	; 63
    11d4:	60 81       	ld	r22, Z
    11d6:	71 81       	ldd	r23, Z+1	; 0x01
    11d8:	82 81       	ldd	r24, Z+2	; 0x02
    11da:	93 81       	ldd	r25, Z+3	; 0x03
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	40 e8       	ldi	r20, 0x80	; 128
    11e2:	5f e3       	ldi	r21, 0x3F	; 63
    11e4:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    11e8:	88 23       	and	r24, r24
    11ea:	2c f4       	brge	.+10     	; 0x11f6 <LCD_Reset_4bit+0x528>
		__ticks = 1;
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	9e af       	std	Y+62, r25	; 0x3e
    11f2:	8d af       	std	Y+61, r24	; 0x3d
    11f4:	46 c0       	rjmp	.+140    	; 0x1282 <LCD_Reset_4bit+0x5b4>
	else if (__tmp > 65535)
    11f6:	fe 01       	movw	r30, r28
    11f8:	ff 96       	adiw	r30, 0x3f	; 63
    11fa:	60 81       	ld	r22, Z
    11fc:	71 81       	ldd	r23, Z+1	; 0x01
    11fe:	82 81       	ldd	r24, Z+2	; 0x02
    1200:	93 81       	ldd	r25, Z+3	; 0x03
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	3f ef       	ldi	r19, 0xFF	; 255
    1206:	4f e7       	ldi	r20, 0x7F	; 127
    1208:	57 e4       	ldi	r21, 0x47	; 71
    120a:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    120e:	18 16       	cp	r1, r24
    1210:	64 f5       	brge	.+88     	; 0x126a <LCD_Reset_4bit+0x59c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1212:	fe 01       	movw	r30, r28
    1214:	ed 5b       	subi	r30, 0xBD	; 189
    1216:	ff 4f       	sbci	r31, 0xFF	; 255
    1218:	60 81       	ld	r22, Z
    121a:	71 81       	ldd	r23, Z+1	; 0x01
    121c:	82 81       	ldd	r24, Z+2	; 0x02
    121e:	93 81       	ldd	r25, Z+3	; 0x03
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	40 e2       	ldi	r20, 0x20	; 32
    1226:	51 e4       	ldi	r21, 0x41	; 65
    1228:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    122c:	dc 01       	movw	r26, r24
    122e:	cb 01       	movw	r24, r22
    1230:	bc 01       	movw	r22, r24
    1232:	cd 01       	movw	r24, r26
    1234:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1238:	dc 01       	movw	r26, r24
    123a:	cb 01       	movw	r24, r22
    123c:	9e af       	std	Y+62, r25	; 0x3e
    123e:	8d af       	std	Y+61, r24	; 0x3d
    1240:	0f c0       	rjmp	.+30     	; 0x1260 <LCD_Reset_4bit+0x592>
    1242:	84 e1       	ldi	r24, 0x14	; 20
    1244:	91 e0       	ldi	r25, 0x01	; 1
    1246:	9c af       	std	Y+60, r25	; 0x3c
    1248:	8b af       	std	Y+59, r24	; 0x3b
    124a:	8b ad       	ldd	r24, Y+59	; 0x3b
    124c:	9c ad       	ldd	r25, Y+60	; 0x3c
    124e:	01 97       	sbiw	r24, 0x01	; 1
    1250:	f1 f7       	brne	.-4      	; 0x124e <LCD_Reset_4bit+0x580>
    1252:	9c af       	std	Y+60, r25	; 0x3c
    1254:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1256:	8d ad       	ldd	r24, Y+61	; 0x3d
    1258:	9e ad       	ldd	r25, Y+62	; 0x3e
    125a:	01 97       	sbiw	r24, 0x01	; 1
    125c:	9e af       	std	Y+62, r25	; 0x3e
    125e:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1260:	8d ad       	ldd	r24, Y+61	; 0x3d
    1262:	9e ad       	ldd	r25, Y+62	; 0x3e
    1264:	00 97       	sbiw	r24, 0x00	; 0
    1266:	69 f7       	brne	.-38     	; 0x1242 <LCD_Reset_4bit+0x574>
    1268:	16 c0       	rjmp	.+44     	; 0x1296 <LCD_Reset_4bit+0x5c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    126a:	fe 01       	movw	r30, r28
    126c:	ff 96       	adiw	r30, 0x3f	; 63
    126e:	60 81       	ld	r22, Z
    1270:	71 81       	ldd	r23, Z+1	; 0x01
    1272:	82 81       	ldd	r24, Z+2	; 0x02
    1274:	93 81       	ldd	r25, Z+3	; 0x03
    1276:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    127a:	dc 01       	movw	r26, r24
    127c:	cb 01       	movw	r24, r22
    127e:	9e af       	std	Y+62, r25	; 0x3e
    1280:	8d af       	std	Y+61, r24	; 0x3d
    1282:	8d ad       	ldd	r24, Y+61	; 0x3d
    1284:	9e ad       	ldd	r25, Y+62	; 0x3e
    1286:	9a af       	std	Y+58, r25	; 0x3a
    1288:	89 af       	std	Y+57, r24	; 0x39
    128a:	89 ad       	ldd	r24, Y+57	; 0x39
    128c:	9a ad       	ldd	r25, Y+58	; 0x3a
    128e:	01 97       	sbiw	r24, 0x01	; 1
    1290:	f1 f7       	brne	.-4      	; 0x128e <LCD_Reset_4bit+0x5c0>
    1292:	9a af       	std	Y+58, r25	; 0x3a
    1294:	89 af       	std	Y+57, r24	; 0x39
    1296:	a8 e2       	ldi	r26, 0x28	; 40
    1298:	b0 e0       	ldi	r27, 0x00	; 0
    129a:	e8 e2       	ldi	r30, 0x28	; 40
    129c:	f0 e0       	ldi	r31, 0x00	; 0
    129e:	80 81       	ld	r24, Z
    12a0:	8b 7f       	andi	r24, 0xFB	; 251
    12a2:	8c 93       	st	X, r24
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	a0 e8       	ldi	r26, 0x80	; 128
    12aa:	bf e3       	ldi	r27, 0x3F	; 63
    12ac:	8d ab       	std	Y+53, r24	; 0x35
    12ae:	9e ab       	std	Y+54, r25	; 0x36
    12b0:	af ab       	std	Y+55, r26	; 0x37
    12b2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12b4:	6d a9       	ldd	r22, Y+53	; 0x35
    12b6:	7e a9       	ldd	r23, Y+54	; 0x36
    12b8:	8f a9       	ldd	r24, Y+55	; 0x37
    12ba:	98 ad       	ldd	r25, Y+56	; 0x38
    12bc:	2d ec       	ldi	r18, 0xCD	; 205
    12be:	3c ec       	ldi	r19, 0xCC	; 204
    12c0:	4c e2       	ldi	r20, 0x2C	; 44
    12c2:	55 e4       	ldi	r21, 0x45	; 69
    12c4:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    12c8:	dc 01       	movw	r26, r24
    12ca:	cb 01       	movw	r24, r22
    12cc:	89 ab       	std	Y+49, r24	; 0x31
    12ce:	9a ab       	std	Y+50, r25	; 0x32
    12d0:	ab ab       	std	Y+51, r26	; 0x33
    12d2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    12d4:	69 a9       	ldd	r22, Y+49	; 0x31
    12d6:	7a a9       	ldd	r23, Y+50	; 0x32
    12d8:	8b a9       	ldd	r24, Y+51	; 0x33
    12da:	9c a9       	ldd	r25, Y+52	; 0x34
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	40 e8       	ldi	r20, 0x80	; 128
    12e2:	5f e3       	ldi	r21, 0x3F	; 63
    12e4:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    12e8:	88 23       	and	r24, r24
    12ea:	2c f4       	brge	.+10     	; 0x12f6 <LCD_Reset_4bit+0x628>
		__ticks = 1;
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	98 ab       	std	Y+48, r25	; 0x30
    12f2:	8f a7       	std	Y+47, r24	; 0x2f
    12f4:	3f c0       	rjmp	.+126    	; 0x1374 <LCD_Reset_4bit+0x6a6>
	else if (__tmp > 65535)
    12f6:	69 a9       	ldd	r22, Y+49	; 0x31
    12f8:	7a a9       	ldd	r23, Y+50	; 0x32
    12fa:	8b a9       	ldd	r24, Y+51	; 0x33
    12fc:	9c a9       	ldd	r25, Y+52	; 0x34
    12fe:	20 e0       	ldi	r18, 0x00	; 0
    1300:	3f ef       	ldi	r19, 0xFF	; 255
    1302:	4f e7       	ldi	r20, 0x7F	; 127
    1304:	57 e4       	ldi	r21, 0x47	; 71
    1306:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    130a:	18 16       	cp	r1, r24
    130c:	4c f5       	brge	.+82     	; 0x1360 <LCD_Reset_4bit+0x692>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    130e:	6d a9       	ldd	r22, Y+53	; 0x35
    1310:	7e a9       	ldd	r23, Y+54	; 0x36
    1312:	8f a9       	ldd	r24, Y+55	; 0x37
    1314:	98 ad       	ldd	r25, Y+56	; 0x38
    1316:	20 e0       	ldi	r18, 0x00	; 0
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	40 e2       	ldi	r20, 0x20	; 32
    131c:	51 e4       	ldi	r21, 0x41	; 65
    131e:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1322:	dc 01       	movw	r26, r24
    1324:	cb 01       	movw	r24, r22
    1326:	bc 01       	movw	r22, r24
    1328:	cd 01       	movw	r24, r26
    132a:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    132e:	dc 01       	movw	r26, r24
    1330:	cb 01       	movw	r24, r22
    1332:	98 ab       	std	Y+48, r25	; 0x30
    1334:	8f a7       	std	Y+47, r24	; 0x2f
    1336:	0f c0       	rjmp	.+30     	; 0x1356 <LCD_Reset_4bit+0x688>
    1338:	84 e1       	ldi	r24, 0x14	; 20
    133a:	91 e0       	ldi	r25, 0x01	; 1
    133c:	9e a7       	std	Y+46, r25	; 0x2e
    133e:	8d a7       	std	Y+45, r24	; 0x2d
    1340:	8d a5       	ldd	r24, Y+45	; 0x2d
    1342:	9e a5       	ldd	r25, Y+46	; 0x2e
    1344:	01 97       	sbiw	r24, 0x01	; 1
    1346:	f1 f7       	brne	.-4      	; 0x1344 <LCD_Reset_4bit+0x676>
    1348:	9e a7       	std	Y+46, r25	; 0x2e
    134a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    134c:	8f a5       	ldd	r24, Y+47	; 0x2f
    134e:	98 a9       	ldd	r25, Y+48	; 0x30
    1350:	01 97       	sbiw	r24, 0x01	; 1
    1352:	98 ab       	std	Y+48, r25	; 0x30
    1354:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1356:	8f a5       	ldd	r24, Y+47	; 0x2f
    1358:	98 a9       	ldd	r25, Y+48	; 0x30
    135a:	00 97       	sbiw	r24, 0x00	; 0
    135c:	69 f7       	brne	.-38     	; 0x1338 <LCD_Reset_4bit+0x66a>
    135e:	14 c0       	rjmp	.+40     	; 0x1388 <LCD_Reset_4bit+0x6ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1360:	69 a9       	ldd	r22, Y+49	; 0x31
    1362:	7a a9       	ldd	r23, Y+50	; 0x32
    1364:	8b a9       	ldd	r24, Y+51	; 0x33
    1366:	9c a9       	ldd	r25, Y+52	; 0x34
    1368:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    136c:	dc 01       	movw	r26, r24
    136e:	cb 01       	movw	r24, r22
    1370:	98 ab       	std	Y+48, r25	; 0x30
    1372:	8f a7       	std	Y+47, r24	; 0x2f
    1374:	8f a5       	ldd	r24, Y+47	; 0x2f
    1376:	98 a9       	ldd	r25, Y+48	; 0x30
    1378:	9c a7       	std	Y+44, r25	; 0x2c
    137a:	8b a7       	std	Y+43, r24	; 0x2b
    137c:	8b a5       	ldd	r24, Y+43	; 0x2b
    137e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1380:	01 97       	sbiw	r24, 0x01	; 1
    1382:	f1 f7       	brne	.-4      	; 0x1380 <LCD_Reset_4bit+0x6b2>
    1384:	9c a7       	std	Y+44, r25	; 0x2c
    1386:	8b a7       	std	Y+43, r24	; 0x2b
    1388:	a8 e2       	ldi	r26, 0x28	; 40
    138a:	b0 e0       	ldi	r27, 0x00	; 0
    138c:	e8 e2       	ldi	r30, 0x28	; 40
    138e:	f0 e0       	ldi	r31, 0x00	; 0
    1390:	80 81       	ld	r24, Z
    1392:	8e 7f       	andi	r24, 0xFE	; 254
    1394:	8c 93       	st	X, r24
    1396:	a8 e2       	ldi	r26, 0x28	; 40
    1398:	b0 e0       	ldi	r27, 0x00	; 0
    139a:	e8 e2       	ldi	r30, 0x28	; 40
    139c:	f0 e0       	ldi	r31, 0x00	; 0
    139e:	80 81       	ld	r24, Z
    13a0:	8d 7f       	andi	r24, 0xFD	; 253
    13a2:	8c 93       	st	X, r24
    13a4:	e8 e2       	ldi	r30, 0x28	; 40
    13a6:	f0 e0       	ldi	r31, 0x00	; 0
    13a8:	80 e3       	ldi	r24, 0x30	; 48
    13aa:	80 83       	st	Z, r24
    13ac:	a8 e2       	ldi	r26, 0x28	; 40
    13ae:	b0 e0       	ldi	r27, 0x00	; 0
    13b0:	e8 e2       	ldi	r30, 0x28	; 40
    13b2:	f0 e0       	ldi	r31, 0x00	; 0
    13b4:	80 81       	ld	r24, Z
    13b6:	84 60       	ori	r24, 0x04	; 4
    13b8:	8c 93       	st	X, r24
    13ba:	80 e0       	ldi	r24, 0x00	; 0
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	a0 ea       	ldi	r26, 0xA0	; 160
    13c0:	b0 e4       	ldi	r27, 0x40	; 64
    13c2:	8f a3       	std	Y+39, r24	; 0x27
    13c4:	98 a7       	std	Y+40, r25	; 0x28
    13c6:	a9 a7       	std	Y+41, r26	; 0x29
    13c8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13ca:	6f a1       	ldd	r22, Y+39	; 0x27
    13cc:	78 a5       	ldd	r23, Y+40	; 0x28
    13ce:	89 a5       	ldd	r24, Y+41	; 0x29
    13d0:	9a a5       	ldd	r25, Y+42	; 0x2a
    13d2:	2d ec       	ldi	r18, 0xCD	; 205
    13d4:	3c ec       	ldi	r19, 0xCC	; 204
    13d6:	4c e2       	ldi	r20, 0x2C	; 44
    13d8:	55 e4       	ldi	r21, 0x45	; 69
    13da:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    13de:	dc 01       	movw	r26, r24
    13e0:	cb 01       	movw	r24, r22
    13e2:	8b a3       	std	Y+35, r24	; 0x23
    13e4:	9c a3       	std	Y+36, r25	; 0x24
    13e6:	ad a3       	std	Y+37, r26	; 0x25
    13e8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    13ea:	6b a1       	ldd	r22, Y+35	; 0x23
    13ec:	7c a1       	ldd	r23, Y+36	; 0x24
    13ee:	8d a1       	ldd	r24, Y+37	; 0x25
    13f0:	9e a1       	ldd	r25, Y+38	; 0x26
    13f2:	20 e0       	ldi	r18, 0x00	; 0
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	40 e8       	ldi	r20, 0x80	; 128
    13f8:	5f e3       	ldi	r21, 0x3F	; 63
    13fa:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    13fe:	88 23       	and	r24, r24
    1400:	2c f4       	brge	.+10     	; 0x140c <LCD_Reset_4bit+0x73e>
		__ticks = 1;
    1402:	81 e0       	ldi	r24, 0x01	; 1
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	9a a3       	std	Y+34, r25	; 0x22
    1408:	89 a3       	std	Y+33, r24	; 0x21
    140a:	3f c0       	rjmp	.+126    	; 0x148a <LCD_Reset_4bit+0x7bc>
	else if (__tmp > 65535)
    140c:	6b a1       	ldd	r22, Y+35	; 0x23
    140e:	7c a1       	ldd	r23, Y+36	; 0x24
    1410:	8d a1       	ldd	r24, Y+37	; 0x25
    1412:	9e a1       	ldd	r25, Y+38	; 0x26
    1414:	20 e0       	ldi	r18, 0x00	; 0
    1416:	3f ef       	ldi	r19, 0xFF	; 255
    1418:	4f e7       	ldi	r20, 0x7F	; 127
    141a:	57 e4       	ldi	r21, 0x47	; 71
    141c:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1420:	18 16       	cp	r1, r24
    1422:	4c f5       	brge	.+82     	; 0x1476 <LCD_Reset_4bit+0x7a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1424:	6f a1       	ldd	r22, Y+39	; 0x27
    1426:	78 a5       	ldd	r23, Y+40	; 0x28
    1428:	89 a5       	ldd	r24, Y+41	; 0x29
    142a:	9a a5       	ldd	r25, Y+42	; 0x2a
    142c:	20 e0       	ldi	r18, 0x00	; 0
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	40 e2       	ldi	r20, 0x20	; 32
    1432:	51 e4       	ldi	r21, 0x41	; 65
    1434:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1438:	dc 01       	movw	r26, r24
    143a:	cb 01       	movw	r24, r22
    143c:	bc 01       	movw	r22, r24
    143e:	cd 01       	movw	r24, r26
    1440:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1444:	dc 01       	movw	r26, r24
    1446:	cb 01       	movw	r24, r22
    1448:	9a a3       	std	Y+34, r25	; 0x22
    144a:	89 a3       	std	Y+33, r24	; 0x21
    144c:	0f c0       	rjmp	.+30     	; 0x146c <LCD_Reset_4bit+0x79e>
    144e:	84 e1       	ldi	r24, 0x14	; 20
    1450:	91 e0       	ldi	r25, 0x01	; 1
    1452:	98 a3       	std	Y+32, r25	; 0x20
    1454:	8f 8f       	std	Y+31, r24	; 0x1f
    1456:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1458:	98 a1       	ldd	r25, Y+32	; 0x20
    145a:	01 97       	sbiw	r24, 0x01	; 1
    145c:	f1 f7       	brne	.-4      	; 0x145a <LCD_Reset_4bit+0x78c>
    145e:	98 a3       	std	Y+32, r25	; 0x20
    1460:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1462:	89 a1       	ldd	r24, Y+33	; 0x21
    1464:	9a a1       	ldd	r25, Y+34	; 0x22
    1466:	01 97       	sbiw	r24, 0x01	; 1
    1468:	9a a3       	std	Y+34, r25	; 0x22
    146a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    146c:	89 a1       	ldd	r24, Y+33	; 0x21
    146e:	9a a1       	ldd	r25, Y+34	; 0x22
    1470:	00 97       	sbiw	r24, 0x00	; 0
    1472:	69 f7       	brne	.-38     	; 0x144e <LCD_Reset_4bit+0x780>
    1474:	14 c0       	rjmp	.+40     	; 0x149e <LCD_Reset_4bit+0x7d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1476:	6b a1       	ldd	r22, Y+35	; 0x23
    1478:	7c a1       	ldd	r23, Y+36	; 0x24
    147a:	8d a1       	ldd	r24, Y+37	; 0x25
    147c:	9e a1       	ldd	r25, Y+38	; 0x26
    147e:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1482:	dc 01       	movw	r26, r24
    1484:	cb 01       	movw	r24, r22
    1486:	9a a3       	std	Y+34, r25	; 0x22
    1488:	89 a3       	std	Y+33, r24	; 0x21
    148a:	89 a1       	ldd	r24, Y+33	; 0x21
    148c:	9a a1       	ldd	r25, Y+34	; 0x22
    148e:	9e 8f       	std	Y+30, r25	; 0x1e
    1490:	8d 8f       	std	Y+29, r24	; 0x1d
    1492:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1494:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1496:	01 97       	sbiw	r24, 0x01	; 1
    1498:	f1 f7       	brne	.-4      	; 0x1496 <LCD_Reset_4bit+0x7c8>
    149a:	9e 8f       	std	Y+30, r25	; 0x1e
    149c:	8d 8f       	std	Y+29, r24	; 0x1d
    149e:	a8 e2       	ldi	r26, 0x28	; 40
    14a0:	b0 e0       	ldi	r27, 0x00	; 0
    14a2:	e8 e2       	ldi	r30, 0x28	; 40
    14a4:	f0 e0       	ldi	r31, 0x00	; 0
    14a6:	80 81       	ld	r24, Z
    14a8:	8b 7f       	andi	r24, 0xFB	; 251
    14aa:	8c 93       	st	X, r24
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	a0 e8       	ldi	r26, 0x80	; 128
    14b2:	bf e3       	ldi	r27, 0x3F	; 63
    14b4:	89 8f       	std	Y+25, r24	; 0x19
    14b6:	9a 8f       	std	Y+26, r25	; 0x1a
    14b8:	ab 8f       	std	Y+27, r26	; 0x1b
    14ba:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14bc:	69 8d       	ldd	r22, Y+25	; 0x19
    14be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14c4:	2d ec       	ldi	r18, 0xCD	; 205
    14c6:	3c ec       	ldi	r19, 0xCC	; 204
    14c8:	4c e2       	ldi	r20, 0x2C	; 44
    14ca:	55 e4       	ldi	r21, 0x45	; 69
    14cc:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	8d 8b       	std	Y+21, r24	; 0x15
    14d6:	9e 8b       	std	Y+22, r25	; 0x16
    14d8:	af 8b       	std	Y+23, r26	; 0x17
    14da:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    14dc:	6d 89       	ldd	r22, Y+21	; 0x15
    14de:	7e 89       	ldd	r23, Y+22	; 0x16
    14e0:	8f 89       	ldd	r24, Y+23	; 0x17
    14e2:	98 8d       	ldd	r25, Y+24	; 0x18
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	30 e0       	ldi	r19, 0x00	; 0
    14e8:	40 e8       	ldi	r20, 0x80	; 128
    14ea:	5f e3       	ldi	r21, 0x3F	; 63
    14ec:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    14f0:	88 23       	and	r24, r24
    14f2:	2c f4       	brge	.+10     	; 0x14fe <LCD_Reset_4bit+0x830>
		__ticks = 1;
    14f4:	81 e0       	ldi	r24, 0x01	; 1
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	9c 8b       	std	Y+20, r25	; 0x14
    14fa:	8b 8b       	std	Y+19, r24	; 0x13
    14fc:	3f c0       	rjmp	.+126    	; 0x157c <LCD_Reset_4bit+0x8ae>
	else if (__tmp > 65535)
    14fe:	6d 89       	ldd	r22, Y+21	; 0x15
    1500:	7e 89       	ldd	r23, Y+22	; 0x16
    1502:	8f 89       	ldd	r24, Y+23	; 0x17
    1504:	98 8d       	ldd	r25, Y+24	; 0x18
    1506:	20 e0       	ldi	r18, 0x00	; 0
    1508:	3f ef       	ldi	r19, 0xFF	; 255
    150a:	4f e7       	ldi	r20, 0x7F	; 127
    150c:	57 e4       	ldi	r21, 0x47	; 71
    150e:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1512:	18 16       	cp	r1, r24
    1514:	4c f5       	brge	.+82     	; 0x1568 <LCD_Reset_4bit+0x89a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1516:	69 8d       	ldd	r22, Y+25	; 0x19
    1518:	7a 8d       	ldd	r23, Y+26	; 0x1a
    151a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    151c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    151e:	20 e0       	ldi	r18, 0x00	; 0
    1520:	30 e0       	ldi	r19, 0x00	; 0
    1522:	40 e2       	ldi	r20, 0x20	; 32
    1524:	51 e4       	ldi	r21, 0x41	; 65
    1526:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    152a:	dc 01       	movw	r26, r24
    152c:	cb 01       	movw	r24, r22
    152e:	bc 01       	movw	r22, r24
    1530:	cd 01       	movw	r24, r26
    1532:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1536:	dc 01       	movw	r26, r24
    1538:	cb 01       	movw	r24, r22
    153a:	9c 8b       	std	Y+20, r25	; 0x14
    153c:	8b 8b       	std	Y+19, r24	; 0x13
    153e:	0f c0       	rjmp	.+30     	; 0x155e <LCD_Reset_4bit+0x890>
    1540:	84 e1       	ldi	r24, 0x14	; 20
    1542:	91 e0       	ldi	r25, 0x01	; 1
    1544:	9a 8b       	std	Y+18, r25	; 0x12
    1546:	89 8b       	std	Y+17, r24	; 0x11
    1548:	89 89       	ldd	r24, Y+17	; 0x11
    154a:	9a 89       	ldd	r25, Y+18	; 0x12
    154c:	01 97       	sbiw	r24, 0x01	; 1
    154e:	f1 f7       	brne	.-4      	; 0x154c <LCD_Reset_4bit+0x87e>
    1550:	9a 8b       	std	Y+18, r25	; 0x12
    1552:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1554:	8b 89       	ldd	r24, Y+19	; 0x13
    1556:	9c 89       	ldd	r25, Y+20	; 0x14
    1558:	01 97       	sbiw	r24, 0x01	; 1
    155a:	9c 8b       	std	Y+20, r25	; 0x14
    155c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    155e:	8b 89       	ldd	r24, Y+19	; 0x13
    1560:	9c 89       	ldd	r25, Y+20	; 0x14
    1562:	00 97       	sbiw	r24, 0x00	; 0
    1564:	69 f7       	brne	.-38     	; 0x1540 <LCD_Reset_4bit+0x872>
    1566:	14 c0       	rjmp	.+40     	; 0x1590 <LCD_Reset_4bit+0x8c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1568:	6d 89       	ldd	r22, Y+21	; 0x15
    156a:	7e 89       	ldd	r23, Y+22	; 0x16
    156c:	8f 89       	ldd	r24, Y+23	; 0x17
    156e:	98 8d       	ldd	r25, Y+24	; 0x18
    1570:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1574:	dc 01       	movw	r26, r24
    1576:	cb 01       	movw	r24, r22
    1578:	9c 8b       	std	Y+20, r25	; 0x14
    157a:	8b 8b       	std	Y+19, r24	; 0x13
    157c:	8b 89       	ldd	r24, Y+19	; 0x13
    157e:	9c 89       	ldd	r25, Y+20	; 0x14
    1580:	98 8b       	std	Y+16, r25	; 0x10
    1582:	8f 87       	std	Y+15, r24	; 0x0f
    1584:	8f 85       	ldd	r24, Y+15	; 0x0f
    1586:	98 89       	ldd	r25, Y+16	; 0x10
    1588:	01 97       	sbiw	r24, 0x01	; 1
    158a:	f1 f7       	brne	.-4      	; 0x1588 <LCD_Reset_4bit+0x8ba>
    158c:	98 8b       	std	Y+16, r25	; 0x10
    158e:	8f 87       	std	Y+15, r24	; 0x0f
    1590:	a8 e2       	ldi	r26, 0x28	; 40
    1592:	b0 e0       	ldi	r27, 0x00	; 0
    1594:	e8 e2       	ldi	r30, 0x28	; 40
    1596:	f0 e0       	ldi	r31, 0x00	; 0
    1598:	80 81       	ld	r24, Z
    159a:	8e 7f       	andi	r24, 0xFE	; 254
    159c:	8c 93       	st	X, r24
    159e:	a8 e2       	ldi	r26, 0x28	; 40
    15a0:	b0 e0       	ldi	r27, 0x00	; 0
    15a2:	e8 e2       	ldi	r30, 0x28	; 40
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	80 81       	ld	r24, Z
    15a8:	8d 7f       	andi	r24, 0xFD	; 253
    15aa:	8c 93       	st	X, r24
    15ac:	e8 e2       	ldi	r30, 0x28	; 40
    15ae:	f0 e0       	ldi	r31, 0x00	; 0
    15b0:	80 e2       	ldi	r24, 0x20	; 32
    15b2:	80 83       	st	Z, r24
    15b4:	a8 e2       	ldi	r26, 0x28	; 40
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	e8 e2       	ldi	r30, 0x28	; 40
    15ba:	f0 e0       	ldi	r31, 0x00	; 0
    15bc:	80 81       	ld	r24, Z
    15be:	84 60       	ori	r24, 0x04	; 4
    15c0:	8c 93       	st	X, r24
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	a0 ea       	ldi	r26, 0xA0	; 160
    15c8:	b0 e4       	ldi	r27, 0x40	; 64
    15ca:	8b 87       	std	Y+11, r24	; 0x0b
    15cc:	9c 87       	std	Y+12, r25	; 0x0c
    15ce:	ad 87       	std	Y+13, r26	; 0x0d
    15d0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    15d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    15d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    15d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    15da:	2d ec       	ldi	r18, 0xCD	; 205
    15dc:	3c ec       	ldi	r19, 0xCC	; 204
    15de:	4c e2       	ldi	r20, 0x2C	; 44
    15e0:	55 e4       	ldi	r21, 0x45	; 69
    15e2:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    15e6:	dc 01       	movw	r26, r24
    15e8:	cb 01       	movw	r24, r22
    15ea:	8f 83       	std	Y+7, r24	; 0x07
    15ec:	98 87       	std	Y+8, r25	; 0x08
    15ee:	a9 87       	std	Y+9, r26	; 0x09
    15f0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    15f2:	6f 81       	ldd	r22, Y+7	; 0x07
    15f4:	78 85       	ldd	r23, Y+8	; 0x08
    15f6:	89 85       	ldd	r24, Y+9	; 0x09
    15f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    15fa:	20 e0       	ldi	r18, 0x00	; 0
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	40 e8       	ldi	r20, 0x80	; 128
    1600:	5f e3       	ldi	r21, 0x3F	; 63
    1602:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    1606:	88 23       	and	r24, r24
    1608:	2c f4       	brge	.+10     	; 0x1614 <LCD_Reset_4bit+0x946>
		__ticks = 1;
    160a:	81 e0       	ldi	r24, 0x01	; 1
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	9e 83       	std	Y+6, r25	; 0x06
    1610:	8d 83       	std	Y+5, r24	; 0x05
    1612:	3f c0       	rjmp	.+126    	; 0x1692 <LCD_Reset_4bit+0x9c4>
	else if (__tmp > 65535)
    1614:	6f 81       	ldd	r22, Y+7	; 0x07
    1616:	78 85       	ldd	r23, Y+8	; 0x08
    1618:	89 85       	ldd	r24, Y+9	; 0x09
    161a:	9a 85       	ldd	r25, Y+10	; 0x0a
    161c:	20 e0       	ldi	r18, 0x00	; 0
    161e:	3f ef       	ldi	r19, 0xFF	; 255
    1620:	4f e7       	ldi	r20, 0x7F	; 127
    1622:	57 e4       	ldi	r21, 0x47	; 71
    1624:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1628:	18 16       	cp	r1, r24
    162a:	4c f5       	brge	.+82     	; 0x167e <LCD_Reset_4bit+0x9b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    162c:	6b 85       	ldd	r22, Y+11	; 0x0b
    162e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1630:	8d 85       	ldd	r24, Y+13	; 0x0d
    1632:	9e 85       	ldd	r25, Y+14	; 0x0e
    1634:	20 e0       	ldi	r18, 0x00	; 0
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	40 e2       	ldi	r20, 0x20	; 32
    163a:	51 e4       	ldi	r21, 0x41	; 65
    163c:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1640:	dc 01       	movw	r26, r24
    1642:	cb 01       	movw	r24, r22
    1644:	bc 01       	movw	r22, r24
    1646:	cd 01       	movw	r24, r26
    1648:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    164c:	dc 01       	movw	r26, r24
    164e:	cb 01       	movw	r24, r22
    1650:	9e 83       	std	Y+6, r25	; 0x06
    1652:	8d 83       	std	Y+5, r24	; 0x05
    1654:	0f c0       	rjmp	.+30     	; 0x1674 <LCD_Reset_4bit+0x9a6>
    1656:	84 e1       	ldi	r24, 0x14	; 20
    1658:	91 e0       	ldi	r25, 0x01	; 1
    165a:	9c 83       	std	Y+4, r25	; 0x04
    165c:	8b 83       	std	Y+3, r24	; 0x03
    165e:	8b 81       	ldd	r24, Y+3	; 0x03
    1660:	9c 81       	ldd	r25, Y+4	; 0x04
    1662:	01 97       	sbiw	r24, 0x01	; 1
    1664:	f1 f7       	brne	.-4      	; 0x1662 <LCD_Reset_4bit+0x994>
    1666:	9c 83       	std	Y+4, r25	; 0x04
    1668:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    166a:	8d 81       	ldd	r24, Y+5	; 0x05
    166c:	9e 81       	ldd	r25, Y+6	; 0x06
    166e:	01 97       	sbiw	r24, 0x01	; 1
    1670:	9e 83       	std	Y+6, r25	; 0x06
    1672:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1674:	8d 81       	ldd	r24, Y+5	; 0x05
    1676:	9e 81       	ldd	r25, Y+6	; 0x06
    1678:	00 97       	sbiw	r24, 0x00	; 0
    167a:	69 f7       	brne	.-38     	; 0x1656 <LCD_Reset_4bit+0x988>
    167c:	14 c0       	rjmp	.+40     	; 0x16a6 <LCD_Reset_4bit+0x9d8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    167e:	6f 81       	ldd	r22, Y+7	; 0x07
    1680:	78 85       	ldd	r23, Y+8	; 0x08
    1682:	89 85       	ldd	r24, Y+9	; 0x09
    1684:	9a 85       	ldd	r25, Y+10	; 0x0a
    1686:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    168a:	dc 01       	movw	r26, r24
    168c:	cb 01       	movw	r24, r22
    168e:	9e 83       	std	Y+6, r25	; 0x06
    1690:	8d 83       	std	Y+5, r24	; 0x05
    1692:	8d 81       	ldd	r24, Y+5	; 0x05
    1694:	9e 81       	ldd	r25, Y+6	; 0x06
    1696:	9a 83       	std	Y+2, r25	; 0x02
    1698:	89 83       	std	Y+1, r24	; 0x01
    169a:	89 81       	ldd	r24, Y+1	; 0x01
    169c:	9a 81       	ldd	r25, Y+2	; 0x02
    169e:	01 97       	sbiw	r24, 0x01	; 1
    16a0:	f1 f7       	brne	.-4      	; 0x169e <LCD_Reset_4bit+0x9d0>
    16a2:	9a 83       	std	Y+2, r25	; 0x02
    16a4:	89 83       	std	Y+1, r24	; 0x01
    16a6:	a8 e2       	ldi	r26, 0x28	; 40
    16a8:	b0 e0       	ldi	r27, 0x00	; 0
    16aa:	e8 e2       	ldi	r30, 0x28	; 40
    16ac:	f0 e0       	ldi	r31, 0x00	; 0
    16ae:	80 81       	ld	r24, Z
    16b0:	8b 7f       	andi	r24, 0xFB	; 251
    16b2:	8c 93       	st	X, r24
    16b4:	c0 59       	subi	r28, 0x90	; 144
    16b6:	df 4f       	sbci	r29, 0xFF	; 255
    16b8:	0f b6       	in	r0, 0x3f	; 63
    16ba:	f8 94       	cli
    16bc:	de bf       	out	0x3e, r29	; 62
    16be:	0f be       	out	0x3f, r0	; 63
    16c0:	cd bf       	out	0x3d, r28	; 61
    16c2:	cf 91       	pop	r28
    16c4:	df 91       	pop	r29
    16c6:	1f 91       	pop	r17
    16c8:	0f 91       	pop	r16
    16ca:	08 95       	ret

000016cc <LCD_Init_Ports>:
    16cc:	df 93       	push	r29
    16ce:	cf 93       	push	r28
    16d0:	cd b7       	in	r28, 0x3d	; 61
    16d2:	de b7       	in	r29, 0x3e	; 62
    16d4:	a7 e2       	ldi	r26, 0x27	; 39
    16d6:	b0 e0       	ldi	r27, 0x00	; 0
    16d8:	e7 e2       	ldi	r30, 0x27	; 39
    16da:	f0 e0       	ldi	r31, 0x00	; 0
    16dc:	80 81       	ld	r24, Z
    16de:	87 6f       	ori	r24, 0xF7	; 247
    16e0:	8c 93       	st	X, r24
    16e2:	a8 e2       	ldi	r26, 0x28	; 40
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	e8 e2       	ldi	r30, 0x28	; 40
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	80 81       	ld	r24, Z
    16ec:	80 78       	andi	r24, 0x80	; 128
    16ee:	8c 93       	st	X, r24
    16f0:	cf 91       	pop	r28
    16f2:	df 91       	pop	r29
    16f4:	08 95       	ret

000016f6 <LCD_Init>:
    16f6:	df 93       	push	r29
    16f8:	cf 93       	push	r28
    16fa:	cd b7       	in	r28, 0x3d	; 61
    16fc:	de b7       	in	r29, 0x3e	; 62
    16fe:	2e 97       	sbiw	r28, 0x0e	; 14
    1700:	0f b6       	in	r0, 0x3f	; 63
    1702:	f8 94       	cli
    1704:	de bf       	out	0x3e, r29	; 62
    1706:	0f be       	out	0x3f, r0	; 63
    1708:	cd bf       	out	0x3d, r28	; 61
    170a:	0e 94 66 0b 	call	0x16cc	; 0x16cc <LCD_Init_Ports>
    170e:	0e 94 67 06 	call	0xcce	; 0xcce <LCD_Reset_4bit>
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	a0 e8       	ldi	r26, 0x80	; 128
    1718:	bf e3       	ldi	r27, 0x3F	; 63
    171a:	8b 87       	std	Y+11, r24	; 0x0b
    171c:	9c 87       	std	Y+12, r25	; 0x0c
    171e:	ad 87       	std	Y+13, r26	; 0x0d
    1720:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1722:	6b 85       	ldd	r22, Y+11	; 0x0b
    1724:	7c 85       	ldd	r23, Y+12	; 0x0c
    1726:	8d 85       	ldd	r24, Y+13	; 0x0d
    1728:	9e 85       	ldd	r25, Y+14	; 0x0e
    172a:	2d ec       	ldi	r18, 0xCD	; 205
    172c:	3c ec       	ldi	r19, 0xCC	; 204
    172e:	4c e2       	ldi	r20, 0x2C	; 44
    1730:	55 e4       	ldi	r21, 0x45	; 69
    1732:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1736:	dc 01       	movw	r26, r24
    1738:	cb 01       	movw	r24, r22
    173a:	8f 83       	std	Y+7, r24	; 0x07
    173c:	98 87       	std	Y+8, r25	; 0x08
    173e:	a9 87       	std	Y+9, r26	; 0x09
    1740:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1742:	6f 81       	ldd	r22, Y+7	; 0x07
    1744:	78 85       	ldd	r23, Y+8	; 0x08
    1746:	89 85       	ldd	r24, Y+9	; 0x09
    1748:	9a 85       	ldd	r25, Y+10	; 0x0a
    174a:	20 e0       	ldi	r18, 0x00	; 0
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	40 e8       	ldi	r20, 0x80	; 128
    1750:	5f e3       	ldi	r21, 0x3F	; 63
    1752:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    1756:	88 23       	and	r24, r24
    1758:	2c f4       	brge	.+10     	; 0x1764 <LCD_Init+0x6e>
		__ticks = 1;
    175a:	81 e0       	ldi	r24, 0x01	; 1
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	9e 83       	std	Y+6, r25	; 0x06
    1760:	8d 83       	std	Y+5, r24	; 0x05
    1762:	3f c0       	rjmp	.+126    	; 0x17e2 <LCD_Init+0xec>
	else if (__tmp > 65535)
    1764:	6f 81       	ldd	r22, Y+7	; 0x07
    1766:	78 85       	ldd	r23, Y+8	; 0x08
    1768:	89 85       	ldd	r24, Y+9	; 0x09
    176a:	9a 85       	ldd	r25, Y+10	; 0x0a
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	3f ef       	ldi	r19, 0xFF	; 255
    1770:	4f e7       	ldi	r20, 0x7F	; 127
    1772:	57 e4       	ldi	r21, 0x47	; 71
    1774:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1778:	18 16       	cp	r1, r24
    177a:	4c f5       	brge	.+82     	; 0x17ce <LCD_Init+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    177c:	6b 85       	ldd	r22, Y+11	; 0x0b
    177e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1780:	8d 85       	ldd	r24, Y+13	; 0x0d
    1782:	9e 85       	ldd	r25, Y+14	; 0x0e
    1784:	20 e0       	ldi	r18, 0x00	; 0
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	40 e2       	ldi	r20, 0x20	; 32
    178a:	51 e4       	ldi	r21, 0x41	; 65
    178c:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1790:	dc 01       	movw	r26, r24
    1792:	cb 01       	movw	r24, r22
    1794:	bc 01       	movw	r22, r24
    1796:	cd 01       	movw	r24, r26
    1798:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    179c:	dc 01       	movw	r26, r24
    179e:	cb 01       	movw	r24, r22
    17a0:	9e 83       	std	Y+6, r25	; 0x06
    17a2:	8d 83       	std	Y+5, r24	; 0x05
    17a4:	0f c0       	rjmp	.+30     	; 0x17c4 <LCD_Init+0xce>
    17a6:	84 e1       	ldi	r24, 0x14	; 20
    17a8:	91 e0       	ldi	r25, 0x01	; 1
    17aa:	9c 83       	std	Y+4, r25	; 0x04
    17ac:	8b 83       	std	Y+3, r24	; 0x03
    17ae:	8b 81       	ldd	r24, Y+3	; 0x03
    17b0:	9c 81       	ldd	r25, Y+4	; 0x04
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	f1 f7       	brne	.-4      	; 0x17b2 <LCD_Init+0xbc>
    17b6:	9c 83       	std	Y+4, r25	; 0x04
    17b8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ba:	8d 81       	ldd	r24, Y+5	; 0x05
    17bc:	9e 81       	ldd	r25, Y+6	; 0x06
    17be:	01 97       	sbiw	r24, 0x01	; 1
    17c0:	9e 83       	std	Y+6, r25	; 0x06
    17c2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17c4:	8d 81       	ldd	r24, Y+5	; 0x05
    17c6:	9e 81       	ldd	r25, Y+6	; 0x06
    17c8:	00 97       	sbiw	r24, 0x00	; 0
    17ca:	69 f7       	brne	.-38     	; 0x17a6 <LCD_Init+0xb0>
    17cc:	14 c0       	rjmp	.+40     	; 0x17f6 <LCD_Init+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ce:	6f 81       	ldd	r22, Y+7	; 0x07
    17d0:	78 85       	ldd	r23, Y+8	; 0x08
    17d2:	89 85       	ldd	r24, Y+9	; 0x09
    17d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    17d6:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    17da:	dc 01       	movw	r26, r24
    17dc:	cb 01       	movw	r24, r22
    17de:	9e 83       	std	Y+6, r25	; 0x06
    17e0:	8d 83       	std	Y+5, r24	; 0x05
    17e2:	8d 81       	ldd	r24, Y+5	; 0x05
    17e4:	9e 81       	ldd	r25, Y+6	; 0x06
    17e6:	9a 83       	std	Y+2, r25	; 0x02
    17e8:	89 83       	std	Y+1, r24	; 0x01
    17ea:	89 81       	ldd	r24, Y+1	; 0x01
    17ec:	9a 81       	ldd	r25, Y+2	; 0x02
    17ee:	01 97       	sbiw	r24, 0x01	; 1
    17f0:	f1 f7       	brne	.-4      	; 0x17ee <LCD_Init+0xf8>
    17f2:	9a 83       	std	Y+2, r25	; 0x02
    17f4:	89 83       	std	Y+1, r24	; 0x01
    17f6:	88 e2       	ldi	r24, 0x28	; 40
    17f8:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    17fc:	81 e0       	ldi	r24, 0x01	; 1
    17fe:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1802:	86 e0       	ldi	r24, 0x06	; 6
    1804:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1808:	8e e0       	ldi	r24, 0x0E	; 14
    180a:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    180e:	80 e8       	ldi	r24, 0x80	; 128
    1810:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1814:	2e 96       	adiw	r28, 0x0e	; 14
    1816:	0f b6       	in	r0, 0x3f	; 63
    1818:	f8 94       	cli
    181a:	de bf       	out	0x3e, r29	; 62
    181c:	0f be       	out	0x3f, r0	; 63
    181e:	cd bf       	out	0x3d, r28	; 61
    1820:	cf 91       	pop	r28
    1822:	df 91       	pop	r29
    1824:	08 95       	ret

00001826 <LCD_WR_Command>:
    1826:	df 93       	push	r29
    1828:	cf 93       	push	r28
    182a:	cd b7       	in	r28, 0x3d	; 61
    182c:	de b7       	in	r29, 0x3e	; 62
    182e:	6e 97       	sbiw	r28, 0x1e	; 30
    1830:	0f b6       	in	r0, 0x3f	; 63
    1832:	f8 94       	cli
    1834:	de bf       	out	0x3e, r29	; 62
    1836:	0f be       	out	0x3f, r0	; 63
    1838:	cd bf       	out	0x3d, r28	; 61
    183a:	8e 8f       	std	Y+30, r24	; 0x1e
    183c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    183e:	8d 8f       	std	Y+29, r24	; 0x1d
    1840:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1842:	80 7f       	andi	r24, 0xF0	; 240
    1844:	8d 8f       	std	Y+29, r24	; 0x1d
    1846:	a8 e2       	ldi	r26, 0x28	; 40
    1848:	b0 e0       	ldi	r27, 0x00	; 0
    184a:	e8 e2       	ldi	r30, 0x28	; 40
    184c:	f0 e0       	ldi	r31, 0x00	; 0
    184e:	80 81       	ld	r24, Z
    1850:	8f 70       	andi	r24, 0x0F	; 15
    1852:	8c 93       	st	X, r24
    1854:	a8 e2       	ldi	r26, 0x28	; 40
    1856:	b0 e0       	ldi	r27, 0x00	; 0
    1858:	e8 e2       	ldi	r30, 0x28	; 40
    185a:	f0 e0       	ldi	r31, 0x00	; 0
    185c:	90 81       	ld	r25, Z
    185e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1860:	89 2b       	or	r24, r25
    1862:	8c 93       	st	X, r24
    1864:	a8 e2       	ldi	r26, 0x28	; 40
    1866:	b0 e0       	ldi	r27, 0x00	; 0
    1868:	e8 e2       	ldi	r30, 0x28	; 40
    186a:	f0 e0       	ldi	r31, 0x00	; 0
    186c:	80 81       	ld	r24, Z
    186e:	8e 7f       	andi	r24, 0xFE	; 254
    1870:	8c 93       	st	X, r24
    1872:	a8 e2       	ldi	r26, 0x28	; 40
    1874:	b0 e0       	ldi	r27, 0x00	; 0
    1876:	e8 e2       	ldi	r30, 0x28	; 40
    1878:	f0 e0       	ldi	r31, 0x00	; 0
    187a:	80 81       	ld	r24, Z
    187c:	8d 7f       	andi	r24, 0xFD	; 253
    187e:	8c 93       	st	X, r24
    1880:	a8 e2       	ldi	r26, 0x28	; 40
    1882:	b0 e0       	ldi	r27, 0x00	; 0
    1884:	e8 e2       	ldi	r30, 0x28	; 40
    1886:	f0 e0       	ldi	r31, 0x00	; 0
    1888:	80 81       	ld	r24, Z
    188a:	84 60       	ori	r24, 0x04	; 4
    188c:	8c 93       	st	X, r24
    188e:	80 e0       	ldi	r24, 0x00	; 0
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	a0 ea       	ldi	r26, 0xA0	; 160
    1894:	b0 e4       	ldi	r27, 0x40	; 64
    1896:	89 8f       	std	Y+25, r24	; 0x19
    1898:	9a 8f       	std	Y+26, r25	; 0x1a
    189a:	ab 8f       	std	Y+27, r26	; 0x1b
    189c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    189e:	69 8d       	ldd	r22, Y+25	; 0x19
    18a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18a2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18a4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18a6:	2d ec       	ldi	r18, 0xCD	; 205
    18a8:	3c ec       	ldi	r19, 0xCC	; 204
    18aa:	4c e2       	ldi	r20, 0x2C	; 44
    18ac:	55 e4       	ldi	r21, 0x45	; 69
    18ae:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    18b2:	dc 01       	movw	r26, r24
    18b4:	cb 01       	movw	r24, r22
    18b6:	8d 8b       	std	Y+21, r24	; 0x15
    18b8:	9e 8b       	std	Y+22, r25	; 0x16
    18ba:	af 8b       	std	Y+23, r26	; 0x17
    18bc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    18be:	6d 89       	ldd	r22, Y+21	; 0x15
    18c0:	7e 89       	ldd	r23, Y+22	; 0x16
    18c2:	8f 89       	ldd	r24, Y+23	; 0x17
    18c4:	98 8d       	ldd	r25, Y+24	; 0x18
    18c6:	20 e0       	ldi	r18, 0x00	; 0
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	40 e8       	ldi	r20, 0x80	; 128
    18cc:	5f e3       	ldi	r21, 0x3F	; 63
    18ce:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    18d2:	88 23       	and	r24, r24
    18d4:	2c f4       	brge	.+10     	; 0x18e0 <LCD_WR_Command+0xba>
		__ticks = 1;
    18d6:	81 e0       	ldi	r24, 0x01	; 1
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	9c 8b       	std	Y+20, r25	; 0x14
    18dc:	8b 8b       	std	Y+19, r24	; 0x13
    18de:	3f c0       	rjmp	.+126    	; 0x195e <LCD_WR_Command+0x138>
	else if (__tmp > 65535)
    18e0:	6d 89       	ldd	r22, Y+21	; 0x15
    18e2:	7e 89       	ldd	r23, Y+22	; 0x16
    18e4:	8f 89       	ldd	r24, Y+23	; 0x17
    18e6:	98 8d       	ldd	r25, Y+24	; 0x18
    18e8:	20 e0       	ldi	r18, 0x00	; 0
    18ea:	3f ef       	ldi	r19, 0xFF	; 255
    18ec:	4f e7       	ldi	r20, 0x7F	; 127
    18ee:	57 e4       	ldi	r21, 0x47	; 71
    18f0:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    18f4:	18 16       	cp	r1, r24
    18f6:	4c f5       	brge	.+82     	; 0x194a <LCD_WR_Command+0x124>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18f8:	69 8d       	ldd	r22, Y+25	; 0x19
    18fa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18fc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18fe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	40 e2       	ldi	r20, 0x20	; 32
    1906:	51 e4       	ldi	r21, 0x41	; 65
    1908:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    190c:	dc 01       	movw	r26, r24
    190e:	cb 01       	movw	r24, r22
    1910:	bc 01       	movw	r22, r24
    1912:	cd 01       	movw	r24, r26
    1914:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1918:	dc 01       	movw	r26, r24
    191a:	cb 01       	movw	r24, r22
    191c:	9c 8b       	std	Y+20, r25	; 0x14
    191e:	8b 8b       	std	Y+19, r24	; 0x13
    1920:	0f c0       	rjmp	.+30     	; 0x1940 <LCD_WR_Command+0x11a>
    1922:	84 e1       	ldi	r24, 0x14	; 20
    1924:	91 e0       	ldi	r25, 0x01	; 1
    1926:	9a 8b       	std	Y+18, r25	; 0x12
    1928:	89 8b       	std	Y+17, r24	; 0x11
    192a:	89 89       	ldd	r24, Y+17	; 0x11
    192c:	9a 89       	ldd	r25, Y+18	; 0x12
    192e:	01 97       	sbiw	r24, 0x01	; 1
    1930:	f1 f7       	brne	.-4      	; 0x192e <LCD_WR_Command+0x108>
    1932:	9a 8b       	std	Y+18, r25	; 0x12
    1934:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1936:	8b 89       	ldd	r24, Y+19	; 0x13
    1938:	9c 89       	ldd	r25, Y+20	; 0x14
    193a:	01 97       	sbiw	r24, 0x01	; 1
    193c:	9c 8b       	std	Y+20, r25	; 0x14
    193e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1940:	8b 89       	ldd	r24, Y+19	; 0x13
    1942:	9c 89       	ldd	r25, Y+20	; 0x14
    1944:	00 97       	sbiw	r24, 0x00	; 0
    1946:	69 f7       	brne	.-38     	; 0x1922 <LCD_WR_Command+0xfc>
    1948:	14 c0       	rjmp	.+40     	; 0x1972 <LCD_WR_Command+0x14c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    194a:	6d 89       	ldd	r22, Y+21	; 0x15
    194c:	7e 89       	ldd	r23, Y+22	; 0x16
    194e:	8f 89       	ldd	r24, Y+23	; 0x17
    1950:	98 8d       	ldd	r25, Y+24	; 0x18
    1952:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1956:	dc 01       	movw	r26, r24
    1958:	cb 01       	movw	r24, r22
    195a:	9c 8b       	std	Y+20, r25	; 0x14
    195c:	8b 8b       	std	Y+19, r24	; 0x13
    195e:	8b 89       	ldd	r24, Y+19	; 0x13
    1960:	9c 89       	ldd	r25, Y+20	; 0x14
    1962:	98 8b       	std	Y+16, r25	; 0x10
    1964:	8f 87       	std	Y+15, r24	; 0x0f
    1966:	8f 85       	ldd	r24, Y+15	; 0x0f
    1968:	98 89       	ldd	r25, Y+16	; 0x10
    196a:	01 97       	sbiw	r24, 0x01	; 1
    196c:	f1 f7       	brne	.-4      	; 0x196a <LCD_WR_Command+0x144>
    196e:	98 8b       	std	Y+16, r25	; 0x10
    1970:	8f 87       	std	Y+15, r24	; 0x0f
    1972:	a8 e2       	ldi	r26, 0x28	; 40
    1974:	b0 e0       	ldi	r27, 0x00	; 0
    1976:	e8 e2       	ldi	r30, 0x28	; 40
    1978:	f0 e0       	ldi	r31, 0x00	; 0
    197a:	80 81       	ld	r24, Z
    197c:	8b 7f       	andi	r24, 0xFB	; 251
    197e:	8c 93       	st	X, r24
    1980:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1982:	8f 70       	andi	r24, 0x0F	; 15
    1984:	8e 8f       	std	Y+30, r24	; 0x1e
    1986:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1988:	82 95       	swap	r24
    198a:	80 7f       	andi	r24, 0xF0	; 240
    198c:	8e 8f       	std	Y+30, r24	; 0x1e
    198e:	a8 e2       	ldi	r26, 0x28	; 40
    1990:	b0 e0       	ldi	r27, 0x00	; 0
    1992:	e8 e2       	ldi	r30, 0x28	; 40
    1994:	f0 e0       	ldi	r31, 0x00	; 0
    1996:	80 81       	ld	r24, Z
    1998:	8f 70       	andi	r24, 0x0F	; 15
    199a:	8c 93       	st	X, r24
    199c:	a8 e2       	ldi	r26, 0x28	; 40
    199e:	b0 e0       	ldi	r27, 0x00	; 0
    19a0:	e8 e2       	ldi	r30, 0x28	; 40
    19a2:	f0 e0       	ldi	r31, 0x00	; 0
    19a4:	90 81       	ld	r25, Z
    19a6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19a8:	89 2b       	or	r24, r25
    19aa:	8c 93       	st	X, r24
    19ac:	a8 e2       	ldi	r26, 0x28	; 40
    19ae:	b0 e0       	ldi	r27, 0x00	; 0
    19b0:	e8 e2       	ldi	r30, 0x28	; 40
    19b2:	f0 e0       	ldi	r31, 0x00	; 0
    19b4:	80 81       	ld	r24, Z
    19b6:	8e 7f       	andi	r24, 0xFE	; 254
    19b8:	8c 93       	st	X, r24
    19ba:	a8 e2       	ldi	r26, 0x28	; 40
    19bc:	b0 e0       	ldi	r27, 0x00	; 0
    19be:	e8 e2       	ldi	r30, 0x28	; 40
    19c0:	f0 e0       	ldi	r31, 0x00	; 0
    19c2:	80 81       	ld	r24, Z
    19c4:	8d 7f       	andi	r24, 0xFD	; 253
    19c6:	8c 93       	st	X, r24
    19c8:	a8 e2       	ldi	r26, 0x28	; 40
    19ca:	b0 e0       	ldi	r27, 0x00	; 0
    19cc:	e8 e2       	ldi	r30, 0x28	; 40
    19ce:	f0 e0       	ldi	r31, 0x00	; 0
    19d0:	80 81       	ld	r24, Z
    19d2:	84 60       	ori	r24, 0x04	; 4
    19d4:	8c 93       	st	X, r24
    19d6:	80 e0       	ldi	r24, 0x00	; 0
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	a0 ea       	ldi	r26, 0xA0	; 160
    19dc:	b0 e4       	ldi	r27, 0x40	; 64
    19de:	8b 87       	std	Y+11, r24	; 0x0b
    19e0:	9c 87       	std	Y+12, r25	; 0x0c
    19e2:	ad 87       	std	Y+13, r26	; 0x0d
    19e4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19e6:	6b 85       	ldd	r22, Y+11	; 0x0b
    19e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    19ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    19ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    19ee:	2d ec       	ldi	r18, 0xCD	; 205
    19f0:	3c ec       	ldi	r19, 0xCC	; 204
    19f2:	4c e2       	ldi	r20, 0x2C	; 44
    19f4:	55 e4       	ldi	r21, 0x45	; 69
    19f6:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    19fa:	dc 01       	movw	r26, r24
    19fc:	cb 01       	movw	r24, r22
    19fe:	8f 83       	std	Y+7, r24	; 0x07
    1a00:	98 87       	std	Y+8, r25	; 0x08
    1a02:	a9 87       	std	Y+9, r26	; 0x09
    1a04:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a06:	6f 81       	ldd	r22, Y+7	; 0x07
    1a08:	78 85       	ldd	r23, Y+8	; 0x08
    1a0a:	89 85       	ldd	r24, Y+9	; 0x09
    1a0c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a0e:	20 e0       	ldi	r18, 0x00	; 0
    1a10:	30 e0       	ldi	r19, 0x00	; 0
    1a12:	40 e8       	ldi	r20, 0x80	; 128
    1a14:	5f e3       	ldi	r21, 0x3F	; 63
    1a16:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    1a1a:	88 23       	and	r24, r24
    1a1c:	2c f4       	brge	.+10     	; 0x1a28 <LCD_WR_Command+0x202>
		__ticks = 1;
    1a1e:	81 e0       	ldi	r24, 0x01	; 1
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	9e 83       	std	Y+6, r25	; 0x06
    1a24:	8d 83       	std	Y+5, r24	; 0x05
    1a26:	3f c0       	rjmp	.+126    	; 0x1aa6 <LCD_WR_Command+0x280>
	else if (__tmp > 65535)
    1a28:	6f 81       	ldd	r22, Y+7	; 0x07
    1a2a:	78 85       	ldd	r23, Y+8	; 0x08
    1a2c:	89 85       	ldd	r24, Y+9	; 0x09
    1a2e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a30:	20 e0       	ldi	r18, 0x00	; 0
    1a32:	3f ef       	ldi	r19, 0xFF	; 255
    1a34:	4f e7       	ldi	r20, 0x7F	; 127
    1a36:	57 e4       	ldi	r21, 0x47	; 71
    1a38:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1a3c:	18 16       	cp	r1, r24
    1a3e:	4c f5       	brge	.+82     	; 0x1a92 <LCD_WR_Command+0x26c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a40:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a42:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a44:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a46:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a48:	20 e0       	ldi	r18, 0x00	; 0
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	40 e2       	ldi	r20, 0x20	; 32
    1a4e:	51 e4       	ldi	r21, 0x41	; 65
    1a50:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1a54:	dc 01       	movw	r26, r24
    1a56:	cb 01       	movw	r24, r22
    1a58:	bc 01       	movw	r22, r24
    1a5a:	cd 01       	movw	r24, r26
    1a5c:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1a60:	dc 01       	movw	r26, r24
    1a62:	cb 01       	movw	r24, r22
    1a64:	9e 83       	std	Y+6, r25	; 0x06
    1a66:	8d 83       	std	Y+5, r24	; 0x05
    1a68:	0f c0       	rjmp	.+30     	; 0x1a88 <LCD_WR_Command+0x262>
    1a6a:	84 e1       	ldi	r24, 0x14	; 20
    1a6c:	91 e0       	ldi	r25, 0x01	; 1
    1a6e:	9c 83       	std	Y+4, r25	; 0x04
    1a70:	8b 83       	std	Y+3, r24	; 0x03
    1a72:	8b 81       	ldd	r24, Y+3	; 0x03
    1a74:	9c 81       	ldd	r25, Y+4	; 0x04
    1a76:	01 97       	sbiw	r24, 0x01	; 1
    1a78:	f1 f7       	brne	.-4      	; 0x1a76 <LCD_WR_Command+0x250>
    1a7a:	9c 83       	std	Y+4, r25	; 0x04
    1a7c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a7e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a80:	9e 81       	ldd	r25, Y+6	; 0x06
    1a82:	01 97       	sbiw	r24, 0x01	; 1
    1a84:	9e 83       	std	Y+6, r25	; 0x06
    1a86:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a88:	8d 81       	ldd	r24, Y+5	; 0x05
    1a8a:	9e 81       	ldd	r25, Y+6	; 0x06
    1a8c:	00 97       	sbiw	r24, 0x00	; 0
    1a8e:	69 f7       	brne	.-38     	; 0x1a6a <LCD_WR_Command+0x244>
    1a90:	14 c0       	rjmp	.+40     	; 0x1aba <LCD_WR_Command+0x294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a92:	6f 81       	ldd	r22, Y+7	; 0x07
    1a94:	78 85       	ldd	r23, Y+8	; 0x08
    1a96:	89 85       	ldd	r24, Y+9	; 0x09
    1a98:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a9a:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1a9e:	dc 01       	movw	r26, r24
    1aa0:	cb 01       	movw	r24, r22
    1aa2:	9e 83       	std	Y+6, r25	; 0x06
    1aa4:	8d 83       	std	Y+5, r24	; 0x05
    1aa6:	8d 81       	ldd	r24, Y+5	; 0x05
    1aa8:	9e 81       	ldd	r25, Y+6	; 0x06
    1aaa:	9a 83       	std	Y+2, r25	; 0x02
    1aac:	89 83       	std	Y+1, r24	; 0x01
    1aae:	89 81       	ldd	r24, Y+1	; 0x01
    1ab0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ab2:	01 97       	sbiw	r24, 0x01	; 1
    1ab4:	f1 f7       	brne	.-4      	; 0x1ab2 <LCD_WR_Command+0x28c>
    1ab6:	9a 83       	std	Y+2, r25	; 0x02
    1ab8:	89 83       	std	Y+1, r24	; 0x01
    1aba:	a8 e2       	ldi	r26, 0x28	; 40
    1abc:	b0 e0       	ldi	r27, 0x00	; 0
    1abe:	e8 e2       	ldi	r30, 0x28	; 40
    1ac0:	f0 e0       	ldi	r31, 0x00	; 0
    1ac2:	80 81       	ld	r24, Z
    1ac4:	8b 7f       	andi	r24, 0xFB	; 251
    1ac6:	8c 93       	st	X, r24
    1ac8:	6e 96       	adiw	r28, 0x1e	; 30
    1aca:	0f b6       	in	r0, 0x3f	; 63
    1acc:	f8 94       	cli
    1ace:	de bf       	out	0x3e, r29	; 62
    1ad0:	0f be       	out	0x3f, r0	; 63
    1ad2:	cd bf       	out	0x3d, r28	; 61
    1ad4:	cf 91       	pop	r28
    1ad6:	df 91       	pop	r29
    1ad8:	08 95       	ret

00001ada <LCD_WR_Char>:
    1ada:	df 93       	push	r29
    1adc:	cf 93       	push	r28
    1ade:	cd b7       	in	r28, 0x3d	; 61
    1ae0:	de b7       	in	r29, 0x3e	; 62
    1ae2:	6e 97       	sbiw	r28, 0x1e	; 30
    1ae4:	0f b6       	in	r0, 0x3f	; 63
    1ae6:	f8 94       	cli
    1ae8:	de bf       	out	0x3e, r29	; 62
    1aea:	0f be       	out	0x3f, r0	; 63
    1aec:	cd bf       	out	0x3d, r28	; 61
    1aee:	8e 8f       	std	Y+30, r24	; 0x1e
    1af0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1af2:	8d 8f       	std	Y+29, r24	; 0x1d
    1af4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1af6:	80 7f       	andi	r24, 0xF0	; 240
    1af8:	8d 8f       	std	Y+29, r24	; 0x1d
    1afa:	a8 e2       	ldi	r26, 0x28	; 40
    1afc:	b0 e0       	ldi	r27, 0x00	; 0
    1afe:	e8 e2       	ldi	r30, 0x28	; 40
    1b00:	f0 e0       	ldi	r31, 0x00	; 0
    1b02:	80 81       	ld	r24, Z
    1b04:	8f 70       	andi	r24, 0x0F	; 15
    1b06:	8c 93       	st	X, r24
    1b08:	a8 e2       	ldi	r26, 0x28	; 40
    1b0a:	b0 e0       	ldi	r27, 0x00	; 0
    1b0c:	e8 e2       	ldi	r30, 0x28	; 40
    1b0e:	f0 e0       	ldi	r31, 0x00	; 0
    1b10:	90 81       	ld	r25, Z
    1b12:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1b14:	89 2b       	or	r24, r25
    1b16:	8c 93       	st	X, r24
    1b18:	a8 e2       	ldi	r26, 0x28	; 40
    1b1a:	b0 e0       	ldi	r27, 0x00	; 0
    1b1c:	e8 e2       	ldi	r30, 0x28	; 40
    1b1e:	f0 e0       	ldi	r31, 0x00	; 0
    1b20:	80 81       	ld	r24, Z
    1b22:	81 60       	ori	r24, 0x01	; 1
    1b24:	8c 93       	st	X, r24
    1b26:	a8 e2       	ldi	r26, 0x28	; 40
    1b28:	b0 e0       	ldi	r27, 0x00	; 0
    1b2a:	e8 e2       	ldi	r30, 0x28	; 40
    1b2c:	f0 e0       	ldi	r31, 0x00	; 0
    1b2e:	80 81       	ld	r24, Z
    1b30:	8d 7f       	andi	r24, 0xFD	; 253
    1b32:	8c 93       	st	X, r24
    1b34:	a8 e2       	ldi	r26, 0x28	; 40
    1b36:	b0 e0       	ldi	r27, 0x00	; 0
    1b38:	e8 e2       	ldi	r30, 0x28	; 40
    1b3a:	f0 e0       	ldi	r31, 0x00	; 0
    1b3c:	80 81       	ld	r24, Z
    1b3e:	84 60       	ori	r24, 0x04	; 4
    1b40:	8c 93       	st	X, r24
    1b42:	80 e0       	ldi	r24, 0x00	; 0
    1b44:	90 e0       	ldi	r25, 0x00	; 0
    1b46:	a0 ea       	ldi	r26, 0xA0	; 160
    1b48:	b0 e4       	ldi	r27, 0x40	; 64
    1b4a:	89 8f       	std	Y+25, r24	; 0x19
    1b4c:	9a 8f       	std	Y+26, r25	; 0x1a
    1b4e:	ab 8f       	std	Y+27, r26	; 0x1b
    1b50:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b52:	69 8d       	ldd	r22, Y+25	; 0x19
    1b54:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b56:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b58:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b5a:	2d ec       	ldi	r18, 0xCD	; 205
    1b5c:	3c ec       	ldi	r19, 0xCC	; 204
    1b5e:	4c e2       	ldi	r20, 0x2C	; 44
    1b60:	55 e4       	ldi	r21, 0x45	; 69
    1b62:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1b66:	dc 01       	movw	r26, r24
    1b68:	cb 01       	movw	r24, r22
    1b6a:	8d 8b       	std	Y+21, r24	; 0x15
    1b6c:	9e 8b       	std	Y+22, r25	; 0x16
    1b6e:	af 8b       	std	Y+23, r26	; 0x17
    1b70:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1b72:	6d 89       	ldd	r22, Y+21	; 0x15
    1b74:	7e 89       	ldd	r23, Y+22	; 0x16
    1b76:	8f 89       	ldd	r24, Y+23	; 0x17
    1b78:	98 8d       	ldd	r25, Y+24	; 0x18
    1b7a:	20 e0       	ldi	r18, 0x00	; 0
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	40 e8       	ldi	r20, 0x80	; 128
    1b80:	5f e3       	ldi	r21, 0x3F	; 63
    1b82:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    1b86:	88 23       	and	r24, r24
    1b88:	2c f4       	brge	.+10     	; 0x1b94 <LCD_WR_Char+0xba>
		__ticks = 1;
    1b8a:	81 e0       	ldi	r24, 0x01	; 1
    1b8c:	90 e0       	ldi	r25, 0x00	; 0
    1b8e:	9c 8b       	std	Y+20, r25	; 0x14
    1b90:	8b 8b       	std	Y+19, r24	; 0x13
    1b92:	3f c0       	rjmp	.+126    	; 0x1c12 <LCD_WR_Char+0x138>
	else if (__tmp > 65535)
    1b94:	6d 89       	ldd	r22, Y+21	; 0x15
    1b96:	7e 89       	ldd	r23, Y+22	; 0x16
    1b98:	8f 89       	ldd	r24, Y+23	; 0x17
    1b9a:	98 8d       	ldd	r25, Y+24	; 0x18
    1b9c:	20 e0       	ldi	r18, 0x00	; 0
    1b9e:	3f ef       	ldi	r19, 0xFF	; 255
    1ba0:	4f e7       	ldi	r20, 0x7F	; 127
    1ba2:	57 e4       	ldi	r21, 0x47	; 71
    1ba4:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1ba8:	18 16       	cp	r1, r24
    1baa:	4c f5       	brge	.+82     	; 0x1bfe <LCD_WR_Char+0x124>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bac:	69 8d       	ldd	r22, Y+25	; 0x19
    1bae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1bb0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1bb2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1bb4:	20 e0       	ldi	r18, 0x00	; 0
    1bb6:	30 e0       	ldi	r19, 0x00	; 0
    1bb8:	40 e2       	ldi	r20, 0x20	; 32
    1bba:	51 e4       	ldi	r21, 0x41	; 65
    1bbc:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1bc0:	dc 01       	movw	r26, r24
    1bc2:	cb 01       	movw	r24, r22
    1bc4:	bc 01       	movw	r22, r24
    1bc6:	cd 01       	movw	r24, r26
    1bc8:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1bcc:	dc 01       	movw	r26, r24
    1bce:	cb 01       	movw	r24, r22
    1bd0:	9c 8b       	std	Y+20, r25	; 0x14
    1bd2:	8b 8b       	std	Y+19, r24	; 0x13
    1bd4:	0f c0       	rjmp	.+30     	; 0x1bf4 <LCD_WR_Char+0x11a>
    1bd6:	84 e1       	ldi	r24, 0x14	; 20
    1bd8:	91 e0       	ldi	r25, 0x01	; 1
    1bda:	9a 8b       	std	Y+18, r25	; 0x12
    1bdc:	89 8b       	std	Y+17, r24	; 0x11
    1bde:	89 89       	ldd	r24, Y+17	; 0x11
    1be0:	9a 89       	ldd	r25, Y+18	; 0x12
    1be2:	01 97       	sbiw	r24, 0x01	; 1
    1be4:	f1 f7       	brne	.-4      	; 0x1be2 <LCD_WR_Char+0x108>
    1be6:	9a 8b       	std	Y+18, r25	; 0x12
    1be8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bea:	8b 89       	ldd	r24, Y+19	; 0x13
    1bec:	9c 89       	ldd	r25, Y+20	; 0x14
    1bee:	01 97       	sbiw	r24, 0x01	; 1
    1bf0:	9c 8b       	std	Y+20, r25	; 0x14
    1bf2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bf4:	8b 89       	ldd	r24, Y+19	; 0x13
    1bf6:	9c 89       	ldd	r25, Y+20	; 0x14
    1bf8:	00 97       	sbiw	r24, 0x00	; 0
    1bfa:	69 f7       	brne	.-38     	; 0x1bd6 <LCD_WR_Char+0xfc>
    1bfc:	14 c0       	rjmp	.+40     	; 0x1c26 <LCD_WR_Char+0x14c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bfe:	6d 89       	ldd	r22, Y+21	; 0x15
    1c00:	7e 89       	ldd	r23, Y+22	; 0x16
    1c02:	8f 89       	ldd	r24, Y+23	; 0x17
    1c04:	98 8d       	ldd	r25, Y+24	; 0x18
    1c06:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	cb 01       	movw	r24, r22
    1c0e:	9c 8b       	std	Y+20, r25	; 0x14
    1c10:	8b 8b       	std	Y+19, r24	; 0x13
    1c12:	8b 89       	ldd	r24, Y+19	; 0x13
    1c14:	9c 89       	ldd	r25, Y+20	; 0x14
    1c16:	98 8b       	std	Y+16, r25	; 0x10
    1c18:	8f 87       	std	Y+15, r24	; 0x0f
    1c1a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c1c:	98 89       	ldd	r25, Y+16	; 0x10
    1c1e:	01 97       	sbiw	r24, 0x01	; 1
    1c20:	f1 f7       	brne	.-4      	; 0x1c1e <LCD_WR_Char+0x144>
    1c22:	98 8b       	std	Y+16, r25	; 0x10
    1c24:	8f 87       	std	Y+15, r24	; 0x0f
    1c26:	a8 e2       	ldi	r26, 0x28	; 40
    1c28:	b0 e0       	ldi	r27, 0x00	; 0
    1c2a:	e8 e2       	ldi	r30, 0x28	; 40
    1c2c:	f0 e0       	ldi	r31, 0x00	; 0
    1c2e:	80 81       	ld	r24, Z
    1c30:	8b 7f       	andi	r24, 0xFB	; 251
    1c32:	8c 93       	st	X, r24
    1c34:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c36:	8f 70       	andi	r24, 0x0F	; 15
    1c38:	8e 8f       	std	Y+30, r24	; 0x1e
    1c3a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c3c:	82 95       	swap	r24
    1c3e:	80 7f       	andi	r24, 0xF0	; 240
    1c40:	8e 8f       	std	Y+30, r24	; 0x1e
    1c42:	a8 e2       	ldi	r26, 0x28	; 40
    1c44:	b0 e0       	ldi	r27, 0x00	; 0
    1c46:	e8 e2       	ldi	r30, 0x28	; 40
    1c48:	f0 e0       	ldi	r31, 0x00	; 0
    1c4a:	80 81       	ld	r24, Z
    1c4c:	8f 70       	andi	r24, 0x0F	; 15
    1c4e:	8c 93       	st	X, r24
    1c50:	a8 e2       	ldi	r26, 0x28	; 40
    1c52:	b0 e0       	ldi	r27, 0x00	; 0
    1c54:	e8 e2       	ldi	r30, 0x28	; 40
    1c56:	f0 e0       	ldi	r31, 0x00	; 0
    1c58:	90 81       	ld	r25, Z
    1c5a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1c5c:	89 2b       	or	r24, r25
    1c5e:	8c 93       	st	X, r24
    1c60:	a8 e2       	ldi	r26, 0x28	; 40
    1c62:	b0 e0       	ldi	r27, 0x00	; 0
    1c64:	e8 e2       	ldi	r30, 0x28	; 40
    1c66:	f0 e0       	ldi	r31, 0x00	; 0
    1c68:	80 81       	ld	r24, Z
    1c6a:	81 60       	ori	r24, 0x01	; 1
    1c6c:	8c 93       	st	X, r24
    1c6e:	a8 e2       	ldi	r26, 0x28	; 40
    1c70:	b0 e0       	ldi	r27, 0x00	; 0
    1c72:	e8 e2       	ldi	r30, 0x28	; 40
    1c74:	f0 e0       	ldi	r31, 0x00	; 0
    1c76:	80 81       	ld	r24, Z
    1c78:	8d 7f       	andi	r24, 0xFD	; 253
    1c7a:	8c 93       	st	X, r24
    1c7c:	a8 e2       	ldi	r26, 0x28	; 40
    1c7e:	b0 e0       	ldi	r27, 0x00	; 0
    1c80:	e8 e2       	ldi	r30, 0x28	; 40
    1c82:	f0 e0       	ldi	r31, 0x00	; 0
    1c84:	80 81       	ld	r24, Z
    1c86:	84 60       	ori	r24, 0x04	; 4
    1c88:	8c 93       	st	X, r24
    1c8a:	80 e0       	ldi	r24, 0x00	; 0
    1c8c:	90 e0       	ldi	r25, 0x00	; 0
    1c8e:	a0 ea       	ldi	r26, 0xA0	; 160
    1c90:	b0 e4       	ldi	r27, 0x40	; 64
    1c92:	8b 87       	std	Y+11, r24	; 0x0b
    1c94:	9c 87       	std	Y+12, r25	; 0x0c
    1c96:	ad 87       	std	Y+13, r26	; 0x0d
    1c98:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c9a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c9c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c9e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ca0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ca2:	2d ec       	ldi	r18, 0xCD	; 205
    1ca4:	3c ec       	ldi	r19, 0xCC	; 204
    1ca6:	4c e2       	ldi	r20, 0x2C	; 44
    1ca8:	55 e4       	ldi	r21, 0x45	; 69
    1caa:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1cae:	dc 01       	movw	r26, r24
    1cb0:	cb 01       	movw	r24, r22
    1cb2:	8f 83       	std	Y+7, r24	; 0x07
    1cb4:	98 87       	std	Y+8, r25	; 0x08
    1cb6:	a9 87       	std	Y+9, r26	; 0x09
    1cb8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1cba:	6f 81       	ldd	r22, Y+7	; 0x07
    1cbc:	78 85       	ldd	r23, Y+8	; 0x08
    1cbe:	89 85       	ldd	r24, Y+9	; 0x09
    1cc0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	30 e0       	ldi	r19, 0x00	; 0
    1cc6:	40 e8       	ldi	r20, 0x80	; 128
    1cc8:	5f e3       	ldi	r21, 0x3F	; 63
    1cca:	0e 94 fc 19 	call	0x33f8	; 0x33f8 <__ltsf2>
    1cce:	88 23       	and	r24, r24
    1cd0:	2c f4       	brge	.+10     	; 0x1cdc <LCD_WR_Char+0x202>
		__ticks = 1;
    1cd2:	81 e0       	ldi	r24, 0x01	; 1
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	9e 83       	std	Y+6, r25	; 0x06
    1cd8:	8d 83       	std	Y+5, r24	; 0x05
    1cda:	3f c0       	rjmp	.+126    	; 0x1d5a <LCD_WR_Char+0x280>
	else if (__tmp > 65535)
    1cdc:	6f 81       	ldd	r22, Y+7	; 0x07
    1cde:	78 85       	ldd	r23, Y+8	; 0x08
    1ce0:	89 85       	ldd	r24, Y+9	; 0x09
    1ce2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ce4:	20 e0       	ldi	r18, 0x00	; 0
    1ce6:	3f ef       	ldi	r19, 0xFF	; 255
    1ce8:	4f e7       	ldi	r20, 0x7F	; 127
    1cea:	57 e4       	ldi	r21, 0x47	; 71
    1cec:	0e 94 9c 19 	call	0x3338	; 0x3338 <__gtsf2>
    1cf0:	18 16       	cp	r1, r24
    1cf2:	4c f5       	brge	.+82     	; 0x1d46 <LCD_WR_Char+0x26c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cf4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cf6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1cf8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1cfa:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	40 e2       	ldi	r20, 0x20	; 32
    1d02:	51 e4       	ldi	r21, 0x41	; 65
    1d04:	0e 94 f6 17 	call	0x2fec	; 0x2fec <__mulsf3>
    1d08:	dc 01       	movw	r26, r24
    1d0a:	cb 01       	movw	r24, r22
    1d0c:	bc 01       	movw	r22, r24
    1d0e:	cd 01       	movw	r24, r26
    1d10:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1d14:	dc 01       	movw	r26, r24
    1d16:	cb 01       	movw	r24, r22
    1d18:	9e 83       	std	Y+6, r25	; 0x06
    1d1a:	8d 83       	std	Y+5, r24	; 0x05
    1d1c:	0f c0       	rjmp	.+30     	; 0x1d3c <LCD_WR_Char+0x262>
    1d1e:	84 e1       	ldi	r24, 0x14	; 20
    1d20:	91 e0       	ldi	r25, 0x01	; 1
    1d22:	9c 83       	std	Y+4, r25	; 0x04
    1d24:	8b 83       	std	Y+3, r24	; 0x03
    1d26:	8b 81       	ldd	r24, Y+3	; 0x03
    1d28:	9c 81       	ldd	r25, Y+4	; 0x04
    1d2a:	01 97       	sbiw	r24, 0x01	; 1
    1d2c:	f1 f7       	brne	.-4      	; 0x1d2a <LCD_WR_Char+0x250>
    1d2e:	9c 83       	std	Y+4, r25	; 0x04
    1d30:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d32:	8d 81       	ldd	r24, Y+5	; 0x05
    1d34:	9e 81       	ldd	r25, Y+6	; 0x06
    1d36:	01 97       	sbiw	r24, 0x01	; 1
    1d38:	9e 83       	std	Y+6, r25	; 0x06
    1d3a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d3c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d3e:	9e 81       	ldd	r25, Y+6	; 0x06
    1d40:	00 97       	sbiw	r24, 0x00	; 0
    1d42:	69 f7       	brne	.-38     	; 0x1d1e <LCD_WR_Char+0x244>
    1d44:	14 c0       	rjmp	.+40     	; 0x1d6e <LCD_WR_Char+0x294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d46:	6f 81       	ldd	r22, Y+7	; 0x07
    1d48:	78 85       	ldd	r23, Y+8	; 0x08
    1d4a:	89 85       	ldd	r24, Y+9	; 0x09
    1d4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d4e:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    1d52:	dc 01       	movw	r26, r24
    1d54:	cb 01       	movw	r24, r22
    1d56:	9e 83       	std	Y+6, r25	; 0x06
    1d58:	8d 83       	std	Y+5, r24	; 0x05
    1d5a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d5c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d5e:	9a 83       	std	Y+2, r25	; 0x02
    1d60:	89 83       	std	Y+1, r24	; 0x01
    1d62:	89 81       	ldd	r24, Y+1	; 0x01
    1d64:	9a 81       	ldd	r25, Y+2	; 0x02
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	f1 f7       	brne	.-4      	; 0x1d66 <LCD_WR_Char+0x28c>
    1d6a:	9a 83       	std	Y+2, r25	; 0x02
    1d6c:	89 83       	std	Y+1, r24	; 0x01
    1d6e:	a8 e2       	ldi	r26, 0x28	; 40
    1d70:	b0 e0       	ldi	r27, 0x00	; 0
    1d72:	e8 e2       	ldi	r30, 0x28	; 40
    1d74:	f0 e0       	ldi	r31, 0x00	; 0
    1d76:	80 81       	ld	r24, Z
    1d78:	8b 7f       	andi	r24, 0xFB	; 251
    1d7a:	8c 93       	st	X, r24
    1d7c:	6e 96       	adiw	r28, 0x1e	; 30
    1d7e:	0f b6       	in	r0, 0x3f	; 63
    1d80:	f8 94       	cli
    1d82:	de bf       	out	0x3e, r29	; 62
    1d84:	0f be       	out	0x3f, r0	; 63
    1d86:	cd bf       	out	0x3d, r28	; 61
    1d88:	cf 91       	pop	r28
    1d8a:	df 91       	pop	r29
    1d8c:	08 95       	ret

00001d8e <LCD_Home>:
    1d8e:	df 93       	push	r29
    1d90:	cf 93       	push	r28
    1d92:	cd b7       	in	r28, 0x3d	; 61
    1d94:	de b7       	in	r29, 0x3e	; 62
    1d96:	80 e8       	ldi	r24, 0x80	; 128
    1d98:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1d9c:	cf 91       	pop	r28
    1d9e:	df 91       	pop	r29
    1da0:	08 95       	ret

00001da2 <LCD_String>:
    1da2:	df 93       	push	r29
    1da4:	cf 93       	push	r28
    1da6:	0f 92       	push	r0
    1da8:	0f 92       	push	r0
    1daa:	cd b7       	in	r28, 0x3d	; 61
    1dac:	de b7       	in	r29, 0x3e	; 62
    1dae:	9a 83       	std	Y+2, r25	; 0x02
    1db0:	89 83       	std	Y+1, r24	; 0x01
    1db2:	0a c0       	rjmp	.+20     	; 0x1dc8 <LCD_String+0x26>
    1db4:	e9 81       	ldd	r30, Y+1	; 0x01
    1db6:	fa 81       	ldd	r31, Y+2	; 0x02
    1db8:	80 81       	ld	r24, Z
    1dba:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <LCD_WR_Char>
    1dbe:	89 81       	ldd	r24, Y+1	; 0x01
    1dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    1dc2:	01 96       	adiw	r24, 0x01	; 1
    1dc4:	9a 83       	std	Y+2, r25	; 0x02
    1dc6:	89 83       	std	Y+1, r24	; 0x01
    1dc8:	e9 81       	ldd	r30, Y+1	; 0x01
    1dca:	fa 81       	ldd	r31, Y+2	; 0x02
    1dcc:	80 81       	ld	r24, Z
    1dce:	88 23       	and	r24, r24
    1dd0:	89 f7       	brne	.-30     	; 0x1db4 <LCD_String+0x12>
    1dd2:	0f 90       	pop	r0
    1dd4:	0f 90       	pop	r0
    1dd6:	cf 91       	pop	r28
    1dd8:	df 91       	pop	r29
    1dda:	08 95       	ret

00001ddc <LCD_Cursor>:
    1ddc:	df 93       	push	r29
    1dde:	cf 93       	push	r28
    1de0:	00 d0       	rcall	.+0      	; 0x1de2 <LCD_Cursor+0x6>
    1de2:	0f 92       	push	r0
    1de4:	cd b7       	in	r28, 0x3d	; 61
    1de6:	de b7       	in	r29, 0x3e	; 62
    1de8:	89 83       	std	Y+1, r24	; 0x01
    1dea:	6a 83       	std	Y+2, r22	; 0x02
    1dec:	89 81       	ldd	r24, Y+1	; 0x01
    1dee:	28 2f       	mov	r18, r24
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	3c 83       	std	Y+4, r19	; 0x04
    1df4:	2b 83       	std	Y+3, r18	; 0x03
    1df6:	8b 81       	ldd	r24, Y+3	; 0x03
    1df8:	9c 81       	ldd	r25, Y+4	; 0x04
    1dfa:	82 30       	cpi	r24, 0x02	; 2
    1dfc:	91 05       	cpc	r25, r1
    1dfe:	d9 f0       	breq	.+54     	; 0x1e36 <LCD_Cursor+0x5a>
    1e00:	2b 81       	ldd	r18, Y+3	; 0x03
    1e02:	3c 81       	ldd	r19, Y+4	; 0x04
    1e04:	23 30       	cpi	r18, 0x03	; 3
    1e06:	31 05       	cpc	r19, r1
    1e08:	34 f4       	brge	.+12     	; 0x1e16 <LCD_Cursor+0x3a>
    1e0a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e0c:	9c 81       	ldd	r25, Y+4	; 0x04
    1e0e:	81 30       	cpi	r24, 0x01	; 1
    1e10:	91 05       	cpc	r25, r1
    1e12:	61 f0       	breq	.+24     	; 0x1e2c <LCD_Cursor+0x50>
    1e14:	1e c0       	rjmp	.+60     	; 0x1e52 <LCD_Cursor+0x76>
    1e16:	2b 81       	ldd	r18, Y+3	; 0x03
    1e18:	3c 81       	ldd	r19, Y+4	; 0x04
    1e1a:	23 30       	cpi	r18, 0x03	; 3
    1e1c:	31 05       	cpc	r19, r1
    1e1e:	81 f0       	breq	.+32     	; 0x1e40 <LCD_Cursor+0x64>
    1e20:	8b 81       	ldd	r24, Y+3	; 0x03
    1e22:	9c 81       	ldd	r25, Y+4	; 0x04
    1e24:	84 30       	cpi	r24, 0x04	; 4
    1e26:	91 05       	cpc	r25, r1
    1e28:	81 f0       	breq	.+32     	; 0x1e4a <LCD_Cursor+0x6e>
    1e2a:	13 c0       	rjmp	.+38     	; 0x1e52 <LCD_Cursor+0x76>
    1e2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2e:	81 58       	subi	r24, 0x81	; 129
    1e30:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1e34:	0e c0       	rjmp	.+28     	; 0x1e52 <LCD_Cursor+0x76>
    1e36:	8a 81       	ldd	r24, Y+2	; 0x02
    1e38:	81 54       	subi	r24, 0x41	; 65
    1e3a:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1e3e:	09 c0       	rjmp	.+18     	; 0x1e52 <LCD_Cursor+0x76>
    1e40:	8a 81       	ldd	r24, Y+2	; 0x02
    1e42:	8d 56       	subi	r24, 0x6D	; 109
    1e44:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1e48:	04 c0       	rjmp	.+8      	; 0x1e52 <LCD_Cursor+0x76>
    1e4a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e4c:	8d 52       	subi	r24, 0x2D	; 45
    1e4e:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    1e52:	0f 90       	pop	r0
    1e54:	0f 90       	pop	r0
    1e56:	0f 90       	pop	r0
    1e58:	0f 90       	pop	r0
    1e5a:	cf 91       	pop	r28
    1e5c:	df 91       	pop	r29
    1e5e:	08 95       	ret

00001e60 <LCD_Print>:
    1e60:	df 93       	push	r29
    1e62:	cf 93       	push	r28
    1e64:	00 d0       	rcall	.+0      	; 0x1e66 <LCD_Print+0x6>
    1e66:	00 d0       	rcall	.+0      	; 0x1e68 <LCD_Print+0x8>
    1e68:	cd b7       	in	r28, 0x3d	; 61
    1e6a:	de b7       	in	r29, 0x3e	; 62
    1e6c:	89 83       	std	Y+1, r24	; 0x01
    1e6e:	6a 83       	std	Y+2, r22	; 0x02
    1e70:	5c 83       	std	Y+4, r21	; 0x04
    1e72:	4b 83       	std	Y+3, r20	; 0x03
    1e74:	3e 83       	std	Y+6, r19	; 0x06
    1e76:	2d 83       	std	Y+5, r18	; 0x05
    1e78:	10 92 e2 03 	sts	0x03E2, r1
    1e7c:	89 81       	ldd	r24, Y+1	; 0x01
    1e7e:	88 23       	and	r24, r24
    1e80:	19 f0       	breq	.+6      	; 0x1e88 <LCD_Print+0x28>
    1e82:	8a 81       	ldd	r24, Y+2	; 0x02
    1e84:	88 23       	and	r24, r24
    1e86:	19 f4       	brne	.+6      	; 0x1e8e <LCD_Print+0x2e>
    1e88:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <LCD_Home>
    1e8c:	04 c0       	rjmp	.+8      	; 0x1e96 <LCD_Print+0x36>
    1e8e:	89 81       	ldd	r24, Y+1	; 0x01
    1e90:	6a 81       	ldd	r22, Y+2	; 0x02
    1e92:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
    1e96:	8d 81       	ldd	r24, Y+5	; 0x05
    1e98:	9e 81       	ldd	r25, Y+6	; 0x06
    1e9a:	85 30       	cpi	r24, 0x05	; 5
    1e9c:	91 05       	cpc	r25, r1
    1e9e:	21 f0       	breq	.+8      	; 0x1ea8 <LCD_Print+0x48>
    1ea0:	80 91 e2 03 	lds	r24, 0x03E2
    1ea4:	81 30       	cpi	r24, 0x01	; 1
    1ea6:	b1 f4       	brne	.+44     	; 0x1ed4 <LCD_Print+0x74>
    1ea8:	8b 81       	ldd	r24, Y+3	; 0x03
    1eaa:	9c 81       	ldd	r25, Y+4	; 0x04
    1eac:	20 e1       	ldi	r18, 0x10	; 16
    1eae:	37 e2       	ldi	r19, 0x27	; 39
    1eb0:	b9 01       	movw	r22, r18
    1eb2:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1eb6:	cb 01       	movw	r24, r22
    1eb8:	c0 96       	adiw	r24, 0x30	; 48
    1eba:	90 93 51 04 	sts	0x0451, r25
    1ebe:	80 93 50 04 	sts	0x0450, r24
    1ec2:	80 91 50 04 	lds	r24, 0x0450
    1ec6:	90 91 51 04 	lds	r25, 0x0451
    1eca:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <LCD_WR_Char>
    1ece:	81 e0       	ldi	r24, 0x01	; 1
    1ed0:	80 93 e2 03 	sts	0x03E2, r24
    1ed4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ed6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ed8:	84 30       	cpi	r24, 0x04	; 4
    1eda:	91 05       	cpc	r25, r1
    1edc:	21 f0       	breq	.+8      	; 0x1ee6 <LCD_Print+0x86>
    1ede:	80 91 e2 03 	lds	r24, 0x03E2
    1ee2:	81 30       	cpi	r24, 0x01	; 1
    1ee4:	19 f5       	brne	.+70     	; 0x1f2c <LCD_Print+0xcc>
    1ee6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ee8:	9c 81       	ldd	r25, Y+4	; 0x04
    1eea:	28 ee       	ldi	r18, 0xE8	; 232
    1eec:	33 e0       	ldi	r19, 0x03	; 3
    1eee:	b9 01       	movw	r22, r18
    1ef0:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1ef4:	cb 01       	movw	r24, r22
    1ef6:	90 93 b7 04 	sts	0x04B7, r25
    1efa:	80 93 b6 04 	sts	0x04B6, r24
    1efe:	80 91 b6 04 	lds	r24, 0x04B6
    1f02:	90 91 b7 04 	lds	r25, 0x04B7
    1f06:	2a e0       	ldi	r18, 0x0A	; 10
    1f08:	30 e0       	ldi	r19, 0x00	; 0
    1f0a:	b9 01       	movw	r22, r18
    1f0c:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1f10:	c0 96       	adiw	r24, 0x30	; 48
    1f12:	90 93 48 05 	sts	0x0548, r25
    1f16:	80 93 47 05 	sts	0x0547, r24
    1f1a:	80 91 47 05 	lds	r24, 0x0547
    1f1e:	90 91 48 05 	lds	r25, 0x0548
    1f22:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <LCD_WR_Char>
    1f26:	81 e0       	ldi	r24, 0x01	; 1
    1f28:	80 93 e2 03 	sts	0x03E2, r24
    1f2c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f2e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f30:	83 30       	cpi	r24, 0x03	; 3
    1f32:	91 05       	cpc	r25, r1
    1f34:	21 f0       	breq	.+8      	; 0x1f3e <LCD_Print+0xde>
    1f36:	80 91 e2 03 	lds	r24, 0x03E2
    1f3a:	81 30       	cpi	r24, 0x01	; 1
    1f3c:	19 f5       	brne	.+70     	; 0x1f84 <LCD_Print+0x124>
    1f3e:	8b 81       	ldd	r24, Y+3	; 0x03
    1f40:	9c 81       	ldd	r25, Y+4	; 0x04
    1f42:	24 e6       	ldi	r18, 0x64	; 100
    1f44:	30 e0       	ldi	r19, 0x00	; 0
    1f46:	b9 01       	movw	r22, r18
    1f48:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1f4c:	cb 01       	movw	r24, r22
    1f4e:	90 93 b7 04 	sts	0x04B7, r25
    1f52:	80 93 b6 04 	sts	0x04B6, r24
    1f56:	80 91 b6 04 	lds	r24, 0x04B6
    1f5a:	90 91 b7 04 	lds	r25, 0x04B7
    1f5e:	2a e0       	ldi	r18, 0x0A	; 10
    1f60:	30 e0       	ldi	r19, 0x00	; 0
    1f62:	b9 01       	movw	r22, r18
    1f64:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1f68:	c0 96       	adiw	r24, 0x30	; 48
    1f6a:	90 93 e0 04 	sts	0x04E0, r25
    1f6e:	80 93 df 04 	sts	0x04DF, r24
    1f72:	80 91 df 04 	lds	r24, 0x04DF
    1f76:	90 91 e0 04 	lds	r25, 0x04E0
    1f7a:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <LCD_WR_Char>
    1f7e:	81 e0       	ldi	r24, 0x01	; 1
    1f80:	80 93 e2 03 	sts	0x03E2, r24
    1f84:	8d 81       	ldd	r24, Y+5	; 0x05
    1f86:	9e 81       	ldd	r25, Y+6	; 0x06
    1f88:	82 30       	cpi	r24, 0x02	; 2
    1f8a:	91 05       	cpc	r25, r1
    1f8c:	21 f0       	breq	.+8      	; 0x1f96 <LCD_Print+0x136>
    1f8e:	80 91 e2 03 	lds	r24, 0x03E2
    1f92:	81 30       	cpi	r24, 0x01	; 1
    1f94:	19 f5       	brne	.+70     	; 0x1fdc <LCD_Print+0x17c>
    1f96:	8b 81       	ldd	r24, Y+3	; 0x03
    1f98:	9c 81       	ldd	r25, Y+4	; 0x04
    1f9a:	2a e0       	ldi	r18, 0x0A	; 10
    1f9c:	30 e0       	ldi	r19, 0x00	; 0
    1f9e:	b9 01       	movw	r22, r18
    1fa0:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1fa4:	cb 01       	movw	r24, r22
    1fa6:	90 93 b7 04 	sts	0x04B7, r25
    1faa:	80 93 b6 04 	sts	0x04B6, r24
    1fae:	80 91 b6 04 	lds	r24, 0x04B6
    1fb2:	90 91 b7 04 	lds	r25, 0x04B7
    1fb6:	2a e0       	ldi	r18, 0x0A	; 10
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	b9 01       	movw	r22, r18
    1fbc:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1fc0:	c0 96       	adiw	r24, 0x30	; 48
    1fc2:	90 93 be 04 	sts	0x04BE, r25
    1fc6:	80 93 bd 04 	sts	0x04BD, r24
    1fca:	80 91 bd 04 	lds	r24, 0x04BD
    1fce:	90 91 be 04 	lds	r25, 0x04BE
    1fd2:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <LCD_WR_Char>
    1fd6:	81 e0       	ldi	r24, 0x01	; 1
    1fd8:	80 93 e2 03 	sts	0x03E2, r24
    1fdc:	8d 81       	ldd	r24, Y+5	; 0x05
    1fde:	9e 81       	ldd	r25, Y+6	; 0x06
    1fe0:	81 30       	cpi	r24, 0x01	; 1
    1fe2:	91 05       	cpc	r25, r1
    1fe4:	21 f0       	breq	.+8      	; 0x1fee <LCD_Print+0x18e>
    1fe6:	80 91 e2 03 	lds	r24, 0x03E2
    1fea:	81 30       	cpi	r24, 0x01	; 1
    1fec:	91 f4       	brne	.+36     	; 0x2012 <LCD_Print+0x1b2>
    1fee:	8b 81       	ldd	r24, Y+3	; 0x03
    1ff0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ff2:	2a e0       	ldi	r18, 0x0A	; 10
    1ff4:	30 e0       	ldi	r19, 0x00	; 0
    1ff6:	b9 01       	movw	r22, r18
    1ff8:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <__udivmodhi4>
    1ffc:	c0 96       	adiw	r24, 0x30	; 48
    1ffe:	90 93 46 05 	sts	0x0546, r25
    2002:	80 93 45 05 	sts	0x0545, r24
    2006:	80 91 45 05 	lds	r24, 0x0545
    200a:	90 91 46 05 	lds	r25, 0x0546
    200e:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <LCD_WR_Char>
    2012:	8d 81       	ldd	r24, Y+5	; 0x05
    2014:	9e 81       	ldd	r25, Y+6	; 0x06
    2016:	86 30       	cpi	r24, 0x06	; 6
    2018:	91 05       	cpc	r25, r1
    201a:	1c f0       	brlt	.+6      	; 0x2022 <LCD_Print+0x1c2>
    201c:	85 e4       	ldi	r24, 0x45	; 69
    201e:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <LCD_WR_Char>
    2022:	26 96       	adiw	r28, 0x06	; 6
    2024:	0f b6       	in	r0, 0x3f	; 63
    2026:	f8 94       	cli
    2028:	de bf       	out	0x3e, r29	; 62
    202a:	0f be       	out	0x3f, r0	; 63
    202c:	cd bf       	out	0x3d, r28	; 61
    202e:	cf 91       	pop	r28
    2030:	df 91       	pop	r29
    2032:	08 95       	ret

00002034 <Init_Motor_Peri>:
    2034:	df 93       	push	r29
    2036:	cf 93       	push	r28
    2038:	cd b7       	in	r28, 0x3d	; 61
    203a:	de b7       	in	r29, 0x3e	; 62
    203c:	0e 94 23 10 	call	0x2046	; 0x2046 <motor_init>
    2040:	cf 91       	pop	r28
    2042:	df 91       	pop	r29
    2044:	08 95       	ret

00002046 <motor_init>:
    2046:	df 93       	push	r29
    2048:	cf 93       	push	r28
    204a:	cd b7       	in	r28, 0x3d	; 61
    204c:	de b7       	in	r29, 0x3e	; 62
    204e:	e1 e2       	ldi	r30, 0x21	; 33
    2050:	f0 e0       	ldi	r31, 0x00	; 0
    2052:	8f ef       	ldi	r24, 0xFF	; 255
    2054:	80 83       	st	Z, r24
    2056:	e2 e2       	ldi	r30, 0x22	; 34
    2058:	f0 e0       	ldi	r31, 0x00	; 0
    205a:	10 82       	st	Z, r1
    205c:	ea e0       	ldi	r30, 0x0A	; 10
    205e:	f1 e0       	ldi	r31, 0x01	; 1
    2060:	88 e3       	ldi	r24, 0x38	; 56
    2062:	80 83       	st	Z, r24
    2064:	eb e0       	ldi	r30, 0x0B	; 11
    2066:	f1 e0       	ldi	r31, 0x01	; 1
    2068:	88 e3       	ldi	r24, 0x38	; 56
    206a:	80 83       	st	Z, r24
    206c:	ed e2       	ldi	r30, 0x2D	; 45
    206e:	f0 e0       	ldi	r31, 0x00	; 0
    2070:	88 e0       	ldi	r24, 0x08	; 8
    2072:	80 83       	st	Z, r24
    2074:	ee e2       	ldi	r30, 0x2E	; 46
    2076:	f0 e0       	ldi	r31, 0x00	; 0
    2078:	88 e0       	ldi	r24, 0x08	; 8
    207a:	80 83       	st	Z, r24
    207c:	0e 94 43 10 	call	0x2086	; 0x2086 <Timer5_init>
    2080:	cf 91       	pop	r28
    2082:	df 91       	pop	r29
    2084:	08 95       	ret

00002086 <Timer5_init>:
    2086:	df 93       	push	r29
    2088:	cf 93       	push	r28
    208a:	cd b7       	in	r28, 0x3d	; 61
    208c:	de b7       	in	r29, 0x3e	; 62
    208e:	e1 e2       	ldi	r30, 0x21	; 33
    2090:	f1 e0       	ldi	r31, 0x01	; 1
    2092:	10 82       	st	Z, r1
    2094:	e5 e2       	ldi	r30, 0x25	; 37
    2096:	f1 e0       	ldi	r31, 0x01	; 1
    2098:	8f ef       	ldi	r24, 0xFF	; 255
    209a:	80 83       	st	Z, r24
    209c:	e5 e2       	ldi	r30, 0x25	; 37
    209e:	f1 e0       	ldi	r31, 0x01	; 1
    20a0:	10 82       	st	Z, r1
    20a2:	e9 e2       	ldi	r30, 0x29	; 41
    20a4:	f1 e0       	ldi	r31, 0x01	; 1
    20a6:	10 82       	st	Z, r1
    20a8:	eb e2       	ldi	r30, 0x2B	; 43
    20aa:	f1 e0       	ldi	r31, 0x01	; 1
    20ac:	10 82       	st	Z, r1
    20ae:	ea e2       	ldi	r30, 0x2A	; 42
    20b0:	f1 e0       	ldi	r31, 0x01	; 1
    20b2:	8f ef       	ldi	r24, 0xFF	; 255
    20b4:	80 83       	st	Z, r24
    20b6:	ed e2       	ldi	r30, 0x2D	; 45
    20b8:	f1 e0       	ldi	r31, 0x01	; 1
    20ba:	10 82       	st	Z, r1
    20bc:	ec e2       	ldi	r30, 0x2C	; 44
    20be:	f1 e0       	ldi	r31, 0x01	; 1
    20c0:	8f ef       	ldi	r24, 0xFF	; 255
    20c2:	80 83       	st	Z, r24
    20c4:	e0 e2       	ldi	r30, 0x20	; 32
    20c6:	f1 e0       	ldi	r31, 0x01	; 1
    20c8:	89 ea       	ldi	r24, 0xA9	; 169
    20ca:	80 83       	st	Z, r24
    20cc:	e1 e2       	ldi	r30, 0x21	; 33
    20ce:	f1 e0       	ldi	r31, 0x01	; 1
    20d0:	8b e0       	ldi	r24, 0x0B	; 11
    20d2:	80 83       	st	Z, r24
    20d4:	cf 91       	pop	r28
    20d6:	df 91       	pop	r29
    20d8:	08 95       	ret

000020da <velocity>:
    20da:	df 93       	push	r29
    20dc:	cf 93       	push	r28
    20de:	0f 92       	push	r0
    20e0:	0f 92       	push	r0
    20e2:	cd b7       	in	r28, 0x3d	; 61
    20e4:	de b7       	in	r29, 0x3e	; 62
    20e6:	89 83       	std	Y+1, r24	; 0x01
    20e8:	6a 83       	std	Y+2, r22	; 0x02
    20ea:	e8 e2       	ldi	r30, 0x28	; 40
    20ec:	f1 e0       	ldi	r31, 0x01	; 1
    20ee:	89 81       	ldd	r24, Y+1	; 0x01
    20f0:	80 83       	st	Z, r24
    20f2:	ea e2       	ldi	r30, 0x2A	; 42
    20f4:	f1 e0       	ldi	r31, 0x01	; 1
    20f6:	8a 81       	ldd	r24, Y+2	; 0x02
    20f8:	80 83       	st	Z, r24
    20fa:	e8 e9       	ldi	r30, 0x98	; 152
    20fc:	f0 e0       	ldi	r31, 0x00	; 0
    20fe:	89 81       	ldd	r24, Y+1	; 0x01
    2100:	80 83       	st	Z, r24
    2102:	0f 90       	pop	r0
    2104:	0f 90       	pop	r0
    2106:	cf 91       	pop	r28
    2108:	df 91       	pop	r29
    210a:	08 95       	ret

0000210c <Forward>:
    210c:	df 93       	push	r29
    210e:	cf 93       	push	r28
    2110:	cd b7       	in	r28, 0x3d	; 61
    2112:	de b7       	in	r29, 0x3e	; 62
    2114:	a2 e2       	ldi	r26, 0x22	; 34
    2116:	b0 e0       	ldi	r27, 0x00	; 0
    2118:	e2 e2       	ldi	r30, 0x22	; 34
    211a:	f0 e0       	ldi	r31, 0x00	; 0
    211c:	80 81       	ld	r24, Z
    211e:	80 7f       	andi	r24, 0xF0	; 240
    2120:	86 60       	ori	r24, 0x06	; 6
    2122:	8c 93       	st	X, r24
    2124:	cf 91       	pop	r28
    2126:	df 91       	pop	r29
    2128:	08 95       	ret

0000212a <Reverse>:
    212a:	df 93       	push	r29
    212c:	cf 93       	push	r28
    212e:	cd b7       	in	r28, 0x3d	; 61
    2130:	de b7       	in	r29, 0x3e	; 62
    2132:	a2 e2       	ldi	r26, 0x22	; 34
    2134:	b0 e0       	ldi	r27, 0x00	; 0
    2136:	e2 e2       	ldi	r30, 0x22	; 34
    2138:	f0 e0       	ldi	r31, 0x00	; 0
    213a:	80 81       	ld	r24, Z
    213c:	80 7f       	andi	r24, 0xF0	; 240
    213e:	89 60       	ori	r24, 0x09	; 9
    2140:	8c 93       	st	X, r24
    2142:	cf 91       	pop	r28
    2144:	df 91       	pop	r29
    2146:	08 95       	ret

00002148 <Left_Turn>:
    2148:	df 93       	push	r29
    214a:	cf 93       	push	r28
    214c:	cd b7       	in	r28, 0x3d	; 61
    214e:	de b7       	in	r29, 0x3e	; 62
    2150:	a2 e2       	ldi	r26, 0x22	; 34
    2152:	b0 e0       	ldi	r27, 0x00	; 0
    2154:	e2 e2       	ldi	r30, 0x22	; 34
    2156:	f0 e0       	ldi	r31, 0x00	; 0
    2158:	80 81       	ld	r24, Z
    215a:	80 7f       	andi	r24, 0xF0	; 240
    215c:	85 60       	ori	r24, 0x05	; 5
    215e:	8c 93       	st	X, r24
    2160:	cf 91       	pop	r28
    2162:	df 91       	pop	r29
    2164:	08 95       	ret

00002166 <Right_Turn>:
    2166:	df 93       	push	r29
    2168:	cf 93       	push	r28
    216a:	cd b7       	in	r28, 0x3d	; 61
    216c:	de b7       	in	r29, 0x3e	; 62
    216e:	a2 e2       	ldi	r26, 0x22	; 34
    2170:	b0 e0       	ldi	r27, 0x00	; 0
    2172:	e2 e2       	ldi	r30, 0x22	; 34
    2174:	f0 e0       	ldi	r31, 0x00	; 0
    2176:	80 81       	ld	r24, Z
    2178:	80 7f       	andi	r24, 0xF0	; 240
    217a:	8a 60       	ori	r24, 0x0A	; 10
    217c:	8c 93       	st	X, r24
    217e:	cf 91       	pop	r28
    2180:	df 91       	pop	r29
    2182:	08 95       	ret

00002184 <Stop>:
    2184:	df 93       	push	r29
    2186:	cf 93       	push	r28
    2188:	cd b7       	in	r28, 0x3d	; 61
    218a:	de b7       	in	r29, 0x3e	; 62
    218c:	a2 e2       	ldi	r26, 0x22	; 34
    218e:	b0 e0       	ldi	r27, 0x00	; 0
    2190:	e2 e2       	ldi	r30, 0x22	; 34
    2192:	f0 e0       	ldi	r31, 0x00	; 0
    2194:	80 81       	ld	r24, Z
    2196:	80 7f       	andi	r24, 0xF0	; 240
    2198:	8c 93       	st	X, r24
    219a:	cf 91       	pop	r28
    219c:	df 91       	pop	r29
    219e:	08 95       	ret

000021a0 <motor_c1_forward>:
    21a0:	df 93       	push	r29
    21a2:	cf 93       	push	r28
    21a4:	cd b7       	in	r28, 0x3d	; 61
    21a6:	de b7       	in	r29, 0x3e	; 62
    21a8:	a2 e2       	ldi	r26, 0x22	; 34
    21aa:	b0 e0       	ldi	r27, 0x00	; 0
    21ac:	e2 e2       	ldi	r30, 0x22	; 34
    21ae:	f0 e0       	ldi	r31, 0x00	; 0
    21b0:	80 81       	ld	r24, Z
    21b2:	8f 7c       	andi	r24, 0xCF	; 207
    21b4:	80 62       	ori	r24, 0x20	; 32
    21b6:	8c 93       	st	X, r24
    21b8:	cf 91       	pop	r28
    21ba:	df 91       	pop	r29
    21bc:	08 95       	ret

000021be <motor_c1_backward>:
    21be:	df 93       	push	r29
    21c0:	cf 93       	push	r28
    21c2:	cd b7       	in	r28, 0x3d	; 61
    21c4:	de b7       	in	r29, 0x3e	; 62
    21c6:	a2 e2       	ldi	r26, 0x22	; 34
    21c8:	b0 e0       	ldi	r27, 0x00	; 0
    21ca:	e2 e2       	ldi	r30, 0x22	; 34
    21cc:	f0 e0       	ldi	r31, 0x00	; 0
    21ce:	80 81       	ld	r24, Z
    21d0:	8f 7c       	andi	r24, 0xCF	; 207
    21d2:	80 61       	ori	r24, 0x10	; 16
    21d4:	8c 93       	st	X, r24
    21d6:	cf 91       	pop	r28
    21d8:	df 91       	pop	r29
    21da:	08 95       	ret

000021dc <motor_c2_forward>:
    21dc:	df 93       	push	r29
    21de:	cf 93       	push	r28
    21e0:	cd b7       	in	r28, 0x3d	; 61
    21e2:	de b7       	in	r29, 0x3e	; 62
    21e4:	a2 e2       	ldi	r26, 0x22	; 34
    21e6:	b0 e0       	ldi	r27, 0x00	; 0
    21e8:	e2 e2       	ldi	r30, 0x22	; 34
    21ea:	f0 e0       	ldi	r31, 0x00	; 0
    21ec:	80 81       	ld	r24, Z
    21ee:	8f 73       	andi	r24, 0x3F	; 63
    21f0:	80 68       	ori	r24, 0x80	; 128
    21f2:	8c 93       	st	X, r24
    21f4:	cf 91       	pop	r28
    21f6:	df 91       	pop	r29
    21f8:	08 95       	ret

000021fa <motor_c2_backward>:
    21fa:	df 93       	push	r29
    21fc:	cf 93       	push	r28
    21fe:	cd b7       	in	r28, 0x3d	; 61
    2200:	de b7       	in	r29, 0x3e	; 62
    2202:	a2 e2       	ldi	r26, 0x22	; 34
    2204:	b0 e0       	ldi	r27, 0x00	; 0
    2206:	e2 e2       	ldi	r30, 0x22	; 34
    2208:	f0 e0       	ldi	r31, 0x00	; 0
    220a:	80 81       	ld	r24, Z
    220c:	8f 73       	andi	r24, 0x3F	; 63
    220e:	80 64       	ori	r24, 0x40	; 64
    2210:	8c 93       	st	X, r24
    2212:	cf 91       	pop	r28
    2214:	df 91       	pop	r29
    2216:	08 95       	ret

00002218 <motor_c1_stop>:
    2218:	df 93       	push	r29
    221a:	cf 93       	push	r28
    221c:	cd b7       	in	r28, 0x3d	; 61
    221e:	de b7       	in	r29, 0x3e	; 62
    2220:	a2 e2       	ldi	r26, 0x22	; 34
    2222:	b0 e0       	ldi	r27, 0x00	; 0
    2224:	e2 e2       	ldi	r30, 0x22	; 34
    2226:	f0 e0       	ldi	r31, 0x00	; 0
    2228:	80 81       	ld	r24, Z
    222a:	8f 7c       	andi	r24, 0xCF	; 207
    222c:	8c 93       	st	X, r24
    222e:	cf 91       	pop	r28
    2230:	df 91       	pop	r29
    2232:	08 95       	ret

00002234 <motor_c2_stop>:
    2234:	df 93       	push	r29
    2236:	cf 93       	push	r28
    2238:	cd b7       	in	r28, 0x3d	; 61
    223a:	de b7       	in	r29, 0x3e	; 62
    223c:	a2 e2       	ldi	r26, 0x22	; 34
    223e:	b0 e0       	ldi	r27, 0x00	; 0
    2240:	e2 e2       	ldi	r30, 0x22	; 34
    2242:	f0 e0       	ldi	r31, 0x00	; 0
    2244:	80 81       	ld	r24, Z
    2246:	8f 73       	andi	r24, 0x3F	; 63
    2248:	8c 93       	st	X, r24
    224a:	cf 91       	pop	r28
    224c:	df 91       	pop	r29
    224e:	08 95       	ret

00002250 <lcd_port_config>:
    2250:	df 93       	push	r29
    2252:	cf 93       	push	r28
    2254:	cd b7       	in	r28, 0x3d	; 61
    2256:	de b7       	in	r29, 0x3e	; 62
    2258:	a7 e2       	ldi	r26, 0x27	; 39
    225a:	b0 e0       	ldi	r27, 0x00	; 0
    225c:	e7 e2       	ldi	r30, 0x27	; 39
    225e:	f0 e0       	ldi	r31, 0x00	; 0
    2260:	80 81       	ld	r24, Z
    2262:	87 6f       	ori	r24, 0xF7	; 247
    2264:	8c 93       	st	X, r24
    2266:	a8 e2       	ldi	r26, 0x28	; 40
    2268:	b0 e0       	ldi	r27, 0x00	; 0
    226a:	e8 e2       	ldi	r30, 0x28	; 40
    226c:	f0 e0       	ldi	r31, 0x00	; 0
    226e:	80 81       	ld	r24, Z
    2270:	80 78       	andi	r24, 0x80	; 128
    2272:	8c 93       	st	X, r24
    2274:	cf 91       	pop	r28
    2276:	df 91       	pop	r29
    2278:	08 95       	ret

0000227a <adc_pin_config>:
    227a:	df 93       	push	r29
    227c:	cf 93       	push	r28
    227e:	cd b7       	in	r28, 0x3d	; 61
    2280:	de b7       	in	r29, 0x3e	; 62
    2282:	e0 e3       	ldi	r30, 0x30	; 48
    2284:	f0 e0       	ldi	r31, 0x00	; 0
    2286:	10 82       	st	Z, r1
    2288:	e1 e3       	ldi	r30, 0x31	; 49
    228a:	f0 e0       	ldi	r31, 0x00	; 0
    228c:	10 82       	st	Z, r1
    228e:	e7 e0       	ldi	r30, 0x07	; 7
    2290:	f1 e0       	ldi	r31, 0x01	; 1
    2292:	10 82       	st	Z, r1
    2294:	e8 e0       	ldi	r30, 0x08	; 8
    2296:	f1 e0       	ldi	r31, 0x01	; 1
    2298:	10 82       	st	Z, r1
    229a:	cf 91       	pop	r28
    229c:	df 91       	pop	r29
    229e:	08 95       	ret

000022a0 <adc_init>:
    22a0:	df 93       	push	r29
    22a2:	cf 93       	push	r28
    22a4:	cd b7       	in	r28, 0x3d	; 61
    22a6:	de b7       	in	r29, 0x3e	; 62
    22a8:	ea e7       	ldi	r30, 0x7A	; 122
    22aa:	f0 e0       	ldi	r31, 0x00	; 0
    22ac:	10 82       	st	Z, r1
    22ae:	eb e7       	ldi	r30, 0x7B	; 123
    22b0:	f0 e0       	ldi	r31, 0x00	; 0
    22b2:	10 82       	st	Z, r1
    22b4:	ec e7       	ldi	r30, 0x7C	; 124
    22b6:	f0 e0       	ldi	r31, 0x00	; 0
    22b8:	80 e2       	ldi	r24, 0x20	; 32
    22ba:	80 83       	st	Z, r24
    22bc:	e0 e5       	ldi	r30, 0x50	; 80
    22be:	f0 e0       	ldi	r31, 0x00	; 0
    22c0:	80 e8       	ldi	r24, 0x80	; 128
    22c2:	80 83       	st	Z, r24
    22c4:	ea e7       	ldi	r30, 0x7A	; 122
    22c6:	f0 e0       	ldi	r31, 0x00	; 0
    22c8:	86 e8       	ldi	r24, 0x86	; 134
    22ca:	80 83       	st	Z, r24
    22cc:	cf 91       	pop	r28
    22ce:	df 91       	pop	r29
    22d0:	08 95       	ret

000022d2 <ADC_Conversion>:
    22d2:	df 93       	push	r29
    22d4:	cf 93       	push	r28
    22d6:	0f 92       	push	r0
    22d8:	0f 92       	push	r0
    22da:	cd b7       	in	r28, 0x3d	; 61
    22dc:	de b7       	in	r29, 0x3e	; 62
    22de:	8a 83       	std	Y+2, r24	; 0x02
    22e0:	8a 81       	ldd	r24, Y+2	; 0x02
    22e2:	88 30       	cpi	r24, 0x08	; 8
    22e4:	20 f0       	brcs	.+8      	; 0x22ee <ADC_Conversion+0x1c>
    22e6:	eb e7       	ldi	r30, 0x7B	; 123
    22e8:	f0 e0       	ldi	r31, 0x00	; 0
    22ea:	88 e0       	ldi	r24, 0x08	; 8
    22ec:	80 83       	st	Z, r24
    22ee:	8a 81       	ldd	r24, Y+2	; 0x02
    22f0:	87 70       	andi	r24, 0x07	; 7
    22f2:	8a 83       	std	Y+2, r24	; 0x02
    22f4:	ec e7       	ldi	r30, 0x7C	; 124
    22f6:	f0 e0       	ldi	r31, 0x00	; 0
    22f8:	8a 81       	ldd	r24, Y+2	; 0x02
    22fa:	80 62       	ori	r24, 0x20	; 32
    22fc:	80 83       	st	Z, r24
    22fe:	aa e7       	ldi	r26, 0x7A	; 122
    2300:	b0 e0       	ldi	r27, 0x00	; 0
    2302:	ea e7       	ldi	r30, 0x7A	; 122
    2304:	f0 e0       	ldi	r31, 0x00	; 0
    2306:	80 81       	ld	r24, Z
    2308:	80 64       	ori	r24, 0x40	; 64
    230a:	8c 93       	st	X, r24
    230c:	ea e7       	ldi	r30, 0x7A	; 122
    230e:	f0 e0       	ldi	r31, 0x00	; 0
    2310:	80 81       	ld	r24, Z
    2312:	88 2f       	mov	r24, r24
    2314:	90 e0       	ldi	r25, 0x00	; 0
    2316:	80 71       	andi	r24, 0x10	; 16
    2318:	90 70       	andi	r25, 0x00	; 0
    231a:	00 97       	sbiw	r24, 0x00	; 0
    231c:	b9 f3       	breq	.-18     	; 0x230c <ADC_Conversion+0x3a>
    231e:	e9 e7       	ldi	r30, 0x79	; 121
    2320:	f0 e0       	ldi	r31, 0x00	; 0
    2322:	80 81       	ld	r24, Z
    2324:	89 83       	std	Y+1, r24	; 0x01
    2326:	aa e7       	ldi	r26, 0x7A	; 122
    2328:	b0 e0       	ldi	r27, 0x00	; 0
    232a:	ea e7       	ldi	r30, 0x7A	; 122
    232c:	f0 e0       	ldi	r31, 0x00	; 0
    232e:	80 81       	ld	r24, Z
    2330:	80 61       	ori	r24, 0x10	; 16
    2332:	8c 93       	st	X, r24
    2334:	eb e7       	ldi	r30, 0x7B	; 123
    2336:	f0 e0       	ldi	r31, 0x00	; 0
    2338:	10 82       	st	Z, r1
    233a:	89 81       	ldd	r24, Y+1	; 0x01
    233c:	0f 90       	pop	r0
    233e:	0f 90       	pop	r0
    2340:	cf 91       	pop	r28
    2342:	df 91       	pop	r29
    2344:	08 95       	ret

00002346 <print_sensor>:
    2346:	df 93       	push	r29
    2348:	cf 93       	push	r28
    234a:	00 d0       	rcall	.+0      	; 0x234c <print_sensor+0x6>
    234c:	cd b7       	in	r28, 0x3d	; 61
    234e:	de b7       	in	r29, 0x3e	; 62
    2350:	89 83       	std	Y+1, r24	; 0x01
    2352:	6a 83       	std	Y+2, r22	; 0x02
    2354:	4b 83       	std	Y+3, r20	; 0x03
    2356:	8b 81       	ldd	r24, Y+3	; 0x03
    2358:	0e 94 69 11 	call	0x22d2	; 0x22d2 <ADC_Conversion>
    235c:	80 93 49 05 	sts	0x0549, r24
    2360:	81 e0       	ldi	r24, 0x01	; 1
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	0e 94 13 0c 	call	0x1826	; 0x1826 <LCD_WR_Command>
    2368:	81 e0       	ldi	r24, 0x01	; 1
    236a:	90 e0       	ldi	r25, 0x00	; 0
    236c:	61 e0       	ldi	r22, 0x01	; 1
    236e:	70 e0       	ldi	r23, 0x00	; 0
    2370:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <LCD_Cursor>
    2374:	80 91 49 05 	lds	r24, 0x0549
    2378:	88 2f       	mov	r24, r24
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <LCD_String>
    2380:	0f 90       	pop	r0
    2382:	0f 90       	pop	r0
    2384:	0f 90       	pop	r0
    2386:	cf 91       	pop	r28
    2388:	df 91       	pop	r29
    238a:	08 95       	ret

0000238c <motion_set>:
    238c:	df 93       	push	r29
    238e:	cf 93       	push	r28
    2390:	0f 92       	push	r0
    2392:	0f 92       	push	r0
    2394:	cd b7       	in	r28, 0x3d	; 61
    2396:	de b7       	in	r29, 0x3e	; 62
    2398:	8a 83       	std	Y+2, r24	; 0x02
    239a:	19 82       	std	Y+1, r1	; 0x01
    239c:	8a 81       	ldd	r24, Y+2	; 0x02
    239e:	8f 70       	andi	r24, 0x0F	; 15
    23a0:	8a 83       	std	Y+2, r24	; 0x02
    23a2:	e2 e2       	ldi	r30, 0x22	; 34
    23a4:	f0 e0       	ldi	r31, 0x00	; 0
    23a6:	80 81       	ld	r24, Z
    23a8:	89 83       	std	Y+1, r24	; 0x01
    23aa:	89 81       	ldd	r24, Y+1	; 0x01
    23ac:	80 7f       	andi	r24, 0xF0	; 240
    23ae:	89 83       	std	Y+1, r24	; 0x01
    23b0:	99 81       	ldd	r25, Y+1	; 0x01
    23b2:	8a 81       	ldd	r24, Y+2	; 0x02
    23b4:	89 2b       	or	r24, r25
    23b6:	89 83       	std	Y+1, r24	; 0x01
    23b8:	e2 e2       	ldi	r30, 0x22	; 34
    23ba:	f0 e0       	ldi	r31, 0x00	; 0
    23bc:	89 81       	ldd	r24, Y+1	; 0x01
    23be:	80 83       	st	Z, r24
    23c0:	0f 90       	pop	r0
    23c2:	0f 90       	pop	r0
    23c4:	cf 91       	pop	r28
    23c6:	df 91       	pop	r29
    23c8:	08 95       	ret

000023ca <forward>:
    23ca:	df 93       	push	r29
    23cc:	cf 93       	push	r28
    23ce:	cd b7       	in	r28, 0x3d	; 61
    23d0:	de b7       	in	r29, 0x3e	; 62
    23d2:	86 e0       	ldi	r24, 0x06	; 6
    23d4:	0e 94 c6 11 	call	0x238c	; 0x238c <motion_set>
    23d8:	cf 91       	pop	r28
    23da:	df 91       	pop	r29
    23dc:	08 95       	ret

000023de <stop>:
    23de:	df 93       	push	r29
    23e0:	cf 93       	push	r28
    23e2:	cd b7       	in	r28, 0x3d	; 61
    23e4:	de b7       	in	r29, 0x3e	; 62
    23e6:	80 e0       	ldi	r24, 0x00	; 0
    23e8:	0e 94 c6 11 	call	0x238c	; 0x238c <motion_set>
    23ec:	cf 91       	pop	r28
    23ee:	df 91       	pop	r29
    23f0:	08 95       	ret

000023f2 <left>:
    23f2:	df 93       	push	r29
    23f4:	cf 93       	push	r28
    23f6:	cd b7       	in	r28, 0x3d	; 61
    23f8:	de b7       	in	r29, 0x3e	; 62
    23fa:	85 e0       	ldi	r24, 0x05	; 5
    23fc:	0e 94 c6 11 	call	0x238c	; 0x238c <motion_set>
    2400:	cf 91       	pop	r28
    2402:	df 91       	pop	r29
    2404:	08 95       	ret

00002406 <right>:
    2406:	df 93       	push	r29
    2408:	cf 93       	push	r28
    240a:	cd b7       	in	r28, 0x3d	; 61
    240c:	de b7       	in	r29, 0x3e	; 62
    240e:	8a e0       	ldi	r24, 0x0A	; 10
    2410:	0e 94 c6 11 	call	0x238c	; 0x238c <motion_set>
    2414:	cf 91       	pop	r28
    2416:	df 91       	pop	r29
    2418:	08 95       	ret

0000241a <move_bot>:
    241a:	df 93       	push	r29
    241c:	cf 93       	push	r28
    241e:	00 d0       	rcall	.+0      	; 0x2420 <move_bot+0x6>
    2420:	0f 92       	push	r0
    2422:	cd b7       	in	r28, 0x3d	; 61
    2424:	de b7       	in	r29, 0x3e	; 62
    2426:	83 e0       	ldi	r24, 0x03	; 3
    2428:	0e 94 69 11 	call	0x22d2	; 0x22d2 <ADC_Conversion>
    242c:	80 93 e3 03 	sts	0x03E3, r24
    2430:	82 e0       	ldi	r24, 0x02	; 2
    2432:	0e 94 69 11 	call	0x22d2	; 0x22d2 <ADC_Conversion>
    2436:	80 93 e4 03 	sts	0x03E4, r24
    243a:	81 e0       	ldi	r24, 0x01	; 1
    243c:	0e 94 69 11 	call	0x22d2	; 0x22d2 <ADC_Conversion>
    2440:	80 93 e5 03 	sts	0x03E5, r24
    2444:	10 92 e2 03 	sts	0x03E2, r1
    2448:	81 e0       	ldi	r24, 0x01	; 1
    244a:	61 e0       	ldi	r22, 0x01	; 1
    244c:	43 e0       	ldi	r20, 0x03	; 3
    244e:	0e 94 a3 11 	call	0x2346	; 0x2346 <print_sensor>
    2452:	81 e0       	ldi	r24, 0x01	; 1
    2454:	65 e0       	ldi	r22, 0x05	; 5
    2456:	42 e0       	ldi	r20, 0x02	; 2
    2458:	0e 94 a3 11 	call	0x2346	; 0x2346 <print_sensor>
    245c:	81 e0       	ldi	r24, 0x01	; 1
    245e:	69 e0       	ldi	r22, 0x09	; 9
    2460:	41 e0       	ldi	r20, 0x01	; 1
    2462:	0e 94 a3 11 	call	0x2346	; 0x2346 <print_sensor>
    2466:	80 91 e4 03 	lds	r24, 0x03E4
    246a:	89 32       	cpi	r24, 0x29	; 41
    246c:	60 f0       	brcs	.+24     	; 0x2486 <move_bot+0x6c>
    246e:	81 e0       	ldi	r24, 0x01	; 1
    2470:	80 93 e2 03 	sts	0x03E2, r24
    2474:	0e 94 e5 11 	call	0x23ca	; 0x23ca <forward>
    2478:	8a ef       	ldi	r24, 0xFA	; 250
    247a:	6a ef       	ldi	r22, 0xFA	; 250
    247c:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
    2480:	1a 82       	std	Y+2, r1	; 0x02
    2482:	19 82       	std	Y+1, r1	; 0x01
    2484:	51 c0       	rjmp	.+162    	; 0x2528 <move_bot+0x10e>
    2486:	80 91 e3 03 	lds	r24, 0x03E3
    248a:	88 32       	cpi	r24, 0x28	; 40
    248c:	80 f4       	brcc	.+32     	; 0x24ae <move_bot+0x94>
    248e:	80 91 e2 03 	lds	r24, 0x03E2
    2492:	88 23       	and	r24, r24
    2494:	61 f4       	brne	.+24     	; 0x24ae <move_bot+0x94>
    2496:	81 e0       	ldi	r24, 0x01	; 1
    2498:	80 93 e2 03 	sts	0x03E2, r24
    249c:	0e 94 e5 11 	call	0x23ca	; 0x23ca <forward>
    24a0:	80 ed       	ldi	r24, 0xD0	; 208
    24a2:	60 e5       	ldi	r22, 0x50	; 80
    24a4:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
    24a8:	1a 82       	std	Y+2, r1	; 0x02
    24aa:	19 82       	std	Y+1, r1	; 0x01
    24ac:	3d c0       	rjmp	.+122    	; 0x2528 <move_bot+0x10e>
    24ae:	80 91 e5 03 	lds	r24, 0x03E5
    24b2:	88 32       	cpi	r24, 0x28	; 40
    24b4:	80 f4       	brcc	.+32     	; 0x24d6 <move_bot+0xbc>
    24b6:	80 91 e2 03 	lds	r24, 0x03E2
    24ba:	88 23       	and	r24, r24
    24bc:	61 f4       	brne	.+24     	; 0x24d6 <move_bot+0xbc>
    24be:	81 e0       	ldi	r24, 0x01	; 1
    24c0:	80 93 e2 03 	sts	0x03E2, r24
    24c4:	0e 94 e5 11 	call	0x23ca	; 0x23ca <forward>
    24c8:	80 e5       	ldi	r24, 0x50	; 80
    24ca:	60 ed       	ldi	r22, 0xD0	; 208
    24cc:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
    24d0:	1a 82       	std	Y+2, r1	; 0x02
    24d2:	19 82       	std	Y+1, r1	; 0x01
    24d4:	29 c0       	rjmp	.+82     	; 0x2528 <move_bot+0x10e>
    24d6:	80 91 e4 03 	lds	r24, 0x03E4
    24da:	88 32       	cpi	r24, 0x28	; 40
    24dc:	88 f4       	brcc	.+34     	; 0x2500 <move_bot+0xe6>
    24de:	80 91 e3 03 	lds	r24, 0x03E3
    24e2:	88 32       	cpi	r24, 0x28	; 40
    24e4:	68 f4       	brcc	.+26     	; 0x2500 <move_bot+0xe6>
    24e6:	80 91 e5 03 	lds	r24, 0x03E5
    24ea:	88 32       	cpi	r24, 0x28	; 40
    24ec:	48 f4       	brcc	.+18     	; 0x2500 <move_bot+0xe6>
    24ee:	0e 94 e5 11 	call	0x23ca	; 0x23ca <forward>
    24f2:	8a ef       	ldi	r24, 0xFA	; 250
    24f4:	6a ef       	ldi	r22, 0xFA	; 250
    24f6:	0e 94 6d 10 	call	0x20da	; 0x20da <velocity>
    24fa:	1a 82       	std	Y+2, r1	; 0x02
    24fc:	19 82       	std	Y+1, r1	; 0x01
    24fe:	14 c0       	rjmp	.+40     	; 0x2528 <move_bot+0x10e>
    2500:	80 91 e4 03 	lds	r24, 0x03E4
    2504:	89 32       	cpi	r24, 0x29	; 41
    2506:	78 f0       	brcs	.+30     	; 0x2526 <move_bot+0x10c>
    2508:	80 91 e3 03 	lds	r24, 0x03E3
    250c:	89 32       	cpi	r24, 0x29	; 41
    250e:	20 f4       	brcc	.+8      	; 0x2518 <move_bot+0xfe>
    2510:	80 91 e5 03 	lds	r24, 0x03E5
    2514:	89 32       	cpi	r24, 0x29	; 41
    2516:	38 f0       	brcs	.+14     	; 0x2526 <move_bot+0x10c>
    2518:	0e 94 ef 11 	call	0x23de	; 0x23de <stop>
    251c:	81 e0       	ldi	r24, 0x01	; 1
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	9a 83       	std	Y+2, r25	; 0x02
    2522:	89 83       	std	Y+1, r24	; 0x01
    2524:	01 c0       	rjmp	.+2      	; 0x2528 <move_bot+0x10e>
    2526:	04 c0       	rjmp	.+8      	; 0x2530 <move_bot+0x116>
    2528:	89 81       	ldd	r24, Y+1	; 0x01
    252a:	9a 81       	ldd	r25, Y+2	; 0x02
    252c:	9c 83       	std	Y+4, r25	; 0x04
    252e:	8b 83       	std	Y+3, r24	; 0x03
    2530:	8b 81       	ldd	r24, Y+3	; 0x03
    2532:	9c 81       	ldd	r25, Y+4	; 0x04
    2534:	0f 90       	pop	r0
    2536:	0f 90       	pop	r0
    2538:	0f 90       	pop	r0
    253a:	0f 90       	pop	r0
    253c:	cf 91       	pop	r28
    253e:	df 91       	pop	r29
    2540:	08 95       	ret

00002542 <__vector_6>:
    2542:	1f 92       	push	r1
    2544:	0f 92       	push	r0
    2546:	0f b6       	in	r0, 0x3f	; 63
    2548:	0f 92       	push	r0
    254a:	11 24       	eor	r1, r1
    254c:	8f 93       	push	r24
    254e:	9f 93       	push	r25
    2550:	df 93       	push	r29
    2552:	cf 93       	push	r28
    2554:	cd b7       	in	r28, 0x3d	; 61
    2556:	de b7       	in	r29, 0x3e	; 62
    2558:	80 91 e6 03 	lds	r24, 0x03E6
    255c:	90 91 e7 03 	lds	r25, 0x03E7
    2560:	01 96       	adiw	r24, 0x01	; 1
    2562:	90 93 e7 03 	sts	0x03E7, r25
    2566:	80 93 e6 03 	sts	0x03E6, r24
    256a:	cf 91       	pop	r28
    256c:	df 91       	pop	r29
    256e:	9f 91       	pop	r25
    2570:	8f 91       	pop	r24
    2572:	0f 90       	pop	r0
    2574:	0f be       	out	0x3f, r0	; 63
    2576:	0f 90       	pop	r0
    2578:	1f 90       	pop	r1
    257a:	18 95       	reti

0000257c <__vector_5>:
    257c:	1f 92       	push	r1
    257e:	0f 92       	push	r0
    2580:	0f b6       	in	r0, 0x3f	; 63
    2582:	0f 92       	push	r0
    2584:	11 24       	eor	r1, r1
    2586:	8f 93       	push	r24
    2588:	9f 93       	push	r25
    258a:	df 93       	push	r29
    258c:	cf 93       	push	r28
    258e:	cd b7       	in	r28, 0x3d	; 61
    2590:	de b7       	in	r29, 0x3e	; 62
    2592:	80 91 e8 03 	lds	r24, 0x03E8
    2596:	90 91 e9 03 	lds	r25, 0x03E9
    259a:	01 96       	adiw	r24, 0x01	; 1
    259c:	90 93 e9 03 	sts	0x03E9, r25
    25a0:	80 93 e8 03 	sts	0x03E8, r24
    25a4:	cf 91       	pop	r28
    25a6:	df 91       	pop	r29
    25a8:	9f 91       	pop	r25
    25aa:	8f 91       	pop	r24
    25ac:	0f 90       	pop	r0
    25ae:	0f be       	out	0x3f, r0	; 63
    25b0:	0f 90       	pop	r0
    25b2:	1f 90       	pop	r1
    25b4:	18 95       	reti

000025b6 <interrupt_left_init>:
    25b6:	df 93       	push	r29
    25b8:	cf 93       	push	r28
    25ba:	cd b7       	in	r28, 0x3d	; 61
    25bc:	de b7       	in	r29, 0x3e	; 62
    25be:	ad e2       	ldi	r26, 0x2D	; 45
    25c0:	b0 e0       	ldi	r27, 0x00	; 0
    25c2:	ed e2       	ldi	r30, 0x2D	; 45
    25c4:	f0 e0       	ldi	r31, 0x00	; 0
    25c6:	80 81       	ld	r24, Z
    25c8:	8f 7e       	andi	r24, 0xEF	; 239
    25ca:	8c 93       	st	X, r24
    25cc:	ae e2       	ldi	r26, 0x2E	; 46
    25ce:	b0 e0       	ldi	r27, 0x00	; 0
    25d0:	ee e2       	ldi	r30, 0x2E	; 46
    25d2:	f0 e0       	ldi	r31, 0x00	; 0
    25d4:	80 81       	ld	r24, Z
    25d6:	80 61       	ori	r24, 0x10	; 16
    25d8:	8c 93       	st	X, r24
    25da:	cf 91       	pop	r28
    25dc:	df 91       	pop	r29
    25de:	08 95       	ret

000025e0 <interrupt_right_init>:
    25e0:	df 93       	push	r29
    25e2:	cf 93       	push	r28
    25e4:	cd b7       	in	r28, 0x3d	; 61
    25e6:	de b7       	in	r29, 0x3e	; 62
    25e8:	ad e2       	ldi	r26, 0x2D	; 45
    25ea:	b0 e0       	ldi	r27, 0x00	; 0
    25ec:	ed e2       	ldi	r30, 0x2D	; 45
    25ee:	f0 e0       	ldi	r31, 0x00	; 0
    25f0:	80 81       	ld	r24, Z
    25f2:	8f 7d       	andi	r24, 0xDF	; 223
    25f4:	8c 93       	st	X, r24
    25f6:	ae e2       	ldi	r26, 0x2E	; 46
    25f8:	b0 e0       	ldi	r27, 0x00	; 0
    25fa:	ee e2       	ldi	r30, 0x2E	; 46
    25fc:	f0 e0       	ldi	r31, 0x00	; 0
    25fe:	80 81       	ld	r24, Z
    2600:	80 62       	ori	r24, 0x20	; 32
    2602:	8c 93       	st	X, r24
    2604:	cf 91       	pop	r28
    2606:	df 91       	pop	r29
    2608:	08 95       	ret

0000260a <left_position_encoder_init>:
    260a:	df 93       	push	r29
    260c:	cf 93       	push	r28
    260e:	cd b7       	in	r28, 0x3d	; 61
    2610:	de b7       	in	r29, 0x3e	; 62
    2612:	f8 94       	cli
    2614:	aa e6       	ldi	r26, 0x6A	; 106
    2616:	b0 e0       	ldi	r27, 0x00	; 0
    2618:	ea e6       	ldi	r30, 0x6A	; 106
    261a:	f0 e0       	ldi	r31, 0x00	; 0
    261c:	80 81       	ld	r24, Z
    261e:	82 60       	ori	r24, 0x02	; 2
    2620:	8c 93       	st	X, r24
    2622:	ad e3       	ldi	r26, 0x3D	; 61
    2624:	b0 e0       	ldi	r27, 0x00	; 0
    2626:	ed e3       	ldi	r30, 0x3D	; 61
    2628:	f0 e0       	ldi	r31, 0x00	; 0
    262a:	80 81       	ld	r24, Z
    262c:	80 61       	ori	r24, 0x10	; 16
    262e:	8c 93       	st	X, r24
    2630:	78 94       	sei
    2632:	cf 91       	pop	r28
    2634:	df 91       	pop	r29
    2636:	08 95       	ret

00002638 <right_position_encoder_init>:
    2638:	df 93       	push	r29
    263a:	cf 93       	push	r28
    263c:	cd b7       	in	r28, 0x3d	; 61
    263e:	de b7       	in	r29, 0x3e	; 62
    2640:	f8 94       	cli
    2642:	aa e6       	ldi	r26, 0x6A	; 106
    2644:	b0 e0       	ldi	r27, 0x00	; 0
    2646:	ea e6       	ldi	r30, 0x6A	; 106
    2648:	f0 e0       	ldi	r31, 0x00	; 0
    264a:	80 81       	ld	r24, Z
    264c:	88 60       	ori	r24, 0x08	; 8
    264e:	8c 93       	st	X, r24
    2650:	ad e3       	ldi	r26, 0x3D	; 61
    2652:	b0 e0       	ldi	r27, 0x00	; 0
    2654:	ed e3       	ldi	r30, 0x3D	; 61
    2656:	f0 e0       	ldi	r31, 0x00	; 0
    2658:	80 81       	ld	r24, Z
    265a:	80 62       	ori	r24, 0x20	; 32
    265c:	8c 93       	st	X, r24
    265e:	78 94       	sei
    2660:	cf 91       	pop	r28
    2662:	df 91       	pop	r29
    2664:	08 95       	ret

00002666 <distance_move>:
    2666:	df 93       	push	r29
    2668:	cf 93       	push	r28
    266a:	00 d0       	rcall	.+0      	; 0x266c <distance_move+0x6>
    266c:	00 d0       	rcall	.+0      	; 0x266e <distance_move+0x8>
    266e:	cd b7       	in	r28, 0x3d	; 61
    2670:	de b7       	in	r29, 0x3e	; 62
    2672:	9c 83       	std	Y+4, r25	; 0x04
    2674:	8b 83       	std	Y+3, r24	; 0x03
    2676:	7e 83       	std	Y+6, r23	; 0x06
    2678:	6d 83       	std	Y+5, r22	; 0x05
    267a:	10 92 e7 03 	sts	0x03E7, r1
    267e:	10 92 e6 03 	sts	0x03E6, r1
    2682:	8b 81       	ldd	r24, Y+3	; 0x03
    2684:	9c 81       	ldd	r25, Y+4	; 0x04
    2686:	aa 27       	eor	r26, r26
    2688:	97 fd       	sbrc	r25, 7
    268a:	a0 95       	com	r26
    268c:	ba 2f       	mov	r27, r26
    268e:	bc 01       	movw	r22, r24
    2690:	cd 01       	movw	r24, r26
    2692:	0e 94 2c 1a 	call	0x3458	; 0x3458 <__floatsisf>
    2696:	dc 01       	movw	r26, r24
    2698:	cb 01       	movw	r24, r22
    269a:	bc 01       	movw	r22, r24
    269c:	cd 01       	movw	r24, r26
    269e:	2b e7       	ldi	r18, 0x7B	; 123
    26a0:	34 e1       	ldi	r19, 0x14	; 20
    26a2:	4e ea       	ldi	r20, 0xAE	; 174
    26a4:	50 e4       	ldi	r21, 0x40	; 64
    26a6:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divsf3>
    26aa:	dc 01       	movw	r26, r24
    26ac:	cb 01       	movw	r24, r22
    26ae:	bc 01       	movw	r22, r24
    26b0:	cd 01       	movw	r24, r26
    26b2:	0e 94 8a 1a 	call	0x3514	; 0x3514 <__fixsfsi>
    26b6:	dc 01       	movw	r26, r24
    26b8:	cb 01       	movw	r24, r22
    26ba:	9a 83       	std	Y+2, r25	; 0x02
    26bc:	89 83       	std	Y+1, r24	; 0x01
    26be:	20 91 e6 03 	lds	r18, 0x03E6
    26c2:	30 91 e7 03 	lds	r19, 0x03E7
    26c6:	89 81       	ldd	r24, Y+1	; 0x01
    26c8:	9a 81       	ldd	r25, Y+2	; 0x02
    26ca:	28 17       	cp	r18, r24
    26cc:	39 07       	cpc	r19, r25
    26ce:	5c f0       	brlt	.+22     	; 0x26e6 <distance_move+0x80>
    26d0:	0e 94 ef 11 	call	0x23de	; 0x23de <stop>
    26d4:	26 96       	adiw	r28, 0x06	; 6
    26d6:	0f b6       	in	r0, 0x3f	; 63
    26d8:	f8 94       	cli
    26da:	de bf       	out	0x3e, r29	; 62
    26dc:	0f be       	out	0x3f, r0	; 63
    26de:	cd bf       	out	0x3d, r28	; 61
    26e0:	cf 91       	pop	r28
    26e2:	df 91       	pop	r29
    26e4:	08 95       	ret
    26e6:	8d 81       	ldd	r24, Y+5	; 0x05
    26e8:	9e 81       	ldd	r25, Y+6	; 0x06
    26ea:	00 97       	sbiw	r24, 0x00	; 0
    26ec:	19 f0       	breq	.+6      	; 0x26f4 <distance_move+0x8e>
    26ee:	0e 94 0d 12 	call	0x241a	; 0x241a <move_bot>
    26f2:	e5 cf       	rjmp	.-54     	; 0x26be <distance_move+0x58>
    26f4:	0e 94 e5 11 	call	0x23ca	; 0x23ca <forward>
    26f8:	e2 cf       	rjmp	.-60     	; 0x26be <distance_move+0x58>

000026fa <angle_rotate>:
    26fa:	df 93       	push	r29
    26fc:	cf 93       	push	r28
    26fe:	cd b7       	in	r28, 0x3d	; 61
    2700:	de b7       	in	r29, 0x3e	; 62
    2702:	2c 97       	sbiw	r28, 0x0c	; 12
    2704:	0f b6       	in	r0, 0x3f	; 63
    2706:	f8 94       	cli
    2708:	de bf       	out	0x3e, r29	; 62
    270a:	0f be       	out	0x3f, r0	; 63
    270c:	cd bf       	out	0x3d, r28	; 61
    270e:	9a 87       	std	Y+10, r25	; 0x0a
    2710:	89 87       	std	Y+9, r24	; 0x09
    2712:	10 92 e9 03 	sts	0x03E9, r1
    2716:	10 92 e8 03 	sts	0x03E8, r1
    271a:	80 91 e8 03 	lds	r24, 0x03E8
    271e:	90 91 e9 03 	lds	r25, 0x03E9
    2722:	90 93 e7 03 	sts	0x03E7, r25
    2726:	80 93 e6 03 	sts	0x03E6, r24
    272a:	80 e0       	ldi	r24, 0x00	; 0
    272c:	90 e0       	ldi	r25, 0x00	; 0
    272e:	a0 e0       	ldi	r26, 0x00	; 0
    2730:	b0 e0       	ldi	r27, 0x00	; 0
    2732:	8d 83       	std	Y+5, r24	; 0x05
    2734:	9e 83       	std	Y+6, r25	; 0x06
    2736:	af 83       	std	Y+7, r26	; 0x07
    2738:	b8 87       	std	Y+8, r27	; 0x08
    273a:	19 82       	std	Y+1, r1	; 0x01
    273c:	1a 82       	std	Y+2, r1	; 0x02
    273e:	1b 82       	std	Y+3, r1	; 0x03
    2740:	1c 82       	std	Y+4, r1	; 0x04
    2742:	89 85       	ldd	r24, Y+9	; 0x09
    2744:	9a 85       	ldd	r25, Y+10	; 0x0a
    2746:	cc 01       	movw	r24, r24
    2748:	a0 e0       	ldi	r26, 0x00	; 0
    274a:	b0 e0       	ldi	r27, 0x00	; 0
    274c:	bc 01       	movw	r22, r24
    274e:	cd 01       	movw	r24, r26
    2750:	0e 94 de 1a 	call	0x35bc	; 0x35bc <__floatunsisf>
    2754:	dc 01       	movw	r26, r24
    2756:	cb 01       	movw	r24, r22
    2758:	bc 01       	movw	r22, r24
    275a:	cd 01       	movw	r24, r26
    275c:	28 e4       	ldi	r18, 0x48	; 72
    275e:	31 ee       	ldi	r19, 0xE1	; 225
    2760:	42 e8       	ldi	r20, 0x82	; 130
    2762:	50 e4       	ldi	r21, 0x40	; 64
    2764:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <__divsf3>
    2768:	dc 01       	movw	r26, r24
    276a:	cb 01       	movw	r24, r22
    276c:	8d 83       	std	Y+5, r24	; 0x05
    276e:	9e 83       	std	Y+6, r25	; 0x06
    2770:	af 83       	std	Y+7, r26	; 0x07
    2772:	b8 87       	std	Y+8, r27	; 0x08
    2774:	6d 81       	ldd	r22, Y+5	; 0x05
    2776:	7e 81       	ldd	r23, Y+6	; 0x06
    2778:	8f 81       	ldd	r24, Y+7	; 0x07
    277a:	98 85       	ldd	r25, Y+8	; 0x08
    277c:	0e 94 20 16 	call	0x2c40	; 0x2c40 <__fixunssfsi>
    2780:	dc 01       	movw	r26, r24
    2782:	cb 01       	movw	r24, r22
    2784:	cc 01       	movw	r24, r24
    2786:	a0 e0       	ldi	r26, 0x00	; 0
    2788:	b0 e0       	ldi	r27, 0x00	; 0
    278a:	89 83       	std	Y+1, r24	; 0x01
    278c:	9a 83       	std	Y+2, r25	; 0x02
    278e:	ab 83       	std	Y+3, r26	; 0x03
    2790:	bc 83       	std	Y+4, r27	; 0x04
    2792:	80 91 e6 03 	lds	r24, 0x03E6
    2796:	90 91 e7 03 	lds	r25, 0x03E7
    279a:	9c 01       	movw	r18, r24
    279c:	44 27       	eor	r20, r20
    279e:	37 fd       	sbrc	r19, 7
    27a0:	40 95       	com	r20
    27a2:	54 2f       	mov	r21, r20
    27a4:	1c 86       	std	Y+12, r1	; 0x0c
    27a6:	89 81       	ldd	r24, Y+1	; 0x01
    27a8:	9a 81       	ldd	r25, Y+2	; 0x02
    27aa:	ab 81       	ldd	r26, Y+3	; 0x03
    27ac:	bc 81       	ldd	r27, Y+4	; 0x04
    27ae:	28 17       	cp	r18, r24
    27b0:	39 07       	cpc	r19, r25
    27b2:	4a 07       	cpc	r20, r26
    27b4:	5b 07       	cpc	r21, r27
    27b6:	10 f0       	brcs	.+4      	; 0x27bc <angle_rotate+0xc2>
    27b8:	81 e0       	ldi	r24, 0x01	; 1
    27ba:	8c 87       	std	Y+12, r24	; 0x0c
    27bc:	80 91 e8 03 	lds	r24, 0x03E8
    27c0:	90 91 e9 03 	lds	r25, 0x03E9
    27c4:	9c 01       	movw	r18, r24
    27c6:	44 27       	eor	r20, r20
    27c8:	37 fd       	sbrc	r19, 7
    27ca:	40 95       	com	r20
    27cc:	54 2f       	mov	r21, r20
    27ce:	1b 86       	std	Y+11, r1	; 0x0b
    27d0:	89 81       	ldd	r24, Y+1	; 0x01
    27d2:	9a 81       	ldd	r25, Y+2	; 0x02
    27d4:	ab 81       	ldd	r26, Y+3	; 0x03
    27d6:	bc 81       	ldd	r27, Y+4	; 0x04
    27d8:	28 17       	cp	r18, r24
    27da:	39 07       	cpc	r19, r25
    27dc:	4a 07       	cpc	r20, r26
    27de:	5b 07       	cpc	r21, r27
    27e0:	10 f0       	brcs	.+4      	; 0x27e6 <angle_rotate+0xec>
    27e2:	91 e0       	ldi	r25, 0x01	; 1
    27e4:	9b 87       	std	Y+11, r25	; 0x0b
    27e6:	8c 85       	ldd	r24, Y+12	; 0x0c
    27e8:	9b 85       	ldd	r25, Y+11	; 0x0b
    27ea:	89 2b       	or	r24, r25
    27ec:	88 23       	and	r24, r24
    27ee:	89 f2       	breq	.-94     	; 0x2792 <angle_rotate+0x98>
    27f0:	0e 94 ef 11 	call	0x23de	; 0x23de <stop>
    27f4:	2c 96       	adiw	r28, 0x0c	; 12
    27f6:	0f b6       	in	r0, 0x3f	; 63
    27f8:	f8 94       	cli
    27fa:	de bf       	out	0x3e, r29	; 62
    27fc:	0f be       	out	0x3f, r0	; 63
    27fe:	cd bf       	out	0x3d, r28	; 61
    2800:	cf 91       	pop	r28
    2802:	df 91       	pop	r29
    2804:	08 95       	ret

00002806 <moveToTrough>:
    2806:	df 93       	push	r29
    2808:	cf 93       	push	r28
    280a:	00 d0       	rcall	.+0      	; 0x280c <moveToTrough+0x6>
    280c:	00 d0       	rcall	.+0      	; 0x280e <moveToTrough+0x8>
    280e:	cd b7       	in	r28, 0x3d	; 61
    2810:	de b7       	in	r29, 0x3e	; 62
    2812:	9a 83       	std	Y+2, r25	; 0x02
    2814:	89 83       	std	Y+1, r24	; 0x01
    2816:	89 81       	ldd	r24, Y+1	; 0x01
    2818:	9a 81       	ldd	r25, Y+2	; 0x02
    281a:	9e 83       	std	Y+6, r25	; 0x06
    281c:	8d 83       	std	Y+5, r24	; 0x05
    281e:	8d 81       	ldd	r24, Y+5	; 0x05
    2820:	9e 81       	ldd	r25, Y+6	; 0x06
    2822:	84 30       	cpi	r24, 0x04	; 4
    2824:	91 05       	cpc	r25, r1
    2826:	09 f4       	brne	.+2      	; 0x282a <moveToTrough+0x24>
    2828:	5b c0       	rjmp	.+182    	; 0x28e0 <moveToTrough+0xda>
    282a:	8d 81       	ldd	r24, Y+5	; 0x05
    282c:	9e 81       	ldd	r25, Y+6	; 0x06
    282e:	85 30       	cpi	r24, 0x05	; 5
    2830:	91 05       	cpc	r25, r1
    2832:	84 f4       	brge	.+32     	; 0x2854 <moveToTrough+0x4e>
    2834:	8d 81       	ldd	r24, Y+5	; 0x05
    2836:	9e 81       	ldd	r25, Y+6	; 0x06
    2838:	82 30       	cpi	r24, 0x02	; 2
    283a:	91 05       	cpc	r25, r1
    283c:	69 f1       	breq	.+90     	; 0x2898 <moveToTrough+0x92>
    283e:	8d 81       	ldd	r24, Y+5	; 0x05
    2840:	9e 81       	ldd	r25, Y+6	; 0x06
    2842:	83 30       	cpi	r24, 0x03	; 3
    2844:	91 05       	cpc	r25, r1
    2846:	8c f5       	brge	.+98     	; 0x28aa <moveToTrough+0xa4>
    2848:	8d 81       	ldd	r24, Y+5	; 0x05
    284a:	9e 81       	ldd	r25, Y+6	; 0x06
    284c:	81 30       	cpi	r24, 0x01	; 1
    284e:	91 05       	cpc	r25, r1
    2850:	d1 f0       	breq	.+52     	; 0x2886 <moveToTrough+0x80>
    2852:	6f c1       	rjmp	.+734    	; 0x2b32 <moveToTrough+0x32c>
    2854:	8d 81       	ldd	r24, Y+5	; 0x05
    2856:	9e 81       	ldd	r25, Y+6	; 0x06
    2858:	86 30       	cpi	r24, 0x06	; 6
    285a:	91 05       	cpc	r25, r1
    285c:	09 f4       	brne	.+2      	; 0x2860 <moveToTrough+0x5a>
    285e:	94 c0       	rjmp	.+296    	; 0x2988 <moveToTrough+0x182>
    2860:	8d 81       	ldd	r24, Y+5	; 0x05
    2862:	9e 81       	ldd	r25, Y+6	; 0x06
    2864:	86 30       	cpi	r24, 0x06	; 6
    2866:	91 05       	cpc	r25, r1
    2868:	0c f4       	brge	.+2      	; 0x286c <moveToTrough+0x66>
    286a:	5b c0       	rjmp	.+182    	; 0x2922 <moveToTrough+0x11c>
    286c:	8d 81       	ldd	r24, Y+5	; 0x05
    286e:	9e 81       	ldd	r25, Y+6	; 0x06
    2870:	87 30       	cpi	r24, 0x07	; 7
    2872:	91 05       	cpc	r25, r1
    2874:	09 f4       	brne	.+2      	; 0x2878 <moveToTrough+0x72>
    2876:	c1 c0       	rjmp	.+386    	; 0x29fa <moveToTrough+0x1f4>
    2878:	8d 81       	ldd	r24, Y+5	; 0x05
    287a:	9e 81       	ldd	r25, Y+6	; 0x06
    287c:	88 30       	cpi	r24, 0x08	; 8
    287e:	91 05       	cpc	r25, r1
    2880:	09 f4       	brne	.+2      	; 0x2884 <moveToTrough+0x7e>
    2882:	06 c1       	rjmp	.+524    	; 0x2a90 <moveToTrough+0x28a>
    2884:	56 c1       	rjmp	.+684    	; 0x2b32 <moveToTrough+0x32c>
    2886:	8a ef       	ldi	r24, 0xFA	; 250
    2888:	90 e0       	ldi	r25, 0x00	; 0
    288a:	61 e0       	ldi	r22, 0x01	; 1
    288c:	70 e0       	ldi	r23, 0x00	; 0
    288e:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2892:	1c 82       	std	Y+4, r1	; 0x04
    2894:	1b 82       	std	Y+3, r1	; 0x03
    2896:	51 c1       	rjmp	.+674    	; 0x2b3a <moveToTrough+0x334>
    2898:	8c e4       	ldi	r24, 0x4C	; 76
    289a:	94 e0       	ldi	r25, 0x04	; 4
    289c:	61 e0       	ldi	r22, 0x01	; 1
    289e:	70 e0       	ldi	r23, 0x00	; 0
    28a0:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    28a4:	1c 82       	std	Y+4, r1	; 0x04
    28a6:	1b 82       	std	Y+3, r1	; 0x03
    28a8:	48 c1       	rjmp	.+656    	; 0x2b3a <moveToTrough+0x334>
    28aa:	8c e6       	ldi	r24, 0x6C	; 108
    28ac:	97 e0       	ldi	r25, 0x07	; 7
    28ae:	61 e0       	ldi	r22, 0x01	; 1
    28b0:	70 e0       	ldi	r23, 0x00	; 0
    28b2:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    28b6:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    28ba:	8a e5       	ldi	r24, 0x5A	; 90
    28bc:	90 e0       	ldi	r25, 0x00	; 0
    28be:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    28c2:	81 e4       	ldi	r24, 0x41	; 65
    28c4:	90 e0       	ldi	r25, 0x00	; 0
    28c6:	60 e0       	ldi	r22, 0x00	; 0
    28c8:	70 e0       	ldi	r23, 0x00	; 0
    28ca:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    28ce:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    28d2:	8c e3       	ldi	r24, 0x3C	; 60
    28d4:	90 e0       	ldi	r25, 0x00	; 0
    28d6:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    28da:	1c 82       	std	Y+4, r1	; 0x04
    28dc:	1b 82       	std	Y+3, r1	; 0x03
    28de:	2d c1       	rjmp	.+602    	; 0x2b3a <moveToTrough+0x334>
    28e0:	8c e6       	ldi	r24, 0x6C	; 108
    28e2:	97 e0       	ldi	r25, 0x07	; 7
    28e4:	61 e0       	ldi	r22, 0x01	; 1
    28e6:	70 e0       	ldi	r23, 0x00	; 0
    28e8:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    28ec:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    28f0:	8a e5       	ldi	r24, 0x5A	; 90
    28f2:	90 e0       	ldi	r25, 0x00	; 0
    28f4:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    28f8:	81 e4       	ldi	r24, 0x41	; 65
    28fa:	90 e0       	ldi	r25, 0x00	; 0
    28fc:	60 e0       	ldi	r22, 0x00	; 0
    28fe:	70 e0       	ldi	r23, 0x00	; 0
    2900:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2904:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2908:	8c e3       	ldi	r24, 0x3C	; 60
    290a:	90 e0       	ldi	r25, 0x00	; 0
    290c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2910:	82 e5       	ldi	r24, 0x52	; 82
    2912:	93 e0       	ldi	r25, 0x03	; 3
    2914:	61 e0       	ldi	r22, 0x01	; 1
    2916:	70 e0       	ldi	r23, 0x00	; 0
    2918:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    291c:	1c 82       	std	Y+4, r1	; 0x04
    291e:	1b 82       	std	Y+3, r1	; 0x03
    2920:	0c c1       	rjmp	.+536    	; 0x2b3a <moveToTrough+0x334>
    2922:	8c e6       	ldi	r24, 0x6C	; 108
    2924:	97 e0       	ldi	r25, 0x07	; 7
    2926:	61 e0       	ldi	r22, 0x01	; 1
    2928:	70 e0       	ldi	r23, 0x00	; 0
    292a:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    292e:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2932:	8a e5       	ldi	r24, 0x5A	; 90
    2934:	90 e0       	ldi	r25, 0x00	; 0
    2936:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    293a:	81 e4       	ldi	r24, 0x41	; 65
    293c:	90 e0       	ldi	r25, 0x00	; 0
    293e:	60 e0       	ldi	r22, 0x00	; 0
    2940:	70 e0       	ldi	r23, 0x00	; 0
    2942:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2946:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    294a:	8c e3       	ldi	r24, 0x3C	; 60
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2952:	8e ea       	ldi	r24, 0xAE	; 174
    2954:	96 e0       	ldi	r25, 0x06	; 6
    2956:	61 e0       	ldi	r22, 0x01	; 1
    2958:	70 e0       	ldi	r23, 0x00	; 0
    295a:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    295e:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    2962:	8a e5       	ldi	r24, 0x5A	; 90
    2964:	90 e0       	ldi	r25, 0x00	; 0
    2966:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    296a:	83 ef       	ldi	r24, 0xF3	; 243
    296c:	92 e0       	ldi	r25, 0x02	; 2
    296e:	61 e0       	ldi	r22, 0x01	; 1
    2970:	70 e0       	ldi	r23, 0x00	; 0
    2972:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2976:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    297a:	8a e5       	ldi	r24, 0x5A	; 90
    297c:	90 e0       	ldi	r25, 0x00	; 0
    297e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2982:	1c 82       	std	Y+4, r1	; 0x04
    2984:	1b 82       	std	Y+3, r1	; 0x03
    2986:	d9 c0       	rjmp	.+434    	; 0x2b3a <moveToTrough+0x334>
    2988:	8c e6       	ldi	r24, 0x6C	; 108
    298a:	97 e0       	ldi	r25, 0x07	; 7
    298c:	61 e0       	ldi	r22, 0x01	; 1
    298e:	70 e0       	ldi	r23, 0x00	; 0
    2990:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2994:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2998:	8a e5       	ldi	r24, 0x5A	; 90
    299a:	90 e0       	ldi	r25, 0x00	; 0
    299c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    29a0:	81 e4       	ldi	r24, 0x41	; 65
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	60 e0       	ldi	r22, 0x00	; 0
    29a6:	70 e0       	ldi	r23, 0x00	; 0
    29a8:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    29ac:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    29b0:	8c e3       	ldi	r24, 0x3C	; 60
    29b2:	90 e0       	ldi	r25, 0x00	; 0
    29b4:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    29b8:	8e ea       	ldi	r24, 0xAE	; 174
    29ba:	96 e0       	ldi	r25, 0x06	; 6
    29bc:	61 e0       	ldi	r22, 0x01	; 1
    29be:	70 e0       	ldi	r23, 0x00	; 0
    29c0:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    29c4:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    29c8:	8a e5       	ldi	r24, 0x5A	; 90
    29ca:	90 e0       	ldi	r25, 0x00	; 0
    29cc:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    29d0:	83 ef       	ldi	r24, 0xF3	; 243
    29d2:	92 e0       	ldi	r25, 0x02	; 2
    29d4:	61 e0       	ldi	r22, 0x01	; 1
    29d6:	70 e0       	ldi	r23, 0x00	; 0
    29d8:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    29dc:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    29e0:	8a e5       	ldi	r24, 0x5A	; 90
    29e2:	90 e0       	ldi	r25, 0x00	; 0
    29e4:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    29e8:	84 ed       	ldi	r24, 0xD4	; 212
    29ea:	93 e0       	ldi	r25, 0x03	; 3
    29ec:	61 e0       	ldi	r22, 0x01	; 1
    29ee:	70 e0       	ldi	r23, 0x00	; 0
    29f0:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    29f4:	1c 82       	std	Y+4, r1	; 0x04
    29f6:	1b 82       	std	Y+3, r1	; 0x03
    29f8:	a0 c0       	rjmp	.+320    	; 0x2b3a <moveToTrough+0x334>
    29fa:	8c e6       	ldi	r24, 0x6C	; 108
    29fc:	97 e0       	ldi	r25, 0x07	; 7
    29fe:	61 e0       	ldi	r22, 0x01	; 1
    2a00:	70 e0       	ldi	r23, 0x00	; 0
    2a02:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2a06:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2a0a:	8a e5       	ldi	r24, 0x5A	; 90
    2a0c:	90 e0       	ldi	r25, 0x00	; 0
    2a0e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2a12:	81 e4       	ldi	r24, 0x41	; 65
    2a14:	90 e0       	ldi	r25, 0x00	; 0
    2a16:	60 e0       	ldi	r22, 0x00	; 0
    2a18:	70 e0       	ldi	r23, 0x00	; 0
    2a1a:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2a1e:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2a22:	8c e3       	ldi	r24, 0x3C	; 60
    2a24:	90 e0       	ldi	r25, 0x00	; 0
    2a26:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2a2a:	8e ea       	ldi	r24, 0xAE	; 174
    2a2c:	96 e0       	ldi	r25, 0x06	; 6
    2a2e:	61 e0       	ldi	r22, 0x01	; 1
    2a30:	70 e0       	ldi	r23, 0x00	; 0
    2a32:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2a36:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    2a3a:	8a e5       	ldi	r24, 0x5A	; 90
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2a42:	83 ef       	ldi	r24, 0xF3	; 243
    2a44:	92 e0       	ldi	r25, 0x02	; 2
    2a46:	61 e0       	ldi	r22, 0x01	; 1
    2a48:	70 e0       	ldi	r23, 0x00	; 0
    2a4a:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2a4e:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    2a52:	8a e5       	ldi	r24, 0x5A	; 90
    2a54:	90 e0       	ldi	r25, 0x00	; 0
    2a56:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2a5a:	84 ef       	ldi	r24, 0xF4	; 244
    2a5c:	96 e0       	ldi	r25, 0x06	; 6
    2a5e:	61 e0       	ldi	r22, 0x01	; 1
    2a60:	70 e0       	ldi	r23, 0x00	; 0
    2a62:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2a66:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2a6a:	8a e5       	ldi	r24, 0x5A	; 90
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2a72:	81 e4       	ldi	r24, 0x41	; 65
    2a74:	90 e0       	ldi	r25, 0x00	; 0
    2a76:	60 e0       	ldi	r22, 0x00	; 0
    2a78:	70 e0       	ldi	r23, 0x00	; 0
    2a7a:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2a7e:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2a82:	8c e3       	ldi	r24, 0x3C	; 60
    2a84:	90 e0       	ldi	r25, 0x00	; 0
    2a86:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2a8a:	1c 82       	std	Y+4, r1	; 0x04
    2a8c:	1b 82       	std	Y+3, r1	; 0x03
    2a8e:	55 c0       	rjmp	.+170    	; 0x2b3a <moveToTrough+0x334>
    2a90:	8c e6       	ldi	r24, 0x6C	; 108
    2a92:	97 e0       	ldi	r25, 0x07	; 7
    2a94:	61 e0       	ldi	r22, 0x01	; 1
    2a96:	70 e0       	ldi	r23, 0x00	; 0
    2a98:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2a9c:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2aa0:	8a e5       	ldi	r24, 0x5A	; 90
    2aa2:	90 e0       	ldi	r25, 0x00	; 0
    2aa4:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2aa8:	81 e4       	ldi	r24, 0x41	; 65
    2aaa:	90 e0       	ldi	r25, 0x00	; 0
    2aac:	60 e0       	ldi	r22, 0x00	; 0
    2aae:	70 e0       	ldi	r23, 0x00	; 0
    2ab0:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2ab4:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2ab8:	8c e3       	ldi	r24, 0x3C	; 60
    2aba:	90 e0       	ldi	r25, 0x00	; 0
    2abc:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2ac0:	8e ea       	ldi	r24, 0xAE	; 174
    2ac2:	96 e0       	ldi	r25, 0x06	; 6
    2ac4:	61 e0       	ldi	r22, 0x01	; 1
    2ac6:	70 e0       	ldi	r23, 0x00	; 0
    2ac8:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2acc:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    2ad0:	8a e5       	ldi	r24, 0x5A	; 90
    2ad2:	90 e0       	ldi	r25, 0x00	; 0
    2ad4:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2ad8:	83 ef       	ldi	r24, 0xF3	; 243
    2ada:	92 e0       	ldi	r25, 0x02	; 2
    2adc:	61 e0       	ldi	r22, 0x01	; 1
    2ade:	70 e0       	ldi	r23, 0x00	; 0
    2ae0:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2ae4:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    2ae8:	8a e5       	ldi	r24, 0x5A	; 90
    2aea:	90 e0       	ldi	r25, 0x00	; 0
    2aec:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2af0:	84 ef       	ldi	r24, 0xF4	; 244
    2af2:	96 e0       	ldi	r25, 0x06	; 6
    2af4:	61 e0       	ldi	r22, 0x01	; 1
    2af6:	70 e0       	ldi	r23, 0x00	; 0
    2af8:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2afc:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2b00:	8a e5       	ldi	r24, 0x5A	; 90
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2b08:	81 e4       	ldi	r24, 0x41	; 65
    2b0a:	90 e0       	ldi	r25, 0x00	; 0
    2b0c:	60 e0       	ldi	r22, 0x00	; 0
    2b0e:	70 e0       	ldi	r23, 0x00	; 0
    2b10:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2b14:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2b18:	8c e3       	ldi	r24, 0x3C	; 60
    2b1a:	90 e0       	ldi	r25, 0x00	; 0
    2b1c:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2b20:	82 e5       	ldi	r24, 0x52	; 82
    2b22:	93 e0       	ldi	r25, 0x03	; 3
    2b24:	61 e0       	ldi	r22, 0x01	; 1
    2b26:	70 e0       	ldi	r23, 0x00	; 0
    2b28:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2b2c:	1c 82       	std	Y+4, r1	; 0x04
    2b2e:	1b 82       	std	Y+3, r1	; 0x03
    2b30:	04 c0       	rjmp	.+8      	; 0x2b3a <moveToTrough+0x334>
    2b32:	81 e0       	ldi	r24, 0x01	; 1
    2b34:	90 e0       	ldi	r25, 0x00	; 0
    2b36:	9c 83       	std	Y+4, r25	; 0x04
    2b38:	8b 83       	std	Y+3, r24	; 0x03
    2b3a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b3c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b3e:	26 96       	adiw	r28, 0x06	; 6
    2b40:	0f b6       	in	r0, 0x3f	; 63
    2b42:	f8 94       	cli
    2b44:	de bf       	out	0x3e, r29	; 62
    2b46:	0f be       	out	0x3f, r0	; 63
    2b48:	cd bf       	out	0x3d, r28	; 61
    2b4a:	cf 91       	pop	r28
    2b4c:	df 91       	pop	r29
    2b4e:	08 95       	ret

00002b50 <returnToInitial>:
    2b50:	df 93       	push	r29
    2b52:	cf 93       	push	r28
    2b54:	00 d0       	rcall	.+0      	; 0x2b56 <returnToInitial+0x6>
    2b56:	00 d0       	rcall	.+0      	; 0x2b58 <returnToInitial+0x8>
    2b58:	cd b7       	in	r28, 0x3d	; 61
    2b5a:	de b7       	in	r29, 0x3e	; 62
    2b5c:	9a 83       	std	Y+2, r25	; 0x02
    2b5e:	89 83       	std	Y+1, r24	; 0x01
    2b60:	89 81       	ldd	r24, Y+1	; 0x01
    2b62:	9a 81       	ldd	r25, Y+2	; 0x02
    2b64:	9c 83       	std	Y+4, r25	; 0x04
    2b66:	8b 83       	std	Y+3, r24	; 0x03
    2b68:	8b 81       	ldd	r24, Y+3	; 0x03
    2b6a:	9c 81       	ldd	r25, Y+4	; 0x04
    2b6c:	85 30       	cpi	r24, 0x05	; 5
    2b6e:	91 05       	cpc	r25, r1
    2b70:	5c f4       	brge	.+22     	; 0x2b88 <returnToInitial+0x38>
    2b72:	8b 81       	ldd	r24, Y+3	; 0x03
    2b74:	9c 81       	ldd	r25, Y+4	; 0x04
    2b76:	83 30       	cpi	r24, 0x03	; 3
    2b78:	91 05       	cpc	r25, r1
    2b7a:	e4 f4       	brge	.+56     	; 0x2bb4 <returnToInitial+0x64>
    2b7c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b7e:	9c 81       	ldd	r25, Y+4	; 0x04
    2b80:	81 30       	cpi	r24, 0x01	; 1
    2b82:	91 05       	cpc	r25, r1
    2b84:	dc f0       	brlt	.+54     	; 0x2bbc <returnToInitial+0x6c>
    2b86:	0b c0       	rjmp	.+22     	; 0x2b9e <returnToInitial+0x4e>
    2b88:	8b 81       	ldd	r24, Y+3	; 0x03
    2b8a:	9c 81       	ldd	r25, Y+4	; 0x04
    2b8c:	87 30       	cpi	r24, 0x07	; 7
    2b8e:	91 05       	cpc	r25, r1
    2b90:	34 f0       	brlt	.+12     	; 0x2b9e <returnToInitial+0x4e>
    2b92:	8b 81       	ldd	r24, Y+3	; 0x03
    2b94:	9c 81       	ldd	r25, Y+4	; 0x04
    2b96:	89 30       	cpi	r24, 0x09	; 9
    2b98:	91 05       	cpc	r25, r1
    2b9a:	84 f4       	brge	.+32     	; 0x2bbc <returnToInitial+0x6c>
    2b9c:	0b c0       	rjmp	.+22     	; 0x2bb4 <returnToInitial+0x64>
    2b9e:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2ba2:	84 eb       	ldi	r24, 0xB4	; 180
    2ba4:	90 e0       	ldi	r25, 0x00	; 0
    2ba6:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2baa:	0e 94 0d 12 	call	0x241a	; 0x241a <move_bot>
    2bae:	00 97       	sbiw	r24, 0x00	; 0
    2bb0:	29 f4       	brne	.+10     	; 0x2bbc <returnToInitial+0x6c>
    2bb2:	fb cf       	rjmp	.-10     	; 0x2baa <returnToInitial+0x5a>
    2bb4:	0e 94 0d 12 	call	0x241a	; 0x241a <move_bot>
    2bb8:	00 97       	sbiw	r24, 0x00	; 0
    2bba:	e1 f3       	breq	.-8      	; 0x2bb4 <returnToInitial+0x64>
    2bbc:	89 81       	ldd	r24, Y+1	; 0x01
    2bbe:	9a 81       	ldd	r25, Y+2	; 0x02
    2bc0:	9e 83       	std	Y+6, r25	; 0x06
    2bc2:	8d 83       	std	Y+5, r24	; 0x05
    2bc4:	8d 81       	ldd	r24, Y+5	; 0x05
    2bc6:	9e 81       	ldd	r25, Y+6	; 0x06
    2bc8:	85 30       	cpi	r24, 0x05	; 5
    2bca:	91 05       	cpc	r25, r1
    2bcc:	84 f1       	brlt	.+96     	; 0x2c2e <returnToInitial+0xde>
    2bce:	8d 81       	ldd	r24, Y+5	; 0x05
    2bd0:	9e 81       	ldd	r25, Y+6	; 0x06
    2bd2:	87 30       	cpi	r24, 0x07	; 7
    2bd4:	91 05       	cpc	r25, r1
    2bd6:	34 f0       	brlt	.+12     	; 0x2be4 <returnToInitial+0x94>
    2bd8:	8d 81       	ldd	r24, Y+5	; 0x05
    2bda:	9e 81       	ldd	r25, Y+6	; 0x06
    2bdc:	89 30       	cpi	r24, 0x09	; 9
    2bde:	91 05       	cpc	r25, r1
    2be0:	34 f5       	brge	.+76     	; 0x2c2e <returnToInitial+0xde>
    2be2:	13 c0       	rjmp	.+38     	; 0x2c0a <returnToInitial+0xba>
    2be4:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2be8:	8a e5       	ldi	r24, 0x5A	; 90
    2bea:	90 e0       	ldi	r25, 0x00	; 0
    2bec:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2bf0:	83 ef       	ldi	r24, 0xF3	; 243
    2bf2:	92 e0       	ldi	r25, 0x02	; 2
    2bf4:	61 e0       	ldi	r22, 0x01	; 1
    2bf6:	70 e0       	ldi	r23, 0x00	; 0
    2bf8:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2bfc:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    2c00:	8a e5       	ldi	r24, 0x5A	; 90
    2c02:	90 e0       	ldi	r25, 0x00	; 0
    2c04:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2c08:	12 c0       	rjmp	.+36     	; 0x2c2e <returnToInitial+0xde>
    2c0a:	0e 94 03 12 	call	0x2406	; 0x2406 <right>
    2c0e:	8a e5       	ldi	r24, 0x5A	; 90
    2c10:	90 e0       	ldi	r25, 0x00	; 0
    2c12:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2c16:	83 e9       	ldi	r24, 0x93	; 147
    2c18:	93 e0       	ldi	r25, 0x03	; 3
    2c1a:	61 e0       	ldi	r22, 0x01	; 1
    2c1c:	70 e0       	ldi	r23, 0x00	; 0
    2c1e:	0e 94 33 13 	call	0x2666	; 0x2666 <distance_move>
    2c22:	0e 94 f9 11 	call	0x23f2	; 0x23f2 <left>
    2c26:	8a e5       	ldi	r24, 0x5A	; 90
    2c28:	90 e0       	ldi	r25, 0x00	; 0
    2c2a:	0e 94 7d 13 	call	0x26fa	; 0x26fa <angle_rotate>
    2c2e:	26 96       	adiw	r28, 0x06	; 6
    2c30:	0f b6       	in	r0, 0x3f	; 63
    2c32:	f8 94       	cli
    2c34:	de bf       	out	0x3e, r29	; 62
    2c36:	0f be       	out	0x3f, r0	; 63
    2c38:	cd bf       	out	0x3d, r28	; 61
    2c3a:	cf 91       	pop	r28
    2c3c:	df 91       	pop	r29
    2c3e:	08 95       	ret

00002c40 <__fixunssfsi>:
    2c40:	ef 92       	push	r14
    2c42:	ff 92       	push	r15
    2c44:	0f 93       	push	r16
    2c46:	1f 93       	push	r17
    2c48:	7b 01       	movw	r14, r22
    2c4a:	8c 01       	movw	r16, r24
    2c4c:	20 e0       	ldi	r18, 0x00	; 0
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	40 e0       	ldi	r20, 0x00	; 0
    2c52:	5f e4       	ldi	r21, 0x4F	; 79
    2c54:	0e 94 cc 19 	call	0x3398	; 0x3398 <__gesf2>
    2c58:	88 23       	and	r24, r24
    2c5a:	8c f0       	brlt	.+34     	; 0x2c7e <__fixunssfsi+0x3e>
    2c5c:	c8 01       	movw	r24, r16
    2c5e:	b7 01       	movw	r22, r14
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	30 e0       	ldi	r19, 0x00	; 0
    2c64:	40 e0       	ldi	r20, 0x00	; 0
    2c66:	5f e4       	ldi	r21, 0x4F	; 79
    2c68:	0e 94 98 17 	call	0x2f30	; 0x2f30 <__subsf3>
    2c6c:	0e 94 8a 1a 	call	0x3514	; 0x3514 <__fixsfsi>
    2c70:	9b 01       	movw	r18, r22
    2c72:	ac 01       	movw	r20, r24
    2c74:	20 50       	subi	r18, 0x00	; 0
    2c76:	30 40       	sbci	r19, 0x00	; 0
    2c78:	40 40       	sbci	r20, 0x00	; 0
    2c7a:	50 48       	sbci	r21, 0x80	; 128
    2c7c:	06 c0       	rjmp	.+12     	; 0x2c8a <__fixunssfsi+0x4a>
    2c7e:	c8 01       	movw	r24, r16
    2c80:	b7 01       	movw	r22, r14
    2c82:	0e 94 8a 1a 	call	0x3514	; 0x3514 <__fixsfsi>
    2c86:	9b 01       	movw	r18, r22
    2c88:	ac 01       	movw	r20, r24
    2c8a:	b9 01       	movw	r22, r18
    2c8c:	ca 01       	movw	r24, r20
    2c8e:	1f 91       	pop	r17
    2c90:	0f 91       	pop	r16
    2c92:	ff 90       	pop	r15
    2c94:	ef 90       	pop	r14
    2c96:	08 95       	ret

00002c98 <_fpadd_parts>:
    2c98:	a0 e0       	ldi	r26, 0x00	; 0
    2c9a:	b0 e0       	ldi	r27, 0x00	; 0
    2c9c:	e2 e5       	ldi	r30, 0x52	; 82
    2c9e:	f6 e1       	ldi	r31, 0x16	; 22
    2ca0:	0c 94 86 1d 	jmp	0x3b0c	; 0x3b0c <__prologue_saves__>
    2ca4:	dc 01       	movw	r26, r24
    2ca6:	2b 01       	movw	r4, r22
    2ca8:	fa 01       	movw	r30, r20
    2caa:	9c 91       	ld	r25, X
    2cac:	92 30       	cpi	r25, 0x02	; 2
    2cae:	08 f4       	brcc	.+2      	; 0x2cb2 <_fpadd_parts+0x1a>
    2cb0:	39 c1       	rjmp	.+626    	; 0x2f24 <_fpadd_parts+0x28c>
    2cb2:	eb 01       	movw	r28, r22
    2cb4:	88 81       	ld	r24, Y
    2cb6:	82 30       	cpi	r24, 0x02	; 2
    2cb8:	08 f4       	brcc	.+2      	; 0x2cbc <_fpadd_parts+0x24>
    2cba:	33 c1       	rjmp	.+614    	; 0x2f22 <_fpadd_parts+0x28a>
    2cbc:	94 30       	cpi	r25, 0x04	; 4
    2cbe:	69 f4       	brne	.+26     	; 0x2cda <_fpadd_parts+0x42>
    2cc0:	84 30       	cpi	r24, 0x04	; 4
    2cc2:	09 f0       	breq	.+2      	; 0x2cc6 <_fpadd_parts+0x2e>
    2cc4:	2f c1       	rjmp	.+606    	; 0x2f24 <_fpadd_parts+0x28c>
    2cc6:	11 96       	adiw	r26, 0x01	; 1
    2cc8:	9c 91       	ld	r25, X
    2cca:	11 97       	sbiw	r26, 0x01	; 1
    2ccc:	89 81       	ldd	r24, Y+1	; 0x01
    2cce:	98 17       	cp	r25, r24
    2cd0:	09 f4       	brne	.+2      	; 0x2cd4 <_fpadd_parts+0x3c>
    2cd2:	28 c1       	rjmp	.+592    	; 0x2f24 <_fpadd_parts+0x28c>
    2cd4:	a6 ed       	ldi	r26, 0xD6	; 214
    2cd6:	b2 e0       	ldi	r27, 0x02	; 2
    2cd8:	25 c1       	rjmp	.+586    	; 0x2f24 <_fpadd_parts+0x28c>
    2cda:	84 30       	cpi	r24, 0x04	; 4
    2cdc:	09 f4       	brne	.+2      	; 0x2ce0 <_fpadd_parts+0x48>
    2cde:	21 c1       	rjmp	.+578    	; 0x2f22 <_fpadd_parts+0x28a>
    2ce0:	82 30       	cpi	r24, 0x02	; 2
    2ce2:	a9 f4       	brne	.+42     	; 0x2d0e <_fpadd_parts+0x76>
    2ce4:	92 30       	cpi	r25, 0x02	; 2
    2ce6:	09 f0       	breq	.+2      	; 0x2cea <_fpadd_parts+0x52>
    2ce8:	1d c1       	rjmp	.+570    	; 0x2f24 <_fpadd_parts+0x28c>
    2cea:	9a 01       	movw	r18, r20
    2cec:	ad 01       	movw	r20, r26
    2cee:	88 e0       	ldi	r24, 0x08	; 8
    2cf0:	ea 01       	movw	r28, r20
    2cf2:	09 90       	ld	r0, Y+
    2cf4:	ae 01       	movw	r20, r28
    2cf6:	e9 01       	movw	r28, r18
    2cf8:	09 92       	st	Y+, r0
    2cfa:	9e 01       	movw	r18, r28
    2cfc:	81 50       	subi	r24, 0x01	; 1
    2cfe:	c1 f7       	brne	.-16     	; 0x2cf0 <_fpadd_parts+0x58>
    2d00:	e2 01       	movw	r28, r4
    2d02:	89 81       	ldd	r24, Y+1	; 0x01
    2d04:	11 96       	adiw	r26, 0x01	; 1
    2d06:	9c 91       	ld	r25, X
    2d08:	89 23       	and	r24, r25
    2d0a:	81 83       	std	Z+1, r24	; 0x01
    2d0c:	08 c1       	rjmp	.+528    	; 0x2f1e <_fpadd_parts+0x286>
    2d0e:	92 30       	cpi	r25, 0x02	; 2
    2d10:	09 f4       	brne	.+2      	; 0x2d14 <_fpadd_parts+0x7c>
    2d12:	07 c1       	rjmp	.+526    	; 0x2f22 <_fpadd_parts+0x28a>
    2d14:	12 96       	adiw	r26, 0x02	; 2
    2d16:	2d 90       	ld	r2, X+
    2d18:	3c 90       	ld	r3, X
    2d1a:	13 97       	sbiw	r26, 0x03	; 3
    2d1c:	eb 01       	movw	r28, r22
    2d1e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d20:	9b 81       	ldd	r25, Y+3	; 0x03
    2d22:	14 96       	adiw	r26, 0x04	; 4
    2d24:	ad 90       	ld	r10, X+
    2d26:	bd 90       	ld	r11, X+
    2d28:	cd 90       	ld	r12, X+
    2d2a:	dc 90       	ld	r13, X
    2d2c:	17 97       	sbiw	r26, 0x07	; 7
    2d2e:	ec 80       	ldd	r14, Y+4	; 0x04
    2d30:	fd 80       	ldd	r15, Y+5	; 0x05
    2d32:	0e 81       	ldd	r16, Y+6	; 0x06
    2d34:	1f 81       	ldd	r17, Y+7	; 0x07
    2d36:	91 01       	movw	r18, r2
    2d38:	28 1b       	sub	r18, r24
    2d3a:	39 0b       	sbc	r19, r25
    2d3c:	b9 01       	movw	r22, r18
    2d3e:	37 ff       	sbrs	r19, 7
    2d40:	04 c0       	rjmp	.+8      	; 0x2d4a <_fpadd_parts+0xb2>
    2d42:	66 27       	eor	r22, r22
    2d44:	77 27       	eor	r23, r23
    2d46:	62 1b       	sub	r22, r18
    2d48:	73 0b       	sbc	r23, r19
    2d4a:	60 32       	cpi	r22, 0x20	; 32
    2d4c:	71 05       	cpc	r23, r1
    2d4e:	0c f0       	brlt	.+2      	; 0x2d52 <_fpadd_parts+0xba>
    2d50:	61 c0       	rjmp	.+194    	; 0x2e14 <_fpadd_parts+0x17c>
    2d52:	12 16       	cp	r1, r18
    2d54:	13 06       	cpc	r1, r19
    2d56:	6c f5       	brge	.+90     	; 0x2db2 <_fpadd_parts+0x11a>
    2d58:	37 01       	movw	r6, r14
    2d5a:	48 01       	movw	r8, r16
    2d5c:	06 2e       	mov	r0, r22
    2d5e:	04 c0       	rjmp	.+8      	; 0x2d68 <_fpadd_parts+0xd0>
    2d60:	96 94       	lsr	r9
    2d62:	87 94       	ror	r8
    2d64:	77 94       	ror	r7
    2d66:	67 94       	ror	r6
    2d68:	0a 94       	dec	r0
    2d6a:	d2 f7       	brpl	.-12     	; 0x2d60 <_fpadd_parts+0xc8>
    2d6c:	21 e0       	ldi	r18, 0x01	; 1
    2d6e:	30 e0       	ldi	r19, 0x00	; 0
    2d70:	40 e0       	ldi	r20, 0x00	; 0
    2d72:	50 e0       	ldi	r21, 0x00	; 0
    2d74:	04 c0       	rjmp	.+8      	; 0x2d7e <_fpadd_parts+0xe6>
    2d76:	22 0f       	add	r18, r18
    2d78:	33 1f       	adc	r19, r19
    2d7a:	44 1f       	adc	r20, r20
    2d7c:	55 1f       	adc	r21, r21
    2d7e:	6a 95       	dec	r22
    2d80:	d2 f7       	brpl	.-12     	; 0x2d76 <_fpadd_parts+0xde>
    2d82:	21 50       	subi	r18, 0x01	; 1
    2d84:	30 40       	sbci	r19, 0x00	; 0
    2d86:	40 40       	sbci	r20, 0x00	; 0
    2d88:	50 40       	sbci	r21, 0x00	; 0
    2d8a:	2e 21       	and	r18, r14
    2d8c:	3f 21       	and	r19, r15
    2d8e:	40 23       	and	r20, r16
    2d90:	51 23       	and	r21, r17
    2d92:	21 15       	cp	r18, r1
    2d94:	31 05       	cpc	r19, r1
    2d96:	41 05       	cpc	r20, r1
    2d98:	51 05       	cpc	r21, r1
    2d9a:	21 f0       	breq	.+8      	; 0x2da4 <_fpadd_parts+0x10c>
    2d9c:	21 e0       	ldi	r18, 0x01	; 1
    2d9e:	30 e0       	ldi	r19, 0x00	; 0
    2da0:	40 e0       	ldi	r20, 0x00	; 0
    2da2:	50 e0       	ldi	r21, 0x00	; 0
    2da4:	79 01       	movw	r14, r18
    2da6:	8a 01       	movw	r16, r20
    2da8:	e6 28       	or	r14, r6
    2daa:	f7 28       	or	r15, r7
    2dac:	08 29       	or	r16, r8
    2dae:	19 29       	or	r17, r9
    2db0:	3c c0       	rjmp	.+120    	; 0x2e2a <_fpadd_parts+0x192>
    2db2:	23 2b       	or	r18, r19
    2db4:	d1 f1       	breq	.+116    	; 0x2e2a <_fpadd_parts+0x192>
    2db6:	26 0e       	add	r2, r22
    2db8:	37 1e       	adc	r3, r23
    2dba:	35 01       	movw	r6, r10
    2dbc:	46 01       	movw	r8, r12
    2dbe:	06 2e       	mov	r0, r22
    2dc0:	04 c0       	rjmp	.+8      	; 0x2dca <_fpadd_parts+0x132>
    2dc2:	96 94       	lsr	r9
    2dc4:	87 94       	ror	r8
    2dc6:	77 94       	ror	r7
    2dc8:	67 94       	ror	r6
    2dca:	0a 94       	dec	r0
    2dcc:	d2 f7       	brpl	.-12     	; 0x2dc2 <_fpadd_parts+0x12a>
    2dce:	21 e0       	ldi	r18, 0x01	; 1
    2dd0:	30 e0       	ldi	r19, 0x00	; 0
    2dd2:	40 e0       	ldi	r20, 0x00	; 0
    2dd4:	50 e0       	ldi	r21, 0x00	; 0
    2dd6:	04 c0       	rjmp	.+8      	; 0x2de0 <_fpadd_parts+0x148>
    2dd8:	22 0f       	add	r18, r18
    2dda:	33 1f       	adc	r19, r19
    2ddc:	44 1f       	adc	r20, r20
    2dde:	55 1f       	adc	r21, r21
    2de0:	6a 95       	dec	r22
    2de2:	d2 f7       	brpl	.-12     	; 0x2dd8 <_fpadd_parts+0x140>
    2de4:	21 50       	subi	r18, 0x01	; 1
    2de6:	30 40       	sbci	r19, 0x00	; 0
    2de8:	40 40       	sbci	r20, 0x00	; 0
    2dea:	50 40       	sbci	r21, 0x00	; 0
    2dec:	2a 21       	and	r18, r10
    2dee:	3b 21       	and	r19, r11
    2df0:	4c 21       	and	r20, r12
    2df2:	5d 21       	and	r21, r13
    2df4:	21 15       	cp	r18, r1
    2df6:	31 05       	cpc	r19, r1
    2df8:	41 05       	cpc	r20, r1
    2dfa:	51 05       	cpc	r21, r1
    2dfc:	21 f0       	breq	.+8      	; 0x2e06 <_fpadd_parts+0x16e>
    2dfe:	21 e0       	ldi	r18, 0x01	; 1
    2e00:	30 e0       	ldi	r19, 0x00	; 0
    2e02:	40 e0       	ldi	r20, 0x00	; 0
    2e04:	50 e0       	ldi	r21, 0x00	; 0
    2e06:	59 01       	movw	r10, r18
    2e08:	6a 01       	movw	r12, r20
    2e0a:	a6 28       	or	r10, r6
    2e0c:	b7 28       	or	r11, r7
    2e0e:	c8 28       	or	r12, r8
    2e10:	d9 28       	or	r13, r9
    2e12:	0b c0       	rjmp	.+22     	; 0x2e2a <_fpadd_parts+0x192>
    2e14:	82 15       	cp	r24, r2
    2e16:	93 05       	cpc	r25, r3
    2e18:	2c f0       	brlt	.+10     	; 0x2e24 <_fpadd_parts+0x18c>
    2e1a:	1c 01       	movw	r2, r24
    2e1c:	aa 24       	eor	r10, r10
    2e1e:	bb 24       	eor	r11, r11
    2e20:	65 01       	movw	r12, r10
    2e22:	03 c0       	rjmp	.+6      	; 0x2e2a <_fpadd_parts+0x192>
    2e24:	ee 24       	eor	r14, r14
    2e26:	ff 24       	eor	r15, r15
    2e28:	87 01       	movw	r16, r14
    2e2a:	11 96       	adiw	r26, 0x01	; 1
    2e2c:	9c 91       	ld	r25, X
    2e2e:	d2 01       	movw	r26, r4
    2e30:	11 96       	adiw	r26, 0x01	; 1
    2e32:	8c 91       	ld	r24, X
    2e34:	98 17       	cp	r25, r24
    2e36:	09 f4       	brne	.+2      	; 0x2e3a <_fpadd_parts+0x1a2>
    2e38:	45 c0       	rjmp	.+138    	; 0x2ec4 <_fpadd_parts+0x22c>
    2e3a:	99 23       	and	r25, r25
    2e3c:	39 f0       	breq	.+14     	; 0x2e4c <_fpadd_parts+0x1b4>
    2e3e:	a8 01       	movw	r20, r16
    2e40:	97 01       	movw	r18, r14
    2e42:	2a 19       	sub	r18, r10
    2e44:	3b 09       	sbc	r19, r11
    2e46:	4c 09       	sbc	r20, r12
    2e48:	5d 09       	sbc	r21, r13
    2e4a:	06 c0       	rjmp	.+12     	; 0x2e58 <_fpadd_parts+0x1c0>
    2e4c:	a6 01       	movw	r20, r12
    2e4e:	95 01       	movw	r18, r10
    2e50:	2e 19       	sub	r18, r14
    2e52:	3f 09       	sbc	r19, r15
    2e54:	40 0b       	sbc	r20, r16
    2e56:	51 0b       	sbc	r21, r17
    2e58:	57 fd       	sbrc	r21, 7
    2e5a:	08 c0       	rjmp	.+16     	; 0x2e6c <_fpadd_parts+0x1d4>
    2e5c:	11 82       	std	Z+1, r1	; 0x01
    2e5e:	33 82       	std	Z+3, r3	; 0x03
    2e60:	22 82       	std	Z+2, r2	; 0x02
    2e62:	24 83       	std	Z+4, r18	; 0x04
    2e64:	35 83       	std	Z+5, r19	; 0x05
    2e66:	46 83       	std	Z+6, r20	; 0x06
    2e68:	57 83       	std	Z+7, r21	; 0x07
    2e6a:	1d c0       	rjmp	.+58     	; 0x2ea6 <_fpadd_parts+0x20e>
    2e6c:	81 e0       	ldi	r24, 0x01	; 1
    2e6e:	81 83       	std	Z+1, r24	; 0x01
    2e70:	33 82       	std	Z+3, r3	; 0x03
    2e72:	22 82       	std	Z+2, r2	; 0x02
    2e74:	88 27       	eor	r24, r24
    2e76:	99 27       	eor	r25, r25
    2e78:	dc 01       	movw	r26, r24
    2e7a:	82 1b       	sub	r24, r18
    2e7c:	93 0b       	sbc	r25, r19
    2e7e:	a4 0b       	sbc	r26, r20
    2e80:	b5 0b       	sbc	r27, r21
    2e82:	84 83       	std	Z+4, r24	; 0x04
    2e84:	95 83       	std	Z+5, r25	; 0x05
    2e86:	a6 83       	std	Z+6, r26	; 0x06
    2e88:	b7 83       	std	Z+7, r27	; 0x07
    2e8a:	0d c0       	rjmp	.+26     	; 0x2ea6 <_fpadd_parts+0x20e>
    2e8c:	22 0f       	add	r18, r18
    2e8e:	33 1f       	adc	r19, r19
    2e90:	44 1f       	adc	r20, r20
    2e92:	55 1f       	adc	r21, r21
    2e94:	24 83       	std	Z+4, r18	; 0x04
    2e96:	35 83       	std	Z+5, r19	; 0x05
    2e98:	46 83       	std	Z+6, r20	; 0x06
    2e9a:	57 83       	std	Z+7, r21	; 0x07
    2e9c:	82 81       	ldd	r24, Z+2	; 0x02
    2e9e:	93 81       	ldd	r25, Z+3	; 0x03
    2ea0:	01 97       	sbiw	r24, 0x01	; 1
    2ea2:	93 83       	std	Z+3, r25	; 0x03
    2ea4:	82 83       	std	Z+2, r24	; 0x02
    2ea6:	24 81       	ldd	r18, Z+4	; 0x04
    2ea8:	35 81       	ldd	r19, Z+5	; 0x05
    2eaa:	46 81       	ldd	r20, Z+6	; 0x06
    2eac:	57 81       	ldd	r21, Z+7	; 0x07
    2eae:	da 01       	movw	r26, r20
    2eb0:	c9 01       	movw	r24, r18
    2eb2:	01 97       	sbiw	r24, 0x01	; 1
    2eb4:	a1 09       	sbc	r26, r1
    2eb6:	b1 09       	sbc	r27, r1
    2eb8:	8f 5f       	subi	r24, 0xFF	; 255
    2eba:	9f 4f       	sbci	r25, 0xFF	; 255
    2ebc:	af 4f       	sbci	r26, 0xFF	; 255
    2ebe:	bf 43       	sbci	r27, 0x3F	; 63
    2ec0:	28 f3       	brcs	.-54     	; 0x2e8c <_fpadd_parts+0x1f4>
    2ec2:	0b c0       	rjmp	.+22     	; 0x2eda <_fpadd_parts+0x242>
    2ec4:	91 83       	std	Z+1, r25	; 0x01
    2ec6:	33 82       	std	Z+3, r3	; 0x03
    2ec8:	22 82       	std	Z+2, r2	; 0x02
    2eca:	ea 0c       	add	r14, r10
    2ecc:	fb 1c       	adc	r15, r11
    2ece:	0c 1d       	adc	r16, r12
    2ed0:	1d 1d       	adc	r17, r13
    2ed2:	e4 82       	std	Z+4, r14	; 0x04
    2ed4:	f5 82       	std	Z+5, r15	; 0x05
    2ed6:	06 83       	std	Z+6, r16	; 0x06
    2ed8:	17 83       	std	Z+7, r17	; 0x07
    2eda:	83 e0       	ldi	r24, 0x03	; 3
    2edc:	80 83       	st	Z, r24
    2ede:	24 81       	ldd	r18, Z+4	; 0x04
    2ee0:	35 81       	ldd	r19, Z+5	; 0x05
    2ee2:	46 81       	ldd	r20, Z+6	; 0x06
    2ee4:	57 81       	ldd	r21, Z+7	; 0x07
    2ee6:	57 ff       	sbrs	r21, 7
    2ee8:	1a c0       	rjmp	.+52     	; 0x2f1e <_fpadd_parts+0x286>
    2eea:	c9 01       	movw	r24, r18
    2eec:	aa 27       	eor	r26, r26
    2eee:	97 fd       	sbrc	r25, 7
    2ef0:	a0 95       	com	r26
    2ef2:	ba 2f       	mov	r27, r26
    2ef4:	81 70       	andi	r24, 0x01	; 1
    2ef6:	90 70       	andi	r25, 0x00	; 0
    2ef8:	a0 70       	andi	r26, 0x00	; 0
    2efa:	b0 70       	andi	r27, 0x00	; 0
    2efc:	56 95       	lsr	r21
    2efe:	47 95       	ror	r20
    2f00:	37 95       	ror	r19
    2f02:	27 95       	ror	r18
    2f04:	82 2b       	or	r24, r18
    2f06:	93 2b       	or	r25, r19
    2f08:	a4 2b       	or	r26, r20
    2f0a:	b5 2b       	or	r27, r21
    2f0c:	84 83       	std	Z+4, r24	; 0x04
    2f0e:	95 83       	std	Z+5, r25	; 0x05
    2f10:	a6 83       	std	Z+6, r26	; 0x06
    2f12:	b7 83       	std	Z+7, r27	; 0x07
    2f14:	82 81       	ldd	r24, Z+2	; 0x02
    2f16:	93 81       	ldd	r25, Z+3	; 0x03
    2f18:	01 96       	adiw	r24, 0x01	; 1
    2f1a:	93 83       	std	Z+3, r25	; 0x03
    2f1c:	82 83       	std	Z+2, r24	; 0x02
    2f1e:	df 01       	movw	r26, r30
    2f20:	01 c0       	rjmp	.+2      	; 0x2f24 <_fpadd_parts+0x28c>
    2f22:	d2 01       	movw	r26, r4
    2f24:	cd 01       	movw	r24, r26
    2f26:	cd b7       	in	r28, 0x3d	; 61
    2f28:	de b7       	in	r29, 0x3e	; 62
    2f2a:	e2 e1       	ldi	r30, 0x12	; 18
    2f2c:	0c 94 a2 1d 	jmp	0x3b44	; 0x3b44 <__epilogue_restores__>

00002f30 <__subsf3>:
    2f30:	a0 e2       	ldi	r26, 0x20	; 32
    2f32:	b0 e0       	ldi	r27, 0x00	; 0
    2f34:	ee e9       	ldi	r30, 0x9E	; 158
    2f36:	f7 e1       	ldi	r31, 0x17	; 23
    2f38:	0c 94 92 1d 	jmp	0x3b24	; 0x3b24 <__prologue_saves__+0x18>
    2f3c:	69 83       	std	Y+1, r22	; 0x01
    2f3e:	7a 83       	std	Y+2, r23	; 0x02
    2f40:	8b 83       	std	Y+3, r24	; 0x03
    2f42:	9c 83       	std	Y+4, r25	; 0x04
    2f44:	2d 83       	std	Y+5, r18	; 0x05
    2f46:	3e 83       	std	Y+6, r19	; 0x06
    2f48:	4f 83       	std	Y+7, r20	; 0x07
    2f4a:	58 87       	std	Y+8, r21	; 0x08
    2f4c:	e9 e0       	ldi	r30, 0x09	; 9
    2f4e:	ee 2e       	mov	r14, r30
    2f50:	f1 2c       	mov	r15, r1
    2f52:	ec 0e       	add	r14, r28
    2f54:	fd 1e       	adc	r15, r29
    2f56:	ce 01       	movw	r24, r28
    2f58:	01 96       	adiw	r24, 0x01	; 1
    2f5a:	b7 01       	movw	r22, r14
    2f5c:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    2f60:	8e 01       	movw	r16, r28
    2f62:	0f 5e       	subi	r16, 0xEF	; 239
    2f64:	1f 4f       	sbci	r17, 0xFF	; 255
    2f66:	ce 01       	movw	r24, r28
    2f68:	05 96       	adiw	r24, 0x05	; 5
    2f6a:	b8 01       	movw	r22, r16
    2f6c:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    2f70:	8a 89       	ldd	r24, Y+18	; 0x12
    2f72:	91 e0       	ldi	r25, 0x01	; 1
    2f74:	89 27       	eor	r24, r25
    2f76:	8a 8b       	std	Y+18, r24	; 0x12
    2f78:	c7 01       	movw	r24, r14
    2f7a:	b8 01       	movw	r22, r16
    2f7c:	ae 01       	movw	r20, r28
    2f7e:	47 5e       	subi	r20, 0xE7	; 231
    2f80:	5f 4f       	sbci	r21, 0xFF	; 255
    2f82:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <_fpadd_parts>
    2f86:	0e 94 a6 1b 	call	0x374c	; 0x374c <__pack_f>
    2f8a:	a0 96       	adiw	r28, 0x20	; 32
    2f8c:	e6 e0       	ldi	r30, 0x06	; 6
    2f8e:	0c 94 ae 1d 	jmp	0x3b5c	; 0x3b5c <__epilogue_restores__+0x18>

00002f92 <__addsf3>:
    2f92:	a0 e2       	ldi	r26, 0x20	; 32
    2f94:	b0 e0       	ldi	r27, 0x00	; 0
    2f96:	ef ec       	ldi	r30, 0xCF	; 207
    2f98:	f7 e1       	ldi	r31, 0x17	; 23
    2f9a:	0c 94 92 1d 	jmp	0x3b24	; 0x3b24 <__prologue_saves__+0x18>
    2f9e:	69 83       	std	Y+1, r22	; 0x01
    2fa0:	7a 83       	std	Y+2, r23	; 0x02
    2fa2:	8b 83       	std	Y+3, r24	; 0x03
    2fa4:	9c 83       	std	Y+4, r25	; 0x04
    2fa6:	2d 83       	std	Y+5, r18	; 0x05
    2fa8:	3e 83       	std	Y+6, r19	; 0x06
    2faa:	4f 83       	std	Y+7, r20	; 0x07
    2fac:	58 87       	std	Y+8, r21	; 0x08
    2fae:	f9 e0       	ldi	r31, 0x09	; 9
    2fb0:	ef 2e       	mov	r14, r31
    2fb2:	f1 2c       	mov	r15, r1
    2fb4:	ec 0e       	add	r14, r28
    2fb6:	fd 1e       	adc	r15, r29
    2fb8:	ce 01       	movw	r24, r28
    2fba:	01 96       	adiw	r24, 0x01	; 1
    2fbc:	b7 01       	movw	r22, r14
    2fbe:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    2fc2:	8e 01       	movw	r16, r28
    2fc4:	0f 5e       	subi	r16, 0xEF	; 239
    2fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    2fc8:	ce 01       	movw	r24, r28
    2fca:	05 96       	adiw	r24, 0x05	; 5
    2fcc:	b8 01       	movw	r22, r16
    2fce:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    2fd2:	c7 01       	movw	r24, r14
    2fd4:	b8 01       	movw	r22, r16
    2fd6:	ae 01       	movw	r20, r28
    2fd8:	47 5e       	subi	r20, 0xE7	; 231
    2fda:	5f 4f       	sbci	r21, 0xFF	; 255
    2fdc:	0e 94 4c 16 	call	0x2c98	; 0x2c98 <_fpadd_parts>
    2fe0:	0e 94 a6 1b 	call	0x374c	; 0x374c <__pack_f>
    2fe4:	a0 96       	adiw	r28, 0x20	; 32
    2fe6:	e6 e0       	ldi	r30, 0x06	; 6
    2fe8:	0c 94 ae 1d 	jmp	0x3b5c	; 0x3b5c <__epilogue_restores__+0x18>

00002fec <__mulsf3>:
    2fec:	a0 e2       	ldi	r26, 0x20	; 32
    2fee:	b0 e0       	ldi	r27, 0x00	; 0
    2ff0:	ec ef       	ldi	r30, 0xFC	; 252
    2ff2:	f7 e1       	ldi	r31, 0x17	; 23
    2ff4:	0c 94 86 1d 	jmp	0x3b0c	; 0x3b0c <__prologue_saves__>
    2ff8:	69 83       	std	Y+1, r22	; 0x01
    2ffa:	7a 83       	std	Y+2, r23	; 0x02
    2ffc:	8b 83       	std	Y+3, r24	; 0x03
    2ffe:	9c 83       	std	Y+4, r25	; 0x04
    3000:	2d 83       	std	Y+5, r18	; 0x05
    3002:	3e 83       	std	Y+6, r19	; 0x06
    3004:	4f 83       	std	Y+7, r20	; 0x07
    3006:	58 87       	std	Y+8, r21	; 0x08
    3008:	ce 01       	movw	r24, r28
    300a:	01 96       	adiw	r24, 0x01	; 1
    300c:	be 01       	movw	r22, r28
    300e:	67 5f       	subi	r22, 0xF7	; 247
    3010:	7f 4f       	sbci	r23, 0xFF	; 255
    3012:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3016:	ce 01       	movw	r24, r28
    3018:	05 96       	adiw	r24, 0x05	; 5
    301a:	be 01       	movw	r22, r28
    301c:	6f 5e       	subi	r22, 0xEF	; 239
    301e:	7f 4f       	sbci	r23, 0xFF	; 255
    3020:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3024:	99 85       	ldd	r25, Y+9	; 0x09
    3026:	92 30       	cpi	r25, 0x02	; 2
    3028:	88 f0       	brcs	.+34     	; 0x304c <__mulsf3+0x60>
    302a:	89 89       	ldd	r24, Y+17	; 0x11
    302c:	82 30       	cpi	r24, 0x02	; 2
    302e:	c8 f0       	brcs	.+50     	; 0x3062 <__mulsf3+0x76>
    3030:	94 30       	cpi	r25, 0x04	; 4
    3032:	19 f4       	brne	.+6      	; 0x303a <__mulsf3+0x4e>
    3034:	82 30       	cpi	r24, 0x02	; 2
    3036:	51 f4       	brne	.+20     	; 0x304c <__mulsf3+0x60>
    3038:	04 c0       	rjmp	.+8      	; 0x3042 <__mulsf3+0x56>
    303a:	84 30       	cpi	r24, 0x04	; 4
    303c:	29 f4       	brne	.+10     	; 0x3048 <__mulsf3+0x5c>
    303e:	92 30       	cpi	r25, 0x02	; 2
    3040:	81 f4       	brne	.+32     	; 0x3062 <__mulsf3+0x76>
    3042:	86 ed       	ldi	r24, 0xD6	; 214
    3044:	92 e0       	ldi	r25, 0x02	; 2
    3046:	c6 c0       	rjmp	.+396    	; 0x31d4 <__mulsf3+0x1e8>
    3048:	92 30       	cpi	r25, 0x02	; 2
    304a:	49 f4       	brne	.+18     	; 0x305e <__mulsf3+0x72>
    304c:	20 e0       	ldi	r18, 0x00	; 0
    304e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3050:	8a 89       	ldd	r24, Y+18	; 0x12
    3052:	98 13       	cpse	r25, r24
    3054:	21 e0       	ldi	r18, 0x01	; 1
    3056:	2a 87       	std	Y+10, r18	; 0x0a
    3058:	ce 01       	movw	r24, r28
    305a:	09 96       	adiw	r24, 0x09	; 9
    305c:	bb c0       	rjmp	.+374    	; 0x31d4 <__mulsf3+0x1e8>
    305e:	82 30       	cpi	r24, 0x02	; 2
    3060:	49 f4       	brne	.+18     	; 0x3074 <__mulsf3+0x88>
    3062:	20 e0       	ldi	r18, 0x00	; 0
    3064:	9a 85       	ldd	r25, Y+10	; 0x0a
    3066:	8a 89       	ldd	r24, Y+18	; 0x12
    3068:	98 13       	cpse	r25, r24
    306a:	21 e0       	ldi	r18, 0x01	; 1
    306c:	2a 8b       	std	Y+18, r18	; 0x12
    306e:	ce 01       	movw	r24, r28
    3070:	41 96       	adiw	r24, 0x11	; 17
    3072:	b0 c0       	rjmp	.+352    	; 0x31d4 <__mulsf3+0x1e8>
    3074:	2d 84       	ldd	r2, Y+13	; 0x0d
    3076:	3e 84       	ldd	r3, Y+14	; 0x0e
    3078:	4f 84       	ldd	r4, Y+15	; 0x0f
    307a:	58 88       	ldd	r5, Y+16	; 0x10
    307c:	6d 88       	ldd	r6, Y+21	; 0x15
    307e:	7e 88       	ldd	r7, Y+22	; 0x16
    3080:	8f 88       	ldd	r8, Y+23	; 0x17
    3082:	98 8c       	ldd	r9, Y+24	; 0x18
    3084:	ee 24       	eor	r14, r14
    3086:	ff 24       	eor	r15, r15
    3088:	87 01       	movw	r16, r14
    308a:	aa 24       	eor	r10, r10
    308c:	bb 24       	eor	r11, r11
    308e:	65 01       	movw	r12, r10
    3090:	40 e0       	ldi	r20, 0x00	; 0
    3092:	50 e0       	ldi	r21, 0x00	; 0
    3094:	60 e0       	ldi	r22, 0x00	; 0
    3096:	70 e0       	ldi	r23, 0x00	; 0
    3098:	e0 e0       	ldi	r30, 0x00	; 0
    309a:	f0 e0       	ldi	r31, 0x00	; 0
    309c:	c1 01       	movw	r24, r2
    309e:	81 70       	andi	r24, 0x01	; 1
    30a0:	90 70       	andi	r25, 0x00	; 0
    30a2:	89 2b       	or	r24, r25
    30a4:	e9 f0       	breq	.+58     	; 0x30e0 <__mulsf3+0xf4>
    30a6:	e6 0c       	add	r14, r6
    30a8:	f7 1c       	adc	r15, r7
    30aa:	08 1d       	adc	r16, r8
    30ac:	19 1d       	adc	r17, r9
    30ae:	9a 01       	movw	r18, r20
    30b0:	ab 01       	movw	r20, r22
    30b2:	2a 0d       	add	r18, r10
    30b4:	3b 1d       	adc	r19, r11
    30b6:	4c 1d       	adc	r20, r12
    30b8:	5d 1d       	adc	r21, r13
    30ba:	80 e0       	ldi	r24, 0x00	; 0
    30bc:	90 e0       	ldi	r25, 0x00	; 0
    30be:	a0 e0       	ldi	r26, 0x00	; 0
    30c0:	b0 e0       	ldi	r27, 0x00	; 0
    30c2:	e6 14       	cp	r14, r6
    30c4:	f7 04       	cpc	r15, r7
    30c6:	08 05       	cpc	r16, r8
    30c8:	19 05       	cpc	r17, r9
    30ca:	20 f4       	brcc	.+8      	; 0x30d4 <__mulsf3+0xe8>
    30cc:	81 e0       	ldi	r24, 0x01	; 1
    30ce:	90 e0       	ldi	r25, 0x00	; 0
    30d0:	a0 e0       	ldi	r26, 0x00	; 0
    30d2:	b0 e0       	ldi	r27, 0x00	; 0
    30d4:	ba 01       	movw	r22, r20
    30d6:	a9 01       	movw	r20, r18
    30d8:	48 0f       	add	r20, r24
    30da:	59 1f       	adc	r21, r25
    30dc:	6a 1f       	adc	r22, r26
    30de:	7b 1f       	adc	r23, r27
    30e0:	aa 0c       	add	r10, r10
    30e2:	bb 1c       	adc	r11, r11
    30e4:	cc 1c       	adc	r12, r12
    30e6:	dd 1c       	adc	r13, r13
    30e8:	97 fe       	sbrs	r9, 7
    30ea:	08 c0       	rjmp	.+16     	; 0x30fc <__mulsf3+0x110>
    30ec:	81 e0       	ldi	r24, 0x01	; 1
    30ee:	90 e0       	ldi	r25, 0x00	; 0
    30f0:	a0 e0       	ldi	r26, 0x00	; 0
    30f2:	b0 e0       	ldi	r27, 0x00	; 0
    30f4:	a8 2a       	or	r10, r24
    30f6:	b9 2a       	or	r11, r25
    30f8:	ca 2a       	or	r12, r26
    30fa:	db 2a       	or	r13, r27
    30fc:	31 96       	adiw	r30, 0x01	; 1
    30fe:	e0 32       	cpi	r30, 0x20	; 32
    3100:	f1 05       	cpc	r31, r1
    3102:	49 f0       	breq	.+18     	; 0x3116 <__mulsf3+0x12a>
    3104:	66 0c       	add	r6, r6
    3106:	77 1c       	adc	r7, r7
    3108:	88 1c       	adc	r8, r8
    310a:	99 1c       	adc	r9, r9
    310c:	56 94       	lsr	r5
    310e:	47 94       	ror	r4
    3110:	37 94       	ror	r3
    3112:	27 94       	ror	r2
    3114:	c3 cf       	rjmp	.-122    	; 0x309c <__mulsf3+0xb0>
    3116:	fa 85       	ldd	r31, Y+10	; 0x0a
    3118:	ea 89       	ldd	r30, Y+18	; 0x12
    311a:	2b 89       	ldd	r18, Y+19	; 0x13
    311c:	3c 89       	ldd	r19, Y+20	; 0x14
    311e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3120:	9c 85       	ldd	r25, Y+12	; 0x0c
    3122:	28 0f       	add	r18, r24
    3124:	39 1f       	adc	r19, r25
    3126:	2e 5f       	subi	r18, 0xFE	; 254
    3128:	3f 4f       	sbci	r19, 0xFF	; 255
    312a:	17 c0       	rjmp	.+46     	; 0x315a <__mulsf3+0x16e>
    312c:	ca 01       	movw	r24, r20
    312e:	81 70       	andi	r24, 0x01	; 1
    3130:	90 70       	andi	r25, 0x00	; 0
    3132:	89 2b       	or	r24, r25
    3134:	61 f0       	breq	.+24     	; 0x314e <__mulsf3+0x162>
    3136:	16 95       	lsr	r17
    3138:	07 95       	ror	r16
    313a:	f7 94       	ror	r15
    313c:	e7 94       	ror	r14
    313e:	80 e0       	ldi	r24, 0x00	; 0
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	a0 e0       	ldi	r26, 0x00	; 0
    3144:	b0 e8       	ldi	r27, 0x80	; 128
    3146:	e8 2a       	or	r14, r24
    3148:	f9 2a       	or	r15, r25
    314a:	0a 2b       	or	r16, r26
    314c:	1b 2b       	or	r17, r27
    314e:	76 95       	lsr	r23
    3150:	67 95       	ror	r22
    3152:	57 95       	ror	r21
    3154:	47 95       	ror	r20
    3156:	2f 5f       	subi	r18, 0xFF	; 255
    3158:	3f 4f       	sbci	r19, 0xFF	; 255
    315a:	77 fd       	sbrc	r23, 7
    315c:	e7 cf       	rjmp	.-50     	; 0x312c <__mulsf3+0x140>
    315e:	0c c0       	rjmp	.+24     	; 0x3178 <__mulsf3+0x18c>
    3160:	44 0f       	add	r20, r20
    3162:	55 1f       	adc	r21, r21
    3164:	66 1f       	adc	r22, r22
    3166:	77 1f       	adc	r23, r23
    3168:	17 fd       	sbrc	r17, 7
    316a:	41 60       	ori	r20, 0x01	; 1
    316c:	ee 0c       	add	r14, r14
    316e:	ff 1c       	adc	r15, r15
    3170:	00 1f       	adc	r16, r16
    3172:	11 1f       	adc	r17, r17
    3174:	21 50       	subi	r18, 0x01	; 1
    3176:	30 40       	sbci	r19, 0x00	; 0
    3178:	40 30       	cpi	r20, 0x00	; 0
    317a:	90 e0       	ldi	r25, 0x00	; 0
    317c:	59 07       	cpc	r21, r25
    317e:	90 e0       	ldi	r25, 0x00	; 0
    3180:	69 07       	cpc	r22, r25
    3182:	90 e4       	ldi	r25, 0x40	; 64
    3184:	79 07       	cpc	r23, r25
    3186:	60 f3       	brcs	.-40     	; 0x3160 <__mulsf3+0x174>
    3188:	2b 8f       	std	Y+27, r18	; 0x1b
    318a:	3c 8f       	std	Y+28, r19	; 0x1c
    318c:	db 01       	movw	r26, r22
    318e:	ca 01       	movw	r24, r20
    3190:	8f 77       	andi	r24, 0x7F	; 127
    3192:	90 70       	andi	r25, 0x00	; 0
    3194:	a0 70       	andi	r26, 0x00	; 0
    3196:	b0 70       	andi	r27, 0x00	; 0
    3198:	80 34       	cpi	r24, 0x40	; 64
    319a:	91 05       	cpc	r25, r1
    319c:	a1 05       	cpc	r26, r1
    319e:	b1 05       	cpc	r27, r1
    31a0:	61 f4       	brne	.+24     	; 0x31ba <__mulsf3+0x1ce>
    31a2:	47 fd       	sbrc	r20, 7
    31a4:	0a c0       	rjmp	.+20     	; 0x31ba <__mulsf3+0x1ce>
    31a6:	e1 14       	cp	r14, r1
    31a8:	f1 04       	cpc	r15, r1
    31aa:	01 05       	cpc	r16, r1
    31ac:	11 05       	cpc	r17, r1
    31ae:	29 f0       	breq	.+10     	; 0x31ba <__mulsf3+0x1ce>
    31b0:	40 5c       	subi	r20, 0xC0	; 192
    31b2:	5f 4f       	sbci	r21, 0xFF	; 255
    31b4:	6f 4f       	sbci	r22, 0xFF	; 255
    31b6:	7f 4f       	sbci	r23, 0xFF	; 255
    31b8:	40 78       	andi	r20, 0x80	; 128
    31ba:	1a 8e       	std	Y+26, r1	; 0x1a
    31bc:	fe 17       	cp	r31, r30
    31be:	11 f0       	breq	.+4      	; 0x31c4 <__mulsf3+0x1d8>
    31c0:	81 e0       	ldi	r24, 0x01	; 1
    31c2:	8a 8f       	std	Y+26, r24	; 0x1a
    31c4:	4d 8f       	std	Y+29, r20	; 0x1d
    31c6:	5e 8f       	std	Y+30, r21	; 0x1e
    31c8:	6f 8f       	std	Y+31, r22	; 0x1f
    31ca:	78 a3       	std	Y+32, r23	; 0x20
    31cc:	83 e0       	ldi	r24, 0x03	; 3
    31ce:	89 8f       	std	Y+25, r24	; 0x19
    31d0:	ce 01       	movw	r24, r28
    31d2:	49 96       	adiw	r24, 0x19	; 25
    31d4:	0e 94 a6 1b 	call	0x374c	; 0x374c <__pack_f>
    31d8:	a0 96       	adiw	r28, 0x20	; 32
    31da:	e2 e1       	ldi	r30, 0x12	; 18
    31dc:	0c 94 a2 1d 	jmp	0x3b44	; 0x3b44 <__epilogue_restores__>

000031e0 <__divsf3>:
    31e0:	a8 e1       	ldi	r26, 0x18	; 24
    31e2:	b0 e0       	ldi	r27, 0x00	; 0
    31e4:	e6 ef       	ldi	r30, 0xF6	; 246
    31e6:	f8 e1       	ldi	r31, 0x18	; 24
    31e8:	0c 94 8e 1d 	jmp	0x3b1c	; 0x3b1c <__prologue_saves__+0x10>
    31ec:	69 83       	std	Y+1, r22	; 0x01
    31ee:	7a 83       	std	Y+2, r23	; 0x02
    31f0:	8b 83       	std	Y+3, r24	; 0x03
    31f2:	9c 83       	std	Y+4, r25	; 0x04
    31f4:	2d 83       	std	Y+5, r18	; 0x05
    31f6:	3e 83       	std	Y+6, r19	; 0x06
    31f8:	4f 83       	std	Y+7, r20	; 0x07
    31fa:	58 87       	std	Y+8, r21	; 0x08
    31fc:	b9 e0       	ldi	r27, 0x09	; 9
    31fe:	eb 2e       	mov	r14, r27
    3200:	f1 2c       	mov	r15, r1
    3202:	ec 0e       	add	r14, r28
    3204:	fd 1e       	adc	r15, r29
    3206:	ce 01       	movw	r24, r28
    3208:	01 96       	adiw	r24, 0x01	; 1
    320a:	b7 01       	movw	r22, r14
    320c:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3210:	8e 01       	movw	r16, r28
    3212:	0f 5e       	subi	r16, 0xEF	; 239
    3214:	1f 4f       	sbci	r17, 0xFF	; 255
    3216:	ce 01       	movw	r24, r28
    3218:	05 96       	adiw	r24, 0x05	; 5
    321a:	b8 01       	movw	r22, r16
    321c:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3220:	29 85       	ldd	r18, Y+9	; 0x09
    3222:	22 30       	cpi	r18, 0x02	; 2
    3224:	08 f4       	brcc	.+2      	; 0x3228 <__divsf3+0x48>
    3226:	7e c0       	rjmp	.+252    	; 0x3324 <__divsf3+0x144>
    3228:	39 89       	ldd	r19, Y+17	; 0x11
    322a:	32 30       	cpi	r19, 0x02	; 2
    322c:	10 f4       	brcc	.+4      	; 0x3232 <__divsf3+0x52>
    322e:	b8 01       	movw	r22, r16
    3230:	7c c0       	rjmp	.+248    	; 0x332a <__divsf3+0x14a>
    3232:	8a 85       	ldd	r24, Y+10	; 0x0a
    3234:	9a 89       	ldd	r25, Y+18	; 0x12
    3236:	89 27       	eor	r24, r25
    3238:	8a 87       	std	Y+10, r24	; 0x0a
    323a:	24 30       	cpi	r18, 0x04	; 4
    323c:	11 f0       	breq	.+4      	; 0x3242 <__divsf3+0x62>
    323e:	22 30       	cpi	r18, 0x02	; 2
    3240:	31 f4       	brne	.+12     	; 0x324e <__divsf3+0x6e>
    3242:	23 17       	cp	r18, r19
    3244:	09 f0       	breq	.+2      	; 0x3248 <__divsf3+0x68>
    3246:	6e c0       	rjmp	.+220    	; 0x3324 <__divsf3+0x144>
    3248:	66 ed       	ldi	r22, 0xD6	; 214
    324a:	72 e0       	ldi	r23, 0x02	; 2
    324c:	6e c0       	rjmp	.+220    	; 0x332a <__divsf3+0x14a>
    324e:	34 30       	cpi	r19, 0x04	; 4
    3250:	39 f4       	brne	.+14     	; 0x3260 <__divsf3+0x80>
    3252:	1d 86       	std	Y+13, r1	; 0x0d
    3254:	1e 86       	std	Y+14, r1	; 0x0e
    3256:	1f 86       	std	Y+15, r1	; 0x0f
    3258:	18 8a       	std	Y+16, r1	; 0x10
    325a:	1c 86       	std	Y+12, r1	; 0x0c
    325c:	1b 86       	std	Y+11, r1	; 0x0b
    325e:	04 c0       	rjmp	.+8      	; 0x3268 <__divsf3+0x88>
    3260:	32 30       	cpi	r19, 0x02	; 2
    3262:	21 f4       	brne	.+8      	; 0x326c <__divsf3+0x8c>
    3264:	84 e0       	ldi	r24, 0x04	; 4
    3266:	89 87       	std	Y+9, r24	; 0x09
    3268:	b7 01       	movw	r22, r14
    326a:	5f c0       	rjmp	.+190    	; 0x332a <__divsf3+0x14a>
    326c:	2b 85       	ldd	r18, Y+11	; 0x0b
    326e:	3c 85       	ldd	r19, Y+12	; 0x0c
    3270:	8b 89       	ldd	r24, Y+19	; 0x13
    3272:	9c 89       	ldd	r25, Y+20	; 0x14
    3274:	28 1b       	sub	r18, r24
    3276:	39 0b       	sbc	r19, r25
    3278:	3c 87       	std	Y+12, r19	; 0x0c
    327a:	2b 87       	std	Y+11, r18	; 0x0b
    327c:	ed 84       	ldd	r14, Y+13	; 0x0d
    327e:	fe 84       	ldd	r15, Y+14	; 0x0e
    3280:	0f 85       	ldd	r16, Y+15	; 0x0f
    3282:	18 89       	ldd	r17, Y+16	; 0x10
    3284:	ad 88       	ldd	r10, Y+21	; 0x15
    3286:	be 88       	ldd	r11, Y+22	; 0x16
    3288:	cf 88       	ldd	r12, Y+23	; 0x17
    328a:	d8 8c       	ldd	r13, Y+24	; 0x18
    328c:	ea 14       	cp	r14, r10
    328e:	fb 04       	cpc	r15, r11
    3290:	0c 05       	cpc	r16, r12
    3292:	1d 05       	cpc	r17, r13
    3294:	40 f4       	brcc	.+16     	; 0x32a6 <__divsf3+0xc6>
    3296:	ee 0c       	add	r14, r14
    3298:	ff 1c       	adc	r15, r15
    329a:	00 1f       	adc	r16, r16
    329c:	11 1f       	adc	r17, r17
    329e:	21 50       	subi	r18, 0x01	; 1
    32a0:	30 40       	sbci	r19, 0x00	; 0
    32a2:	3c 87       	std	Y+12, r19	; 0x0c
    32a4:	2b 87       	std	Y+11, r18	; 0x0b
    32a6:	20 e0       	ldi	r18, 0x00	; 0
    32a8:	30 e0       	ldi	r19, 0x00	; 0
    32aa:	40 e0       	ldi	r20, 0x00	; 0
    32ac:	50 e0       	ldi	r21, 0x00	; 0
    32ae:	80 e0       	ldi	r24, 0x00	; 0
    32b0:	90 e0       	ldi	r25, 0x00	; 0
    32b2:	a0 e0       	ldi	r26, 0x00	; 0
    32b4:	b0 e4       	ldi	r27, 0x40	; 64
    32b6:	60 e0       	ldi	r22, 0x00	; 0
    32b8:	70 e0       	ldi	r23, 0x00	; 0
    32ba:	ea 14       	cp	r14, r10
    32bc:	fb 04       	cpc	r15, r11
    32be:	0c 05       	cpc	r16, r12
    32c0:	1d 05       	cpc	r17, r13
    32c2:	40 f0       	brcs	.+16     	; 0x32d4 <__divsf3+0xf4>
    32c4:	28 2b       	or	r18, r24
    32c6:	39 2b       	or	r19, r25
    32c8:	4a 2b       	or	r20, r26
    32ca:	5b 2b       	or	r21, r27
    32cc:	ea 18       	sub	r14, r10
    32ce:	fb 08       	sbc	r15, r11
    32d0:	0c 09       	sbc	r16, r12
    32d2:	1d 09       	sbc	r17, r13
    32d4:	b6 95       	lsr	r27
    32d6:	a7 95       	ror	r26
    32d8:	97 95       	ror	r25
    32da:	87 95       	ror	r24
    32dc:	ee 0c       	add	r14, r14
    32de:	ff 1c       	adc	r15, r15
    32e0:	00 1f       	adc	r16, r16
    32e2:	11 1f       	adc	r17, r17
    32e4:	6f 5f       	subi	r22, 0xFF	; 255
    32e6:	7f 4f       	sbci	r23, 0xFF	; 255
    32e8:	6f 31       	cpi	r22, 0x1F	; 31
    32ea:	71 05       	cpc	r23, r1
    32ec:	31 f7       	brne	.-52     	; 0x32ba <__divsf3+0xda>
    32ee:	da 01       	movw	r26, r20
    32f0:	c9 01       	movw	r24, r18
    32f2:	8f 77       	andi	r24, 0x7F	; 127
    32f4:	90 70       	andi	r25, 0x00	; 0
    32f6:	a0 70       	andi	r26, 0x00	; 0
    32f8:	b0 70       	andi	r27, 0x00	; 0
    32fa:	80 34       	cpi	r24, 0x40	; 64
    32fc:	91 05       	cpc	r25, r1
    32fe:	a1 05       	cpc	r26, r1
    3300:	b1 05       	cpc	r27, r1
    3302:	61 f4       	brne	.+24     	; 0x331c <__divsf3+0x13c>
    3304:	27 fd       	sbrc	r18, 7
    3306:	0a c0       	rjmp	.+20     	; 0x331c <__divsf3+0x13c>
    3308:	e1 14       	cp	r14, r1
    330a:	f1 04       	cpc	r15, r1
    330c:	01 05       	cpc	r16, r1
    330e:	11 05       	cpc	r17, r1
    3310:	29 f0       	breq	.+10     	; 0x331c <__divsf3+0x13c>
    3312:	20 5c       	subi	r18, 0xC0	; 192
    3314:	3f 4f       	sbci	r19, 0xFF	; 255
    3316:	4f 4f       	sbci	r20, 0xFF	; 255
    3318:	5f 4f       	sbci	r21, 0xFF	; 255
    331a:	20 78       	andi	r18, 0x80	; 128
    331c:	2d 87       	std	Y+13, r18	; 0x0d
    331e:	3e 87       	std	Y+14, r19	; 0x0e
    3320:	4f 87       	std	Y+15, r20	; 0x0f
    3322:	58 8b       	std	Y+16, r21	; 0x10
    3324:	be 01       	movw	r22, r28
    3326:	67 5f       	subi	r22, 0xF7	; 247
    3328:	7f 4f       	sbci	r23, 0xFF	; 255
    332a:	cb 01       	movw	r24, r22
    332c:	0e 94 a6 1b 	call	0x374c	; 0x374c <__pack_f>
    3330:	68 96       	adiw	r28, 0x18	; 24
    3332:	ea e0       	ldi	r30, 0x0A	; 10
    3334:	0c 94 aa 1d 	jmp	0x3b54	; 0x3b54 <__epilogue_restores__+0x10>

00003338 <__gtsf2>:
    3338:	a8 e1       	ldi	r26, 0x18	; 24
    333a:	b0 e0       	ldi	r27, 0x00	; 0
    333c:	e2 ea       	ldi	r30, 0xA2	; 162
    333e:	f9 e1       	ldi	r31, 0x19	; 25
    3340:	0c 94 92 1d 	jmp	0x3b24	; 0x3b24 <__prologue_saves__+0x18>
    3344:	69 83       	std	Y+1, r22	; 0x01
    3346:	7a 83       	std	Y+2, r23	; 0x02
    3348:	8b 83       	std	Y+3, r24	; 0x03
    334a:	9c 83       	std	Y+4, r25	; 0x04
    334c:	2d 83       	std	Y+5, r18	; 0x05
    334e:	3e 83       	std	Y+6, r19	; 0x06
    3350:	4f 83       	std	Y+7, r20	; 0x07
    3352:	58 87       	std	Y+8, r21	; 0x08
    3354:	89 e0       	ldi	r24, 0x09	; 9
    3356:	e8 2e       	mov	r14, r24
    3358:	f1 2c       	mov	r15, r1
    335a:	ec 0e       	add	r14, r28
    335c:	fd 1e       	adc	r15, r29
    335e:	ce 01       	movw	r24, r28
    3360:	01 96       	adiw	r24, 0x01	; 1
    3362:	b7 01       	movw	r22, r14
    3364:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3368:	8e 01       	movw	r16, r28
    336a:	0f 5e       	subi	r16, 0xEF	; 239
    336c:	1f 4f       	sbci	r17, 0xFF	; 255
    336e:	ce 01       	movw	r24, r28
    3370:	05 96       	adiw	r24, 0x05	; 5
    3372:	b8 01       	movw	r22, r16
    3374:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3378:	89 85       	ldd	r24, Y+9	; 0x09
    337a:	82 30       	cpi	r24, 0x02	; 2
    337c:	40 f0       	brcs	.+16     	; 0x338e <__gtsf2+0x56>
    337e:	89 89       	ldd	r24, Y+17	; 0x11
    3380:	82 30       	cpi	r24, 0x02	; 2
    3382:	28 f0       	brcs	.+10     	; 0x338e <__gtsf2+0x56>
    3384:	c7 01       	movw	r24, r14
    3386:	b8 01       	movw	r22, r16
    3388:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <__fpcmp_parts_f>
    338c:	01 c0       	rjmp	.+2      	; 0x3390 <__gtsf2+0x58>
    338e:	8f ef       	ldi	r24, 0xFF	; 255
    3390:	68 96       	adiw	r28, 0x18	; 24
    3392:	e6 e0       	ldi	r30, 0x06	; 6
    3394:	0c 94 ae 1d 	jmp	0x3b5c	; 0x3b5c <__epilogue_restores__+0x18>

00003398 <__gesf2>:
    3398:	a8 e1       	ldi	r26, 0x18	; 24
    339a:	b0 e0       	ldi	r27, 0x00	; 0
    339c:	e2 ed       	ldi	r30, 0xD2	; 210
    339e:	f9 e1       	ldi	r31, 0x19	; 25
    33a0:	0c 94 92 1d 	jmp	0x3b24	; 0x3b24 <__prologue_saves__+0x18>
    33a4:	69 83       	std	Y+1, r22	; 0x01
    33a6:	7a 83       	std	Y+2, r23	; 0x02
    33a8:	8b 83       	std	Y+3, r24	; 0x03
    33aa:	9c 83       	std	Y+4, r25	; 0x04
    33ac:	2d 83       	std	Y+5, r18	; 0x05
    33ae:	3e 83       	std	Y+6, r19	; 0x06
    33b0:	4f 83       	std	Y+7, r20	; 0x07
    33b2:	58 87       	std	Y+8, r21	; 0x08
    33b4:	89 e0       	ldi	r24, 0x09	; 9
    33b6:	e8 2e       	mov	r14, r24
    33b8:	f1 2c       	mov	r15, r1
    33ba:	ec 0e       	add	r14, r28
    33bc:	fd 1e       	adc	r15, r29
    33be:	ce 01       	movw	r24, r28
    33c0:	01 96       	adiw	r24, 0x01	; 1
    33c2:	b7 01       	movw	r22, r14
    33c4:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    33c8:	8e 01       	movw	r16, r28
    33ca:	0f 5e       	subi	r16, 0xEF	; 239
    33cc:	1f 4f       	sbci	r17, 0xFF	; 255
    33ce:	ce 01       	movw	r24, r28
    33d0:	05 96       	adiw	r24, 0x05	; 5
    33d2:	b8 01       	movw	r22, r16
    33d4:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    33d8:	89 85       	ldd	r24, Y+9	; 0x09
    33da:	82 30       	cpi	r24, 0x02	; 2
    33dc:	40 f0       	brcs	.+16     	; 0x33ee <__gesf2+0x56>
    33de:	89 89       	ldd	r24, Y+17	; 0x11
    33e0:	82 30       	cpi	r24, 0x02	; 2
    33e2:	28 f0       	brcs	.+10     	; 0x33ee <__gesf2+0x56>
    33e4:	c7 01       	movw	r24, r14
    33e6:	b8 01       	movw	r22, r16
    33e8:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <__fpcmp_parts_f>
    33ec:	01 c0       	rjmp	.+2      	; 0x33f0 <__gesf2+0x58>
    33ee:	8f ef       	ldi	r24, 0xFF	; 255
    33f0:	68 96       	adiw	r28, 0x18	; 24
    33f2:	e6 e0       	ldi	r30, 0x06	; 6
    33f4:	0c 94 ae 1d 	jmp	0x3b5c	; 0x3b5c <__epilogue_restores__+0x18>

000033f8 <__ltsf2>:
    33f8:	a8 e1       	ldi	r26, 0x18	; 24
    33fa:	b0 e0       	ldi	r27, 0x00	; 0
    33fc:	e2 e0       	ldi	r30, 0x02	; 2
    33fe:	fa e1       	ldi	r31, 0x1A	; 26
    3400:	0c 94 92 1d 	jmp	0x3b24	; 0x3b24 <__prologue_saves__+0x18>
    3404:	69 83       	std	Y+1, r22	; 0x01
    3406:	7a 83       	std	Y+2, r23	; 0x02
    3408:	8b 83       	std	Y+3, r24	; 0x03
    340a:	9c 83       	std	Y+4, r25	; 0x04
    340c:	2d 83       	std	Y+5, r18	; 0x05
    340e:	3e 83       	std	Y+6, r19	; 0x06
    3410:	4f 83       	std	Y+7, r20	; 0x07
    3412:	58 87       	std	Y+8, r21	; 0x08
    3414:	89 e0       	ldi	r24, 0x09	; 9
    3416:	e8 2e       	mov	r14, r24
    3418:	f1 2c       	mov	r15, r1
    341a:	ec 0e       	add	r14, r28
    341c:	fd 1e       	adc	r15, r29
    341e:	ce 01       	movw	r24, r28
    3420:	01 96       	adiw	r24, 0x01	; 1
    3422:	b7 01       	movw	r22, r14
    3424:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3428:	8e 01       	movw	r16, r28
    342a:	0f 5e       	subi	r16, 0xEF	; 239
    342c:	1f 4f       	sbci	r17, 0xFF	; 255
    342e:	ce 01       	movw	r24, r28
    3430:	05 96       	adiw	r24, 0x05	; 5
    3432:	b8 01       	movw	r22, r16
    3434:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3438:	89 85       	ldd	r24, Y+9	; 0x09
    343a:	82 30       	cpi	r24, 0x02	; 2
    343c:	40 f0       	brcs	.+16     	; 0x344e <__ltsf2+0x56>
    343e:	89 89       	ldd	r24, Y+17	; 0x11
    3440:	82 30       	cpi	r24, 0x02	; 2
    3442:	28 f0       	brcs	.+10     	; 0x344e <__ltsf2+0x56>
    3444:	c7 01       	movw	r24, r14
    3446:	b8 01       	movw	r22, r16
    3448:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <__fpcmp_parts_f>
    344c:	01 c0       	rjmp	.+2      	; 0x3450 <__ltsf2+0x58>
    344e:	81 e0       	ldi	r24, 0x01	; 1
    3450:	68 96       	adiw	r28, 0x18	; 24
    3452:	e6 e0       	ldi	r30, 0x06	; 6
    3454:	0c 94 ae 1d 	jmp	0x3b5c	; 0x3b5c <__epilogue_restores__+0x18>

00003458 <__floatsisf>:
    3458:	a8 e0       	ldi	r26, 0x08	; 8
    345a:	b0 e0       	ldi	r27, 0x00	; 0
    345c:	e2 e3       	ldi	r30, 0x32	; 50
    345e:	fa e1       	ldi	r31, 0x1A	; 26
    3460:	0c 94 8f 1d 	jmp	0x3b1e	; 0x3b1e <__prologue_saves__+0x12>
    3464:	9b 01       	movw	r18, r22
    3466:	ac 01       	movw	r20, r24
    3468:	83 e0       	ldi	r24, 0x03	; 3
    346a:	89 83       	std	Y+1, r24	; 0x01
    346c:	da 01       	movw	r26, r20
    346e:	c9 01       	movw	r24, r18
    3470:	88 27       	eor	r24, r24
    3472:	b7 fd       	sbrc	r27, 7
    3474:	83 95       	inc	r24
    3476:	99 27       	eor	r25, r25
    3478:	aa 27       	eor	r26, r26
    347a:	bb 27       	eor	r27, r27
    347c:	b8 2e       	mov	r11, r24
    347e:	21 15       	cp	r18, r1
    3480:	31 05       	cpc	r19, r1
    3482:	41 05       	cpc	r20, r1
    3484:	51 05       	cpc	r21, r1
    3486:	19 f4       	brne	.+6      	; 0x348e <__floatsisf+0x36>
    3488:	82 e0       	ldi	r24, 0x02	; 2
    348a:	89 83       	std	Y+1, r24	; 0x01
    348c:	3a c0       	rjmp	.+116    	; 0x3502 <__floatsisf+0xaa>
    348e:	88 23       	and	r24, r24
    3490:	a9 f0       	breq	.+42     	; 0x34bc <__floatsisf+0x64>
    3492:	20 30       	cpi	r18, 0x00	; 0
    3494:	80 e0       	ldi	r24, 0x00	; 0
    3496:	38 07       	cpc	r19, r24
    3498:	80 e0       	ldi	r24, 0x00	; 0
    349a:	48 07       	cpc	r20, r24
    349c:	80 e8       	ldi	r24, 0x80	; 128
    349e:	58 07       	cpc	r21, r24
    34a0:	29 f4       	brne	.+10     	; 0x34ac <__floatsisf+0x54>
    34a2:	60 e0       	ldi	r22, 0x00	; 0
    34a4:	70 e0       	ldi	r23, 0x00	; 0
    34a6:	80 e0       	ldi	r24, 0x00	; 0
    34a8:	9f ec       	ldi	r25, 0xCF	; 207
    34aa:	30 c0       	rjmp	.+96     	; 0x350c <__floatsisf+0xb4>
    34ac:	ee 24       	eor	r14, r14
    34ae:	ff 24       	eor	r15, r15
    34b0:	87 01       	movw	r16, r14
    34b2:	e2 1a       	sub	r14, r18
    34b4:	f3 0a       	sbc	r15, r19
    34b6:	04 0b       	sbc	r16, r20
    34b8:	15 0b       	sbc	r17, r21
    34ba:	02 c0       	rjmp	.+4      	; 0x34c0 <__floatsisf+0x68>
    34bc:	79 01       	movw	r14, r18
    34be:	8a 01       	movw	r16, r20
    34c0:	8e e1       	ldi	r24, 0x1E	; 30
    34c2:	c8 2e       	mov	r12, r24
    34c4:	d1 2c       	mov	r13, r1
    34c6:	dc 82       	std	Y+4, r13	; 0x04
    34c8:	cb 82       	std	Y+3, r12	; 0x03
    34ca:	ed 82       	std	Y+5, r14	; 0x05
    34cc:	fe 82       	std	Y+6, r15	; 0x06
    34ce:	0f 83       	std	Y+7, r16	; 0x07
    34d0:	18 87       	std	Y+8, r17	; 0x08
    34d2:	c8 01       	movw	r24, r16
    34d4:	b7 01       	movw	r22, r14
    34d6:	0e 94 57 1b 	call	0x36ae	; 0x36ae <__clzsi2>
    34da:	01 97       	sbiw	r24, 0x01	; 1
    34dc:	18 16       	cp	r1, r24
    34de:	19 06       	cpc	r1, r25
    34e0:	84 f4       	brge	.+32     	; 0x3502 <__floatsisf+0xaa>
    34e2:	08 2e       	mov	r0, r24
    34e4:	04 c0       	rjmp	.+8      	; 0x34ee <__floatsisf+0x96>
    34e6:	ee 0c       	add	r14, r14
    34e8:	ff 1c       	adc	r15, r15
    34ea:	00 1f       	adc	r16, r16
    34ec:	11 1f       	adc	r17, r17
    34ee:	0a 94       	dec	r0
    34f0:	d2 f7       	brpl	.-12     	; 0x34e6 <__floatsisf+0x8e>
    34f2:	ed 82       	std	Y+5, r14	; 0x05
    34f4:	fe 82       	std	Y+6, r15	; 0x06
    34f6:	0f 83       	std	Y+7, r16	; 0x07
    34f8:	18 87       	std	Y+8, r17	; 0x08
    34fa:	c8 1a       	sub	r12, r24
    34fc:	d9 0a       	sbc	r13, r25
    34fe:	dc 82       	std	Y+4, r13	; 0x04
    3500:	cb 82       	std	Y+3, r12	; 0x03
    3502:	ba 82       	std	Y+2, r11	; 0x02
    3504:	ce 01       	movw	r24, r28
    3506:	01 96       	adiw	r24, 0x01	; 1
    3508:	0e 94 a6 1b 	call	0x374c	; 0x374c <__pack_f>
    350c:	28 96       	adiw	r28, 0x08	; 8
    350e:	e9 e0       	ldi	r30, 0x09	; 9
    3510:	0c 94 ab 1d 	jmp	0x3b56	; 0x3b56 <__epilogue_restores__+0x12>

00003514 <__fixsfsi>:
    3514:	ac e0       	ldi	r26, 0x0C	; 12
    3516:	b0 e0       	ldi	r27, 0x00	; 0
    3518:	e0 e9       	ldi	r30, 0x90	; 144
    351a:	fa e1       	ldi	r31, 0x1A	; 26
    351c:	0c 94 96 1d 	jmp	0x3b2c	; 0x3b2c <__prologue_saves__+0x20>
    3520:	69 83       	std	Y+1, r22	; 0x01
    3522:	7a 83       	std	Y+2, r23	; 0x02
    3524:	8b 83       	std	Y+3, r24	; 0x03
    3526:	9c 83       	std	Y+4, r25	; 0x04
    3528:	ce 01       	movw	r24, r28
    352a:	01 96       	adiw	r24, 0x01	; 1
    352c:	be 01       	movw	r22, r28
    352e:	6b 5f       	subi	r22, 0xFB	; 251
    3530:	7f 4f       	sbci	r23, 0xFF	; 255
    3532:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <__unpack_f>
    3536:	8d 81       	ldd	r24, Y+5	; 0x05
    3538:	82 30       	cpi	r24, 0x02	; 2
    353a:	61 f1       	breq	.+88     	; 0x3594 <__fixsfsi+0x80>
    353c:	82 30       	cpi	r24, 0x02	; 2
    353e:	50 f1       	brcs	.+84     	; 0x3594 <__fixsfsi+0x80>
    3540:	84 30       	cpi	r24, 0x04	; 4
    3542:	21 f4       	brne	.+8      	; 0x354c <__fixsfsi+0x38>
    3544:	8e 81       	ldd	r24, Y+6	; 0x06
    3546:	88 23       	and	r24, r24
    3548:	51 f1       	breq	.+84     	; 0x359e <__fixsfsi+0x8a>
    354a:	2e c0       	rjmp	.+92     	; 0x35a8 <__fixsfsi+0x94>
    354c:	2f 81       	ldd	r18, Y+7	; 0x07
    354e:	38 85       	ldd	r19, Y+8	; 0x08
    3550:	37 fd       	sbrc	r19, 7
    3552:	20 c0       	rjmp	.+64     	; 0x3594 <__fixsfsi+0x80>
    3554:	6e 81       	ldd	r22, Y+6	; 0x06
    3556:	2f 31       	cpi	r18, 0x1F	; 31
    3558:	31 05       	cpc	r19, r1
    355a:	1c f0       	brlt	.+6      	; 0x3562 <__fixsfsi+0x4e>
    355c:	66 23       	and	r22, r22
    355e:	f9 f0       	breq	.+62     	; 0x359e <__fixsfsi+0x8a>
    3560:	23 c0       	rjmp	.+70     	; 0x35a8 <__fixsfsi+0x94>
    3562:	8e e1       	ldi	r24, 0x1E	; 30
    3564:	90 e0       	ldi	r25, 0x00	; 0
    3566:	82 1b       	sub	r24, r18
    3568:	93 0b       	sbc	r25, r19
    356a:	29 85       	ldd	r18, Y+9	; 0x09
    356c:	3a 85       	ldd	r19, Y+10	; 0x0a
    356e:	4b 85       	ldd	r20, Y+11	; 0x0b
    3570:	5c 85       	ldd	r21, Y+12	; 0x0c
    3572:	04 c0       	rjmp	.+8      	; 0x357c <__fixsfsi+0x68>
    3574:	56 95       	lsr	r21
    3576:	47 95       	ror	r20
    3578:	37 95       	ror	r19
    357a:	27 95       	ror	r18
    357c:	8a 95       	dec	r24
    357e:	d2 f7       	brpl	.-12     	; 0x3574 <__fixsfsi+0x60>
    3580:	66 23       	and	r22, r22
    3582:	b1 f0       	breq	.+44     	; 0x35b0 <__fixsfsi+0x9c>
    3584:	50 95       	com	r21
    3586:	40 95       	com	r20
    3588:	30 95       	com	r19
    358a:	21 95       	neg	r18
    358c:	3f 4f       	sbci	r19, 0xFF	; 255
    358e:	4f 4f       	sbci	r20, 0xFF	; 255
    3590:	5f 4f       	sbci	r21, 0xFF	; 255
    3592:	0e c0       	rjmp	.+28     	; 0x35b0 <__fixsfsi+0x9c>
    3594:	20 e0       	ldi	r18, 0x00	; 0
    3596:	30 e0       	ldi	r19, 0x00	; 0
    3598:	40 e0       	ldi	r20, 0x00	; 0
    359a:	50 e0       	ldi	r21, 0x00	; 0
    359c:	09 c0       	rjmp	.+18     	; 0x35b0 <__fixsfsi+0x9c>
    359e:	2f ef       	ldi	r18, 0xFF	; 255
    35a0:	3f ef       	ldi	r19, 0xFF	; 255
    35a2:	4f ef       	ldi	r20, 0xFF	; 255
    35a4:	5f e7       	ldi	r21, 0x7F	; 127
    35a6:	04 c0       	rjmp	.+8      	; 0x35b0 <__fixsfsi+0x9c>
    35a8:	20 e0       	ldi	r18, 0x00	; 0
    35aa:	30 e0       	ldi	r19, 0x00	; 0
    35ac:	40 e0       	ldi	r20, 0x00	; 0
    35ae:	50 e8       	ldi	r21, 0x80	; 128
    35b0:	b9 01       	movw	r22, r18
    35b2:	ca 01       	movw	r24, r20
    35b4:	2c 96       	adiw	r28, 0x0c	; 12
    35b6:	e2 e0       	ldi	r30, 0x02	; 2
    35b8:	0c 94 b2 1d 	jmp	0x3b64	; 0x3b64 <__epilogue_restores__+0x20>

000035bc <__floatunsisf>:
    35bc:	a8 e0       	ldi	r26, 0x08	; 8
    35be:	b0 e0       	ldi	r27, 0x00	; 0
    35c0:	e4 ee       	ldi	r30, 0xE4	; 228
    35c2:	fa e1       	ldi	r31, 0x1A	; 26
    35c4:	0c 94 8e 1d 	jmp	0x3b1c	; 0x3b1c <__prologue_saves__+0x10>
    35c8:	7b 01       	movw	r14, r22
    35ca:	8c 01       	movw	r16, r24
    35cc:	61 15       	cp	r22, r1
    35ce:	71 05       	cpc	r23, r1
    35d0:	81 05       	cpc	r24, r1
    35d2:	91 05       	cpc	r25, r1
    35d4:	19 f4       	brne	.+6      	; 0x35dc <__floatunsisf+0x20>
    35d6:	82 e0       	ldi	r24, 0x02	; 2
    35d8:	89 83       	std	Y+1, r24	; 0x01
    35da:	60 c0       	rjmp	.+192    	; 0x369c <__floatunsisf+0xe0>
    35dc:	83 e0       	ldi	r24, 0x03	; 3
    35de:	89 83       	std	Y+1, r24	; 0x01
    35e0:	8e e1       	ldi	r24, 0x1E	; 30
    35e2:	c8 2e       	mov	r12, r24
    35e4:	d1 2c       	mov	r13, r1
    35e6:	dc 82       	std	Y+4, r13	; 0x04
    35e8:	cb 82       	std	Y+3, r12	; 0x03
    35ea:	ed 82       	std	Y+5, r14	; 0x05
    35ec:	fe 82       	std	Y+6, r15	; 0x06
    35ee:	0f 83       	std	Y+7, r16	; 0x07
    35f0:	18 87       	std	Y+8, r17	; 0x08
    35f2:	c8 01       	movw	r24, r16
    35f4:	b7 01       	movw	r22, r14
    35f6:	0e 94 57 1b 	call	0x36ae	; 0x36ae <__clzsi2>
    35fa:	fc 01       	movw	r30, r24
    35fc:	31 97       	sbiw	r30, 0x01	; 1
    35fe:	f7 ff       	sbrs	r31, 7
    3600:	3b c0       	rjmp	.+118    	; 0x3678 <__floatunsisf+0xbc>
    3602:	22 27       	eor	r18, r18
    3604:	33 27       	eor	r19, r19
    3606:	2e 1b       	sub	r18, r30
    3608:	3f 0b       	sbc	r19, r31
    360a:	57 01       	movw	r10, r14
    360c:	68 01       	movw	r12, r16
    360e:	02 2e       	mov	r0, r18
    3610:	04 c0       	rjmp	.+8      	; 0x361a <__floatunsisf+0x5e>
    3612:	d6 94       	lsr	r13
    3614:	c7 94       	ror	r12
    3616:	b7 94       	ror	r11
    3618:	a7 94       	ror	r10
    361a:	0a 94       	dec	r0
    361c:	d2 f7       	brpl	.-12     	; 0x3612 <__floatunsisf+0x56>
    361e:	40 e0       	ldi	r20, 0x00	; 0
    3620:	50 e0       	ldi	r21, 0x00	; 0
    3622:	60 e0       	ldi	r22, 0x00	; 0
    3624:	70 e0       	ldi	r23, 0x00	; 0
    3626:	81 e0       	ldi	r24, 0x01	; 1
    3628:	90 e0       	ldi	r25, 0x00	; 0
    362a:	a0 e0       	ldi	r26, 0x00	; 0
    362c:	b0 e0       	ldi	r27, 0x00	; 0
    362e:	04 c0       	rjmp	.+8      	; 0x3638 <__floatunsisf+0x7c>
    3630:	88 0f       	add	r24, r24
    3632:	99 1f       	adc	r25, r25
    3634:	aa 1f       	adc	r26, r26
    3636:	bb 1f       	adc	r27, r27
    3638:	2a 95       	dec	r18
    363a:	d2 f7       	brpl	.-12     	; 0x3630 <__floatunsisf+0x74>
    363c:	01 97       	sbiw	r24, 0x01	; 1
    363e:	a1 09       	sbc	r26, r1
    3640:	b1 09       	sbc	r27, r1
    3642:	8e 21       	and	r24, r14
    3644:	9f 21       	and	r25, r15
    3646:	a0 23       	and	r26, r16
    3648:	b1 23       	and	r27, r17
    364a:	00 97       	sbiw	r24, 0x00	; 0
    364c:	a1 05       	cpc	r26, r1
    364e:	b1 05       	cpc	r27, r1
    3650:	21 f0       	breq	.+8      	; 0x365a <__floatunsisf+0x9e>
    3652:	41 e0       	ldi	r20, 0x01	; 1
    3654:	50 e0       	ldi	r21, 0x00	; 0
    3656:	60 e0       	ldi	r22, 0x00	; 0
    3658:	70 e0       	ldi	r23, 0x00	; 0
    365a:	4a 29       	or	r20, r10
    365c:	5b 29       	or	r21, r11
    365e:	6c 29       	or	r22, r12
    3660:	7d 29       	or	r23, r13
    3662:	4d 83       	std	Y+5, r20	; 0x05
    3664:	5e 83       	std	Y+6, r21	; 0x06
    3666:	6f 83       	std	Y+7, r22	; 0x07
    3668:	78 87       	std	Y+8, r23	; 0x08
    366a:	8e e1       	ldi	r24, 0x1E	; 30
    366c:	90 e0       	ldi	r25, 0x00	; 0
    366e:	8e 1b       	sub	r24, r30
    3670:	9f 0b       	sbc	r25, r31
    3672:	9c 83       	std	Y+4, r25	; 0x04
    3674:	8b 83       	std	Y+3, r24	; 0x03
    3676:	12 c0       	rjmp	.+36     	; 0x369c <__floatunsisf+0xe0>
    3678:	30 97       	sbiw	r30, 0x00	; 0
    367a:	81 f0       	breq	.+32     	; 0x369c <__floatunsisf+0xe0>
    367c:	0e 2e       	mov	r0, r30
    367e:	04 c0       	rjmp	.+8      	; 0x3688 <__floatunsisf+0xcc>
    3680:	ee 0c       	add	r14, r14
    3682:	ff 1c       	adc	r15, r15
    3684:	00 1f       	adc	r16, r16
    3686:	11 1f       	adc	r17, r17
    3688:	0a 94       	dec	r0
    368a:	d2 f7       	brpl	.-12     	; 0x3680 <__floatunsisf+0xc4>
    368c:	ed 82       	std	Y+5, r14	; 0x05
    368e:	fe 82       	std	Y+6, r15	; 0x06
    3690:	0f 83       	std	Y+7, r16	; 0x07
    3692:	18 87       	std	Y+8, r17	; 0x08
    3694:	ce 1a       	sub	r12, r30
    3696:	df 0a       	sbc	r13, r31
    3698:	dc 82       	std	Y+4, r13	; 0x04
    369a:	cb 82       	std	Y+3, r12	; 0x03
    369c:	1a 82       	std	Y+2, r1	; 0x02
    369e:	ce 01       	movw	r24, r28
    36a0:	01 96       	adiw	r24, 0x01	; 1
    36a2:	0e 94 a6 1b 	call	0x374c	; 0x374c <__pack_f>
    36a6:	28 96       	adiw	r28, 0x08	; 8
    36a8:	ea e0       	ldi	r30, 0x0A	; 10
    36aa:	0c 94 aa 1d 	jmp	0x3b54	; 0x3b54 <__epilogue_restores__+0x10>

000036ae <__clzsi2>:
    36ae:	ef 92       	push	r14
    36b0:	ff 92       	push	r15
    36b2:	0f 93       	push	r16
    36b4:	1f 93       	push	r17
    36b6:	7b 01       	movw	r14, r22
    36b8:	8c 01       	movw	r16, r24
    36ba:	80 e0       	ldi	r24, 0x00	; 0
    36bc:	e8 16       	cp	r14, r24
    36be:	80 e0       	ldi	r24, 0x00	; 0
    36c0:	f8 06       	cpc	r15, r24
    36c2:	81 e0       	ldi	r24, 0x01	; 1
    36c4:	08 07       	cpc	r16, r24
    36c6:	80 e0       	ldi	r24, 0x00	; 0
    36c8:	18 07       	cpc	r17, r24
    36ca:	88 f4       	brcc	.+34     	; 0x36ee <__clzsi2+0x40>
    36cc:	8f ef       	ldi	r24, 0xFF	; 255
    36ce:	e8 16       	cp	r14, r24
    36d0:	f1 04       	cpc	r15, r1
    36d2:	01 05       	cpc	r16, r1
    36d4:	11 05       	cpc	r17, r1
    36d6:	31 f0       	breq	.+12     	; 0x36e4 <__clzsi2+0x36>
    36d8:	28 f0       	brcs	.+10     	; 0x36e4 <__clzsi2+0x36>
    36da:	88 e0       	ldi	r24, 0x08	; 8
    36dc:	90 e0       	ldi	r25, 0x00	; 0
    36de:	a0 e0       	ldi	r26, 0x00	; 0
    36e0:	b0 e0       	ldi	r27, 0x00	; 0
    36e2:	17 c0       	rjmp	.+46     	; 0x3712 <__clzsi2+0x64>
    36e4:	80 e0       	ldi	r24, 0x00	; 0
    36e6:	90 e0       	ldi	r25, 0x00	; 0
    36e8:	a0 e0       	ldi	r26, 0x00	; 0
    36ea:	b0 e0       	ldi	r27, 0x00	; 0
    36ec:	12 c0       	rjmp	.+36     	; 0x3712 <__clzsi2+0x64>
    36ee:	80 e0       	ldi	r24, 0x00	; 0
    36f0:	e8 16       	cp	r14, r24
    36f2:	80 e0       	ldi	r24, 0x00	; 0
    36f4:	f8 06       	cpc	r15, r24
    36f6:	80 e0       	ldi	r24, 0x00	; 0
    36f8:	08 07       	cpc	r16, r24
    36fa:	81 e0       	ldi	r24, 0x01	; 1
    36fc:	18 07       	cpc	r17, r24
    36fe:	28 f0       	brcs	.+10     	; 0x370a <__clzsi2+0x5c>
    3700:	88 e1       	ldi	r24, 0x18	; 24
    3702:	90 e0       	ldi	r25, 0x00	; 0
    3704:	a0 e0       	ldi	r26, 0x00	; 0
    3706:	b0 e0       	ldi	r27, 0x00	; 0
    3708:	04 c0       	rjmp	.+8      	; 0x3712 <__clzsi2+0x64>
    370a:	80 e1       	ldi	r24, 0x10	; 16
    370c:	90 e0       	ldi	r25, 0x00	; 0
    370e:	a0 e0       	ldi	r26, 0x00	; 0
    3710:	b0 e0       	ldi	r27, 0x00	; 0
    3712:	20 e2       	ldi	r18, 0x20	; 32
    3714:	30 e0       	ldi	r19, 0x00	; 0
    3716:	40 e0       	ldi	r20, 0x00	; 0
    3718:	50 e0       	ldi	r21, 0x00	; 0
    371a:	28 1b       	sub	r18, r24
    371c:	39 0b       	sbc	r19, r25
    371e:	4a 0b       	sbc	r20, r26
    3720:	5b 0b       	sbc	r21, r27
    3722:	04 c0       	rjmp	.+8      	; 0x372c <__clzsi2+0x7e>
    3724:	16 95       	lsr	r17
    3726:	07 95       	ror	r16
    3728:	f7 94       	ror	r15
    372a:	e7 94       	ror	r14
    372c:	8a 95       	dec	r24
    372e:	d2 f7       	brpl	.-12     	; 0x3724 <__clzsi2+0x76>
    3730:	f7 01       	movw	r30, r14
    3732:	e2 52       	subi	r30, 0x22	; 34
    3734:	fd 4f       	sbci	r31, 0xFD	; 253
    3736:	80 81       	ld	r24, Z
    3738:	28 1b       	sub	r18, r24
    373a:	31 09       	sbc	r19, r1
    373c:	41 09       	sbc	r20, r1
    373e:	51 09       	sbc	r21, r1
    3740:	c9 01       	movw	r24, r18
    3742:	1f 91       	pop	r17
    3744:	0f 91       	pop	r16
    3746:	ff 90       	pop	r15
    3748:	ef 90       	pop	r14
    374a:	08 95       	ret

0000374c <__pack_f>:
    374c:	df 92       	push	r13
    374e:	ef 92       	push	r14
    3750:	ff 92       	push	r15
    3752:	0f 93       	push	r16
    3754:	1f 93       	push	r17
    3756:	fc 01       	movw	r30, r24
    3758:	e4 80       	ldd	r14, Z+4	; 0x04
    375a:	f5 80       	ldd	r15, Z+5	; 0x05
    375c:	06 81       	ldd	r16, Z+6	; 0x06
    375e:	17 81       	ldd	r17, Z+7	; 0x07
    3760:	d1 80       	ldd	r13, Z+1	; 0x01
    3762:	80 81       	ld	r24, Z
    3764:	82 30       	cpi	r24, 0x02	; 2
    3766:	48 f4       	brcc	.+18     	; 0x377a <__pack_f+0x2e>
    3768:	80 e0       	ldi	r24, 0x00	; 0
    376a:	90 e0       	ldi	r25, 0x00	; 0
    376c:	a0 e1       	ldi	r26, 0x10	; 16
    376e:	b0 e0       	ldi	r27, 0x00	; 0
    3770:	e8 2a       	or	r14, r24
    3772:	f9 2a       	or	r15, r25
    3774:	0a 2b       	or	r16, r26
    3776:	1b 2b       	or	r17, r27
    3778:	a5 c0       	rjmp	.+330    	; 0x38c4 <__pack_f+0x178>
    377a:	84 30       	cpi	r24, 0x04	; 4
    377c:	09 f4       	brne	.+2      	; 0x3780 <__pack_f+0x34>
    377e:	9f c0       	rjmp	.+318    	; 0x38be <__pack_f+0x172>
    3780:	82 30       	cpi	r24, 0x02	; 2
    3782:	21 f4       	brne	.+8      	; 0x378c <__pack_f+0x40>
    3784:	ee 24       	eor	r14, r14
    3786:	ff 24       	eor	r15, r15
    3788:	87 01       	movw	r16, r14
    378a:	05 c0       	rjmp	.+10     	; 0x3796 <__pack_f+0x4a>
    378c:	e1 14       	cp	r14, r1
    378e:	f1 04       	cpc	r15, r1
    3790:	01 05       	cpc	r16, r1
    3792:	11 05       	cpc	r17, r1
    3794:	19 f4       	brne	.+6      	; 0x379c <__pack_f+0x50>
    3796:	e0 e0       	ldi	r30, 0x00	; 0
    3798:	f0 e0       	ldi	r31, 0x00	; 0
    379a:	96 c0       	rjmp	.+300    	; 0x38c8 <__pack_f+0x17c>
    379c:	62 81       	ldd	r22, Z+2	; 0x02
    379e:	73 81       	ldd	r23, Z+3	; 0x03
    37a0:	9f ef       	ldi	r25, 0xFF	; 255
    37a2:	62 38       	cpi	r22, 0x82	; 130
    37a4:	79 07       	cpc	r23, r25
    37a6:	0c f0       	brlt	.+2      	; 0x37aa <__pack_f+0x5e>
    37a8:	5b c0       	rjmp	.+182    	; 0x3860 <__pack_f+0x114>
    37aa:	22 e8       	ldi	r18, 0x82	; 130
    37ac:	3f ef       	ldi	r19, 0xFF	; 255
    37ae:	26 1b       	sub	r18, r22
    37b0:	37 0b       	sbc	r19, r23
    37b2:	2a 31       	cpi	r18, 0x1A	; 26
    37b4:	31 05       	cpc	r19, r1
    37b6:	2c f0       	brlt	.+10     	; 0x37c2 <__pack_f+0x76>
    37b8:	20 e0       	ldi	r18, 0x00	; 0
    37ba:	30 e0       	ldi	r19, 0x00	; 0
    37bc:	40 e0       	ldi	r20, 0x00	; 0
    37be:	50 e0       	ldi	r21, 0x00	; 0
    37c0:	2a c0       	rjmp	.+84     	; 0x3816 <__pack_f+0xca>
    37c2:	b8 01       	movw	r22, r16
    37c4:	a7 01       	movw	r20, r14
    37c6:	02 2e       	mov	r0, r18
    37c8:	04 c0       	rjmp	.+8      	; 0x37d2 <__pack_f+0x86>
    37ca:	76 95       	lsr	r23
    37cc:	67 95       	ror	r22
    37ce:	57 95       	ror	r21
    37d0:	47 95       	ror	r20
    37d2:	0a 94       	dec	r0
    37d4:	d2 f7       	brpl	.-12     	; 0x37ca <__pack_f+0x7e>
    37d6:	81 e0       	ldi	r24, 0x01	; 1
    37d8:	90 e0       	ldi	r25, 0x00	; 0
    37da:	a0 e0       	ldi	r26, 0x00	; 0
    37dc:	b0 e0       	ldi	r27, 0x00	; 0
    37de:	04 c0       	rjmp	.+8      	; 0x37e8 <__pack_f+0x9c>
    37e0:	88 0f       	add	r24, r24
    37e2:	99 1f       	adc	r25, r25
    37e4:	aa 1f       	adc	r26, r26
    37e6:	bb 1f       	adc	r27, r27
    37e8:	2a 95       	dec	r18
    37ea:	d2 f7       	brpl	.-12     	; 0x37e0 <__pack_f+0x94>
    37ec:	01 97       	sbiw	r24, 0x01	; 1
    37ee:	a1 09       	sbc	r26, r1
    37f0:	b1 09       	sbc	r27, r1
    37f2:	8e 21       	and	r24, r14
    37f4:	9f 21       	and	r25, r15
    37f6:	a0 23       	and	r26, r16
    37f8:	b1 23       	and	r27, r17
    37fa:	00 97       	sbiw	r24, 0x00	; 0
    37fc:	a1 05       	cpc	r26, r1
    37fe:	b1 05       	cpc	r27, r1
    3800:	21 f0       	breq	.+8      	; 0x380a <__pack_f+0xbe>
    3802:	81 e0       	ldi	r24, 0x01	; 1
    3804:	90 e0       	ldi	r25, 0x00	; 0
    3806:	a0 e0       	ldi	r26, 0x00	; 0
    3808:	b0 e0       	ldi	r27, 0x00	; 0
    380a:	9a 01       	movw	r18, r20
    380c:	ab 01       	movw	r20, r22
    380e:	28 2b       	or	r18, r24
    3810:	39 2b       	or	r19, r25
    3812:	4a 2b       	or	r20, r26
    3814:	5b 2b       	or	r21, r27
    3816:	da 01       	movw	r26, r20
    3818:	c9 01       	movw	r24, r18
    381a:	8f 77       	andi	r24, 0x7F	; 127
    381c:	90 70       	andi	r25, 0x00	; 0
    381e:	a0 70       	andi	r26, 0x00	; 0
    3820:	b0 70       	andi	r27, 0x00	; 0
    3822:	80 34       	cpi	r24, 0x40	; 64
    3824:	91 05       	cpc	r25, r1
    3826:	a1 05       	cpc	r26, r1
    3828:	b1 05       	cpc	r27, r1
    382a:	39 f4       	brne	.+14     	; 0x383a <__pack_f+0xee>
    382c:	27 ff       	sbrs	r18, 7
    382e:	09 c0       	rjmp	.+18     	; 0x3842 <__pack_f+0xf6>
    3830:	20 5c       	subi	r18, 0xC0	; 192
    3832:	3f 4f       	sbci	r19, 0xFF	; 255
    3834:	4f 4f       	sbci	r20, 0xFF	; 255
    3836:	5f 4f       	sbci	r21, 0xFF	; 255
    3838:	04 c0       	rjmp	.+8      	; 0x3842 <__pack_f+0xf6>
    383a:	21 5c       	subi	r18, 0xC1	; 193
    383c:	3f 4f       	sbci	r19, 0xFF	; 255
    383e:	4f 4f       	sbci	r20, 0xFF	; 255
    3840:	5f 4f       	sbci	r21, 0xFF	; 255
    3842:	e0 e0       	ldi	r30, 0x00	; 0
    3844:	f0 e0       	ldi	r31, 0x00	; 0
    3846:	20 30       	cpi	r18, 0x00	; 0
    3848:	a0 e0       	ldi	r26, 0x00	; 0
    384a:	3a 07       	cpc	r19, r26
    384c:	a0 e0       	ldi	r26, 0x00	; 0
    384e:	4a 07       	cpc	r20, r26
    3850:	a0 e4       	ldi	r26, 0x40	; 64
    3852:	5a 07       	cpc	r21, r26
    3854:	10 f0       	brcs	.+4      	; 0x385a <__pack_f+0x10e>
    3856:	e1 e0       	ldi	r30, 0x01	; 1
    3858:	f0 e0       	ldi	r31, 0x00	; 0
    385a:	79 01       	movw	r14, r18
    385c:	8a 01       	movw	r16, r20
    385e:	27 c0       	rjmp	.+78     	; 0x38ae <__pack_f+0x162>
    3860:	60 38       	cpi	r22, 0x80	; 128
    3862:	71 05       	cpc	r23, r1
    3864:	64 f5       	brge	.+88     	; 0x38be <__pack_f+0x172>
    3866:	fb 01       	movw	r30, r22
    3868:	e1 58       	subi	r30, 0x81	; 129
    386a:	ff 4f       	sbci	r31, 0xFF	; 255
    386c:	d8 01       	movw	r26, r16
    386e:	c7 01       	movw	r24, r14
    3870:	8f 77       	andi	r24, 0x7F	; 127
    3872:	90 70       	andi	r25, 0x00	; 0
    3874:	a0 70       	andi	r26, 0x00	; 0
    3876:	b0 70       	andi	r27, 0x00	; 0
    3878:	80 34       	cpi	r24, 0x40	; 64
    387a:	91 05       	cpc	r25, r1
    387c:	a1 05       	cpc	r26, r1
    387e:	b1 05       	cpc	r27, r1
    3880:	39 f4       	brne	.+14     	; 0x3890 <__pack_f+0x144>
    3882:	e7 fe       	sbrs	r14, 7
    3884:	0d c0       	rjmp	.+26     	; 0x38a0 <__pack_f+0x154>
    3886:	80 e4       	ldi	r24, 0x40	; 64
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	a0 e0       	ldi	r26, 0x00	; 0
    388c:	b0 e0       	ldi	r27, 0x00	; 0
    388e:	04 c0       	rjmp	.+8      	; 0x3898 <__pack_f+0x14c>
    3890:	8f e3       	ldi	r24, 0x3F	; 63
    3892:	90 e0       	ldi	r25, 0x00	; 0
    3894:	a0 e0       	ldi	r26, 0x00	; 0
    3896:	b0 e0       	ldi	r27, 0x00	; 0
    3898:	e8 0e       	add	r14, r24
    389a:	f9 1e       	adc	r15, r25
    389c:	0a 1f       	adc	r16, r26
    389e:	1b 1f       	adc	r17, r27
    38a0:	17 ff       	sbrs	r17, 7
    38a2:	05 c0       	rjmp	.+10     	; 0x38ae <__pack_f+0x162>
    38a4:	16 95       	lsr	r17
    38a6:	07 95       	ror	r16
    38a8:	f7 94       	ror	r15
    38aa:	e7 94       	ror	r14
    38ac:	31 96       	adiw	r30, 0x01	; 1
    38ae:	87 e0       	ldi	r24, 0x07	; 7
    38b0:	16 95       	lsr	r17
    38b2:	07 95       	ror	r16
    38b4:	f7 94       	ror	r15
    38b6:	e7 94       	ror	r14
    38b8:	8a 95       	dec	r24
    38ba:	d1 f7       	brne	.-12     	; 0x38b0 <__pack_f+0x164>
    38bc:	05 c0       	rjmp	.+10     	; 0x38c8 <__pack_f+0x17c>
    38be:	ee 24       	eor	r14, r14
    38c0:	ff 24       	eor	r15, r15
    38c2:	87 01       	movw	r16, r14
    38c4:	ef ef       	ldi	r30, 0xFF	; 255
    38c6:	f0 e0       	ldi	r31, 0x00	; 0
    38c8:	6e 2f       	mov	r22, r30
    38ca:	67 95       	ror	r22
    38cc:	66 27       	eor	r22, r22
    38ce:	67 95       	ror	r22
    38d0:	90 2f       	mov	r25, r16
    38d2:	9f 77       	andi	r25, 0x7F	; 127
    38d4:	d7 94       	ror	r13
    38d6:	dd 24       	eor	r13, r13
    38d8:	d7 94       	ror	r13
    38da:	8e 2f       	mov	r24, r30
    38dc:	86 95       	lsr	r24
    38de:	49 2f       	mov	r20, r25
    38e0:	46 2b       	or	r20, r22
    38e2:	58 2f       	mov	r21, r24
    38e4:	5d 29       	or	r21, r13
    38e6:	b7 01       	movw	r22, r14
    38e8:	ca 01       	movw	r24, r20
    38ea:	1f 91       	pop	r17
    38ec:	0f 91       	pop	r16
    38ee:	ff 90       	pop	r15
    38f0:	ef 90       	pop	r14
    38f2:	df 90       	pop	r13
    38f4:	08 95       	ret

000038f6 <__unpack_f>:
    38f6:	fc 01       	movw	r30, r24
    38f8:	db 01       	movw	r26, r22
    38fa:	40 81       	ld	r20, Z
    38fc:	51 81       	ldd	r21, Z+1	; 0x01
    38fe:	22 81       	ldd	r18, Z+2	; 0x02
    3900:	62 2f       	mov	r22, r18
    3902:	6f 77       	andi	r22, 0x7F	; 127
    3904:	70 e0       	ldi	r23, 0x00	; 0
    3906:	22 1f       	adc	r18, r18
    3908:	22 27       	eor	r18, r18
    390a:	22 1f       	adc	r18, r18
    390c:	93 81       	ldd	r25, Z+3	; 0x03
    390e:	89 2f       	mov	r24, r25
    3910:	88 0f       	add	r24, r24
    3912:	82 2b       	or	r24, r18
    3914:	28 2f       	mov	r18, r24
    3916:	30 e0       	ldi	r19, 0x00	; 0
    3918:	99 1f       	adc	r25, r25
    391a:	99 27       	eor	r25, r25
    391c:	99 1f       	adc	r25, r25
    391e:	11 96       	adiw	r26, 0x01	; 1
    3920:	9c 93       	st	X, r25
    3922:	11 97       	sbiw	r26, 0x01	; 1
    3924:	21 15       	cp	r18, r1
    3926:	31 05       	cpc	r19, r1
    3928:	a9 f5       	brne	.+106    	; 0x3994 <__unpack_f+0x9e>
    392a:	41 15       	cp	r20, r1
    392c:	51 05       	cpc	r21, r1
    392e:	61 05       	cpc	r22, r1
    3930:	71 05       	cpc	r23, r1
    3932:	11 f4       	brne	.+4      	; 0x3938 <__unpack_f+0x42>
    3934:	82 e0       	ldi	r24, 0x02	; 2
    3936:	37 c0       	rjmp	.+110    	; 0x39a6 <__unpack_f+0xb0>
    3938:	82 e8       	ldi	r24, 0x82	; 130
    393a:	9f ef       	ldi	r25, 0xFF	; 255
    393c:	13 96       	adiw	r26, 0x03	; 3
    393e:	9c 93       	st	X, r25
    3940:	8e 93       	st	-X, r24
    3942:	12 97       	sbiw	r26, 0x02	; 2
    3944:	9a 01       	movw	r18, r20
    3946:	ab 01       	movw	r20, r22
    3948:	67 e0       	ldi	r22, 0x07	; 7
    394a:	22 0f       	add	r18, r18
    394c:	33 1f       	adc	r19, r19
    394e:	44 1f       	adc	r20, r20
    3950:	55 1f       	adc	r21, r21
    3952:	6a 95       	dec	r22
    3954:	d1 f7       	brne	.-12     	; 0x394a <__unpack_f+0x54>
    3956:	83 e0       	ldi	r24, 0x03	; 3
    3958:	8c 93       	st	X, r24
    395a:	0d c0       	rjmp	.+26     	; 0x3976 <__unpack_f+0x80>
    395c:	22 0f       	add	r18, r18
    395e:	33 1f       	adc	r19, r19
    3960:	44 1f       	adc	r20, r20
    3962:	55 1f       	adc	r21, r21
    3964:	12 96       	adiw	r26, 0x02	; 2
    3966:	8d 91       	ld	r24, X+
    3968:	9c 91       	ld	r25, X
    396a:	13 97       	sbiw	r26, 0x03	; 3
    396c:	01 97       	sbiw	r24, 0x01	; 1
    396e:	13 96       	adiw	r26, 0x03	; 3
    3970:	9c 93       	st	X, r25
    3972:	8e 93       	st	-X, r24
    3974:	12 97       	sbiw	r26, 0x02	; 2
    3976:	20 30       	cpi	r18, 0x00	; 0
    3978:	80 e0       	ldi	r24, 0x00	; 0
    397a:	38 07       	cpc	r19, r24
    397c:	80 e0       	ldi	r24, 0x00	; 0
    397e:	48 07       	cpc	r20, r24
    3980:	80 e4       	ldi	r24, 0x40	; 64
    3982:	58 07       	cpc	r21, r24
    3984:	58 f3       	brcs	.-42     	; 0x395c <__unpack_f+0x66>
    3986:	14 96       	adiw	r26, 0x04	; 4
    3988:	2d 93       	st	X+, r18
    398a:	3d 93       	st	X+, r19
    398c:	4d 93       	st	X+, r20
    398e:	5c 93       	st	X, r21
    3990:	17 97       	sbiw	r26, 0x07	; 7
    3992:	08 95       	ret
    3994:	2f 3f       	cpi	r18, 0xFF	; 255
    3996:	31 05       	cpc	r19, r1
    3998:	79 f4       	brne	.+30     	; 0x39b8 <__unpack_f+0xc2>
    399a:	41 15       	cp	r20, r1
    399c:	51 05       	cpc	r21, r1
    399e:	61 05       	cpc	r22, r1
    39a0:	71 05       	cpc	r23, r1
    39a2:	19 f4       	brne	.+6      	; 0x39aa <__unpack_f+0xb4>
    39a4:	84 e0       	ldi	r24, 0x04	; 4
    39a6:	8c 93       	st	X, r24
    39a8:	08 95       	ret
    39aa:	64 ff       	sbrs	r22, 4
    39ac:	03 c0       	rjmp	.+6      	; 0x39b4 <__unpack_f+0xbe>
    39ae:	81 e0       	ldi	r24, 0x01	; 1
    39b0:	8c 93       	st	X, r24
    39b2:	12 c0       	rjmp	.+36     	; 0x39d8 <__unpack_f+0xe2>
    39b4:	1c 92       	st	X, r1
    39b6:	10 c0       	rjmp	.+32     	; 0x39d8 <__unpack_f+0xe2>
    39b8:	2f 57       	subi	r18, 0x7F	; 127
    39ba:	30 40       	sbci	r19, 0x00	; 0
    39bc:	13 96       	adiw	r26, 0x03	; 3
    39be:	3c 93       	st	X, r19
    39c0:	2e 93       	st	-X, r18
    39c2:	12 97       	sbiw	r26, 0x02	; 2
    39c4:	83 e0       	ldi	r24, 0x03	; 3
    39c6:	8c 93       	st	X, r24
    39c8:	87 e0       	ldi	r24, 0x07	; 7
    39ca:	44 0f       	add	r20, r20
    39cc:	55 1f       	adc	r21, r21
    39ce:	66 1f       	adc	r22, r22
    39d0:	77 1f       	adc	r23, r23
    39d2:	8a 95       	dec	r24
    39d4:	d1 f7       	brne	.-12     	; 0x39ca <__unpack_f+0xd4>
    39d6:	70 64       	ori	r23, 0x40	; 64
    39d8:	14 96       	adiw	r26, 0x04	; 4
    39da:	4d 93       	st	X+, r20
    39dc:	5d 93       	st	X+, r21
    39de:	6d 93       	st	X+, r22
    39e0:	7c 93       	st	X, r23
    39e2:	17 97       	sbiw	r26, 0x07	; 7
    39e4:	08 95       	ret

000039e6 <__fpcmp_parts_f>:
    39e6:	1f 93       	push	r17
    39e8:	dc 01       	movw	r26, r24
    39ea:	fb 01       	movw	r30, r22
    39ec:	9c 91       	ld	r25, X
    39ee:	92 30       	cpi	r25, 0x02	; 2
    39f0:	08 f4       	brcc	.+2      	; 0x39f4 <__fpcmp_parts_f+0xe>
    39f2:	47 c0       	rjmp	.+142    	; 0x3a82 <__fpcmp_parts_f+0x9c>
    39f4:	80 81       	ld	r24, Z
    39f6:	82 30       	cpi	r24, 0x02	; 2
    39f8:	08 f4       	brcc	.+2      	; 0x39fc <__fpcmp_parts_f+0x16>
    39fa:	43 c0       	rjmp	.+134    	; 0x3a82 <__fpcmp_parts_f+0x9c>
    39fc:	94 30       	cpi	r25, 0x04	; 4
    39fe:	51 f4       	brne	.+20     	; 0x3a14 <__fpcmp_parts_f+0x2e>
    3a00:	11 96       	adiw	r26, 0x01	; 1
    3a02:	1c 91       	ld	r17, X
    3a04:	84 30       	cpi	r24, 0x04	; 4
    3a06:	99 f5       	brne	.+102    	; 0x3a6e <__fpcmp_parts_f+0x88>
    3a08:	81 81       	ldd	r24, Z+1	; 0x01
    3a0a:	68 2f       	mov	r22, r24
    3a0c:	70 e0       	ldi	r23, 0x00	; 0
    3a0e:	61 1b       	sub	r22, r17
    3a10:	71 09       	sbc	r23, r1
    3a12:	3f c0       	rjmp	.+126    	; 0x3a92 <__fpcmp_parts_f+0xac>
    3a14:	84 30       	cpi	r24, 0x04	; 4
    3a16:	21 f0       	breq	.+8      	; 0x3a20 <__fpcmp_parts_f+0x3a>
    3a18:	92 30       	cpi	r25, 0x02	; 2
    3a1a:	31 f4       	brne	.+12     	; 0x3a28 <__fpcmp_parts_f+0x42>
    3a1c:	82 30       	cpi	r24, 0x02	; 2
    3a1e:	b9 f1       	breq	.+110    	; 0x3a8e <__fpcmp_parts_f+0xa8>
    3a20:	81 81       	ldd	r24, Z+1	; 0x01
    3a22:	88 23       	and	r24, r24
    3a24:	89 f1       	breq	.+98     	; 0x3a88 <__fpcmp_parts_f+0xa2>
    3a26:	2d c0       	rjmp	.+90     	; 0x3a82 <__fpcmp_parts_f+0x9c>
    3a28:	11 96       	adiw	r26, 0x01	; 1
    3a2a:	1c 91       	ld	r17, X
    3a2c:	11 97       	sbiw	r26, 0x01	; 1
    3a2e:	82 30       	cpi	r24, 0x02	; 2
    3a30:	f1 f0       	breq	.+60     	; 0x3a6e <__fpcmp_parts_f+0x88>
    3a32:	81 81       	ldd	r24, Z+1	; 0x01
    3a34:	18 17       	cp	r17, r24
    3a36:	d9 f4       	brne	.+54     	; 0x3a6e <__fpcmp_parts_f+0x88>
    3a38:	12 96       	adiw	r26, 0x02	; 2
    3a3a:	2d 91       	ld	r18, X+
    3a3c:	3c 91       	ld	r19, X
    3a3e:	13 97       	sbiw	r26, 0x03	; 3
    3a40:	82 81       	ldd	r24, Z+2	; 0x02
    3a42:	93 81       	ldd	r25, Z+3	; 0x03
    3a44:	82 17       	cp	r24, r18
    3a46:	93 07       	cpc	r25, r19
    3a48:	94 f0       	brlt	.+36     	; 0x3a6e <__fpcmp_parts_f+0x88>
    3a4a:	28 17       	cp	r18, r24
    3a4c:	39 07       	cpc	r19, r25
    3a4e:	bc f0       	brlt	.+46     	; 0x3a7e <__fpcmp_parts_f+0x98>
    3a50:	14 96       	adiw	r26, 0x04	; 4
    3a52:	8d 91       	ld	r24, X+
    3a54:	9d 91       	ld	r25, X+
    3a56:	0d 90       	ld	r0, X+
    3a58:	bc 91       	ld	r27, X
    3a5a:	a0 2d       	mov	r26, r0
    3a5c:	24 81       	ldd	r18, Z+4	; 0x04
    3a5e:	35 81       	ldd	r19, Z+5	; 0x05
    3a60:	46 81       	ldd	r20, Z+6	; 0x06
    3a62:	57 81       	ldd	r21, Z+7	; 0x07
    3a64:	28 17       	cp	r18, r24
    3a66:	39 07       	cpc	r19, r25
    3a68:	4a 07       	cpc	r20, r26
    3a6a:	5b 07       	cpc	r21, r27
    3a6c:	18 f4       	brcc	.+6      	; 0x3a74 <__fpcmp_parts_f+0x8e>
    3a6e:	11 23       	and	r17, r17
    3a70:	41 f0       	breq	.+16     	; 0x3a82 <__fpcmp_parts_f+0x9c>
    3a72:	0a c0       	rjmp	.+20     	; 0x3a88 <__fpcmp_parts_f+0xa2>
    3a74:	82 17       	cp	r24, r18
    3a76:	93 07       	cpc	r25, r19
    3a78:	a4 07       	cpc	r26, r20
    3a7a:	b5 07       	cpc	r27, r21
    3a7c:	40 f4       	brcc	.+16     	; 0x3a8e <__fpcmp_parts_f+0xa8>
    3a7e:	11 23       	and	r17, r17
    3a80:	19 f0       	breq	.+6      	; 0x3a88 <__fpcmp_parts_f+0xa2>
    3a82:	61 e0       	ldi	r22, 0x01	; 1
    3a84:	70 e0       	ldi	r23, 0x00	; 0
    3a86:	05 c0       	rjmp	.+10     	; 0x3a92 <__fpcmp_parts_f+0xac>
    3a88:	6f ef       	ldi	r22, 0xFF	; 255
    3a8a:	7f ef       	ldi	r23, 0xFF	; 255
    3a8c:	02 c0       	rjmp	.+4      	; 0x3a92 <__fpcmp_parts_f+0xac>
    3a8e:	60 e0       	ldi	r22, 0x00	; 0
    3a90:	70 e0       	ldi	r23, 0x00	; 0
    3a92:	cb 01       	movw	r24, r22
    3a94:	1f 91       	pop	r17
    3a96:	08 95       	ret

00003a98 <atoi>:
    3a98:	fc 01       	movw	r30, r24
    3a9a:	88 27       	eor	r24, r24
    3a9c:	99 27       	eor	r25, r25
    3a9e:	e8 94       	clt
    3aa0:	21 91       	ld	r18, Z+
    3aa2:	20 32       	cpi	r18, 0x20	; 32
    3aa4:	e9 f3       	breq	.-6      	; 0x3aa0 <atoi+0x8>
    3aa6:	29 30       	cpi	r18, 0x09	; 9
    3aa8:	10 f0       	brcs	.+4      	; 0x3aae <atoi+0x16>
    3aaa:	2e 30       	cpi	r18, 0x0E	; 14
    3aac:	c8 f3       	brcs	.-14     	; 0x3aa0 <atoi+0x8>
    3aae:	2b 32       	cpi	r18, 0x2B	; 43
    3ab0:	41 f0       	breq	.+16     	; 0x3ac2 <atoi+0x2a>
    3ab2:	2d 32       	cpi	r18, 0x2D	; 45
    3ab4:	39 f4       	brne	.+14     	; 0x3ac4 <atoi+0x2c>
    3ab6:	68 94       	set
    3ab8:	04 c0       	rjmp	.+8      	; 0x3ac2 <atoi+0x2a>
    3aba:	0e 94 6a 1d 	call	0x3ad4	; 0x3ad4 <__mulhi_const_10>
    3abe:	82 0f       	add	r24, r18
    3ac0:	91 1d       	adc	r25, r1
    3ac2:	21 91       	ld	r18, Z+
    3ac4:	20 53       	subi	r18, 0x30	; 48
    3ac6:	2a 30       	cpi	r18, 0x0A	; 10
    3ac8:	c0 f3       	brcs	.-16     	; 0x3aba <atoi+0x22>
    3aca:	1e f4       	brtc	.+6      	; 0x3ad2 <atoi+0x3a>
    3acc:	90 95       	com	r25
    3ace:	81 95       	neg	r24
    3ad0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ad2:	08 95       	ret

00003ad4 <__mulhi_const_10>:
    3ad4:	7a e0       	ldi	r23, 0x0A	; 10
    3ad6:	97 9f       	mul	r25, r23
    3ad8:	90 2d       	mov	r25, r0
    3ada:	87 9f       	mul	r24, r23
    3adc:	80 2d       	mov	r24, r0
    3ade:	91 0d       	add	r25, r1
    3ae0:	11 24       	eor	r1, r1
    3ae2:	08 95       	ret

00003ae4 <__udivmodhi4>:
    3ae4:	aa 1b       	sub	r26, r26
    3ae6:	bb 1b       	sub	r27, r27
    3ae8:	51 e1       	ldi	r21, 0x11	; 17
    3aea:	07 c0       	rjmp	.+14     	; 0x3afa <__udivmodhi4_ep>

00003aec <__udivmodhi4_loop>:
    3aec:	aa 1f       	adc	r26, r26
    3aee:	bb 1f       	adc	r27, r27
    3af0:	a6 17       	cp	r26, r22
    3af2:	b7 07       	cpc	r27, r23
    3af4:	10 f0       	brcs	.+4      	; 0x3afa <__udivmodhi4_ep>
    3af6:	a6 1b       	sub	r26, r22
    3af8:	b7 0b       	sbc	r27, r23

00003afa <__udivmodhi4_ep>:
    3afa:	88 1f       	adc	r24, r24
    3afc:	99 1f       	adc	r25, r25
    3afe:	5a 95       	dec	r21
    3b00:	a9 f7       	brne	.-22     	; 0x3aec <__udivmodhi4_loop>
    3b02:	80 95       	com	r24
    3b04:	90 95       	com	r25
    3b06:	bc 01       	movw	r22, r24
    3b08:	cd 01       	movw	r24, r26
    3b0a:	08 95       	ret

00003b0c <__prologue_saves__>:
    3b0c:	2f 92       	push	r2
    3b0e:	3f 92       	push	r3
    3b10:	4f 92       	push	r4
    3b12:	5f 92       	push	r5
    3b14:	6f 92       	push	r6
    3b16:	7f 92       	push	r7
    3b18:	8f 92       	push	r8
    3b1a:	9f 92       	push	r9
    3b1c:	af 92       	push	r10
    3b1e:	bf 92       	push	r11
    3b20:	cf 92       	push	r12
    3b22:	df 92       	push	r13
    3b24:	ef 92       	push	r14
    3b26:	ff 92       	push	r15
    3b28:	0f 93       	push	r16
    3b2a:	1f 93       	push	r17
    3b2c:	cf 93       	push	r28
    3b2e:	df 93       	push	r29
    3b30:	cd b7       	in	r28, 0x3d	; 61
    3b32:	de b7       	in	r29, 0x3e	; 62
    3b34:	ca 1b       	sub	r28, r26
    3b36:	db 0b       	sbc	r29, r27
    3b38:	0f b6       	in	r0, 0x3f	; 63
    3b3a:	f8 94       	cli
    3b3c:	de bf       	out	0x3e, r29	; 62
    3b3e:	0f be       	out	0x3f, r0	; 63
    3b40:	cd bf       	out	0x3d, r28	; 61
    3b42:	19 94       	eijmp

00003b44 <__epilogue_restores__>:
    3b44:	2a 88       	ldd	r2, Y+18	; 0x12
    3b46:	39 88       	ldd	r3, Y+17	; 0x11
    3b48:	48 88       	ldd	r4, Y+16	; 0x10
    3b4a:	5f 84       	ldd	r5, Y+15	; 0x0f
    3b4c:	6e 84       	ldd	r6, Y+14	; 0x0e
    3b4e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3b50:	8c 84       	ldd	r8, Y+12	; 0x0c
    3b52:	9b 84       	ldd	r9, Y+11	; 0x0b
    3b54:	aa 84       	ldd	r10, Y+10	; 0x0a
    3b56:	b9 84       	ldd	r11, Y+9	; 0x09
    3b58:	c8 84       	ldd	r12, Y+8	; 0x08
    3b5a:	df 80       	ldd	r13, Y+7	; 0x07
    3b5c:	ee 80       	ldd	r14, Y+6	; 0x06
    3b5e:	fd 80       	ldd	r15, Y+5	; 0x05
    3b60:	0c 81       	ldd	r16, Y+4	; 0x04
    3b62:	1b 81       	ldd	r17, Y+3	; 0x03
    3b64:	aa 81       	ldd	r26, Y+2	; 0x02
    3b66:	b9 81       	ldd	r27, Y+1	; 0x01
    3b68:	ce 0f       	add	r28, r30
    3b6a:	d1 1d       	adc	r29, r1
    3b6c:	0f b6       	in	r0, 0x3f	; 63
    3b6e:	f8 94       	cli
    3b70:	de bf       	out	0x3e, r29	; 62
    3b72:	0f be       	out	0x3f, r0	; 63
    3b74:	cd bf       	out	0x3d, r28	; 61
    3b76:	ed 01       	movw	r28, r26
    3b78:	08 95       	ret

00003b7a <_exit>:
    3b7a:	f8 94       	cli

00003b7c <__stop_program>:
    3b7c:	ff cf       	rjmp	.-2      	; 0x3b7c <__stop_program>
